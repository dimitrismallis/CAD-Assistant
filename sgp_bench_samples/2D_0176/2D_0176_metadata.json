{
  "pid": 176,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Asymmetrical",
    "B": "Horizontal symmetry",
    "C": "Vertical symmetry",
    "D": "Horizontal and vertical symmetry"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0750, pntY=0.0711, startParam=-0.0289, endParam=0.0211, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0851, pntY=0.0500, startParam=-0.0101, endParam=0.0049, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0250, pntY=0.0722, startParam=-0.0278, endParam=0.0222, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 0));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0171, pntY=0.0500, startParam=-0.0079, endParam=0.0071, isConstruction=False);PerpendicularConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0250, startParam=-0.0150, endParam=0.0250, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1000, pntY=0.0250, startParam=-0.0150, endParam=0.0250, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Point(x=-0.0000, y=0.0500, isConstruction=False);CoincidentConstraint(references=(19, 0));CoincidentConstraint(references=(19, 13));CoincidentConstraint(references=(19, 10));20:Arc(xCenter=0.0100, yCenter=0.0400, xDir=1.0000, yDir=0.0000, radius=0.0100, startParam=1.5708, endParam=3.1416, clockwise=False, isConstruction=False);TangentConstraint(references=(20, 10));TangentConstraint(references=(20, 13));21:SN_Center;SubnodeConstraint(references=(21, 20));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 12));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 14));24:Point(x=0.1000, y=0.0500, isConstruction=False);HorizontalConstraint(references=(24, 3));CoincidentConstraint(references=(24, 0));CoincidentConstraint(references=(24, 16));CoincidentConstraint(references=(24, 4));25:Arc(xCenter=0.0900, yCenter=0.0400, xDir=1.0000, yDir=0.0000, radius=0.0100, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(25, 4));TangentConstraint(references=(25, 16));26:SN_Center;SubnodeConstraint(references=(26, 25));27:SN_Start;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 17));28:SN_End;SubnodeConstraint(references=(28, 25));CoincidentConstraint(references=(28, 6));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the symmetry type of the object shown in the image?",
  "fcstd_file": "2D_0176.FCStd",
  "isconstruction_file": "2D_0176_isconstruction.json"
}