{
  "pid": 400,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Above",
    "B": "Below",
    "C": "left",
    "D": "right"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.5799, pntY=0.7550, startParam=-0.0932, endParam=0.1100, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.5758, pntY=0.8566, startParam=-0.0973, endParam=0.1059, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=1.0000, pntX=0.6731, pntY=0.7779, startParam=-0.0229, endParam=0.0787, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=1.0000, pntX=0.4699, pntY=0.7804, startParam=-0.0254, endParam=0.0762, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.9534, pntY=0.8566, startParam=-0.2803, endParam=-0.2041, isConstruction=True);HorizontalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 5));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=-0.7071, dirY=-0.7071, pntX=0.8496, pntY=0.9569, startParam=0.1418, endParam=0.2496, isConstruction=True);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));VerticalConstraint(references=(18, 14));19:Line(dirX=0.0000, dirY=1.0000, pntX=0.6731, pntY=0.8527, startParam=-0.0723, endParam=0.0039, isConstruction=True);EqualConstraint(references=(19, 13));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 14));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.8025, pntY=0.7621, startParam=0.0074, endParam=0.0471, isConstruction=True);HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=-0.7071, dirY=-0.7071, pntX=0.8299, pntY=0.7424, startParam=-0.0279, endParam=0.0283, isConstruction=True);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));VerticalConstraint(references=(27, 23));28:Line(dirX=0.0000, dirY=1.0000, pntX=0.8099, pntY=0.6891, startParam=0.0333, endParam=0.0730, isConstruction=True);EqualConstraint(references=(28, 22));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 23));31:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the position of the bigger triangle relative to the rectangle?",
  "fcstd_file": "2D_0400.FCStd",
  "isconstruction_file": "2D_0400_isconstruction.json"
}