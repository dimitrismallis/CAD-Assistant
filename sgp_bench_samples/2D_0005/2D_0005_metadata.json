{
  "pid": 5,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.4870, dirY=-0.8734, pntX=-0.0166, pntY=-0.0298, startParam=0.0004, endParam=0.0009, isConstruction=False);NormalConstraint(references=(1, 0));2:SN_Start;SubnodeConstraint(references=(2, 1));MidpointConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=-0.8618, dirY=0.5073, pntX=-0.0209, pntY=-0.0280, startParam=-0.0046, endParam=0.0202, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));MidpointConstraint(references=(5, 1));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0269, pntY=-0.0178, startParam=-0.0114, endParam=0.0219, isConstruction=False);HorizontalConstraint(references=(7,));EqualConstraint(references=(7, 0));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0050, pntY=-0.0279, startParam=-0.0101, endParam=0.0042, isConstruction=True);VerticalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Line(dirX=-0.4579, dirY=0.8890, pntX=-0.0221, pntY=-0.0204, startParam=-0.0112, endParam=0.0136, isConstruction=True);EqualConstraint(references=(13, 4));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 5));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Circle(xCenter=-0.0169, yCenter=-0.0304, xDir=1.0000, yDir=0.0000, radius=0.0248, clockwise=False, isConstruction=True);CoincidentConstraint(references=(16, 6));17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 5));18:Line(dirX=0.3120, dirY=-0.9501, pntX=-0.0234, pntY=-0.0107, startParam=-0.0230, endParam=0.0207, isConstruction=True);19:SN_Start;SubnodeConstraint(references=(19, 18));ConcentricConstraint(references=(19, 0));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 5));21:Line(dirX=-0.9223, dirY=0.3865, pntX=-0.0510, pntY=-0.0161, startParam=-0.0369, endParam=0.0067, isConstruction=False);EqualConstraint(references=(21, 18));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 5));23:SN_End;SubnodeConstraint(references=(23, 21));24:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0321, pntY=-0.0304, startParam=-0.0151, endParam=0.0151, isConstruction=False);HorizontalConstraint(references=(24,));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 5));26:SN_End;SubnodeConstraint(references=(26, 24));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many solid straight lines are visible in the object?",
  "fcstd_file": "2D_0005.FCStd",
  "isconstruction_file": "2D_0005_isconstruction.json"
}