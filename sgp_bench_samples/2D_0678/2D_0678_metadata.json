{
  "pid": 678,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Four",
    "D": "Three"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=1.0000, pntX=-15.1870, pntY=2.2789, startParam=-0.2829, endParam=0.4211, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-14.9349, pntY=2.7000, startParam=-0.2521, endParam=0.4519, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-14.4830, pntY=2.3480, startParam=-0.3520, endParam=0.3520, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));HorizontalConstraint(references=(9, 2));10:Line(dirX=-1.0000, dirY=0.0000, pntX=-14.8350, pntY=1.9960, startParam=-0.3520, endParam=0.3520, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=0.0000, dirY=1.0000, pntX=-13.7790, pntY=2.3480, startParam=-0.3520, endParam=0.3520, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));HorizontalConstraint(references=(15, 3));16:Line(dirX=1.0000, dirY=0.0000, pntX=-13.4787, pntY=2.7000, startParam=-0.3003, endParam=0.4037, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-13.0750, pntY=2.3480, startParam=-0.3520, endParam=0.3520, isConstruction=False);PerpendicularConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));HorizontalConstraint(references=(21, 2));22:Line(dirX=-1.0000, dirY=0.0000, pntX=-13.4270, pntY=1.9960, startParam=-0.3520, endParam=0.3520, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 14));25:Line(dirX=0.0000, dirY=1.0000, pntX=-12.3710, pntY=2.3480, startParam=-0.3520, endParam=0.3520, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));HorizontalConstraint(references=(27, 3));28:Line(dirX=1.0000, dirY=0.0000, pntX=-12.0225, pntY=2.7000, startParam=-0.3485, endParam=0.3555, isConstruction=False);HorizontalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=0.0000, dirY=-1.0000, pntX=-11.6670, pntY=2.3480, startParam=-0.3520, endParam=0.3520, isConstruction=False);PerpendicularConstraint(references=(31, 28));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));HorizontalConstraint(references=(33, 2));34:Line(dirX=-1.0000, dirY=0.0000, pntX=-12.0190, pntY=1.9960, startParam=-0.3520, endParam=0.3520, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 26));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many distinct objects are visible in the image?",
  "fcstd_file": "2D_0678.FCStd",
  "isconstruction_file": "2D_0678_isconstruction.json"
}