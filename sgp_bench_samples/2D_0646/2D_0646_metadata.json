{
  "pid": 646,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "5",
    "B": "6",
    "C": "7",
    "D": "8"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0415, pntY=0.0330, startParam=-0.1505, endParam=0.0415, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0467, pntY=-0.0330, startParam=-0.1453, endParam=0.0467, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.1920, pntY=-0.0059, startParam=-0.0389, endParam=0.0271, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=1.0000, dirY=0.0000, pntX=0.0714, pntY=0.0330, startParam=-0.0714, endParam=0.1206, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.0598, pntY=-0.0330, startParam=-0.0598, endParam=0.1322, isConstruction=False);ParallelConstraint(references=(13, 10));HorizontalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1920, pntY=-0.0127, startParam=-0.0457, endParam=0.0203, isConstruction=False);DistanceConstraint(references=(16, 7), direction=MINIMUM, length=0.384 METER, halfSpace0=LEFT, halfSpace1=RIGHT);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 12));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 15));19:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(19, 6, 3));CoincidentConstraint(references=(19, 0));20:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(20, 14, 11));CoincidentConstraint(references=(20, 19));21:Circle(xCenter=-0.1620, yCenter=0.0035, xDir=1.0000, yDir=0.0000, radius=0.0245, clockwise=False, isConstruction=False);DiameterConstraint(references=(21,), length=0.049 METER);DistanceConstraint(references=(21, 7), direction=MINIMUM, length=0.0055 METER, halfSpace0=RIGHT, halfSpace1=LEFT);DistanceConstraint(references=(21, 1), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);22:SN_Center;SubnodeConstraint(references=(22, 21));23:Circle(xCenter=-0.1080, yCenter=0.0035, xDir=1.0000, yDir=0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(23, 21));DistanceConstraint(references=(23, 21), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);24:SN_Center;SubnodeConstraint(references=(24, 23));HorizontalConstraint(references=(24, 22));25:Circle(xCenter=-0.0540, yCenter=0.0035, xDir=1.0000, yDir=0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(25, 21));DistanceConstraint(references=(25, 23), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);26:SN_Center;SubnodeConstraint(references=(26, 25));HorizontalConstraint(references=(26, 24));27:Circle(xCenter=0.0000, yCenter=0.0035, xDir=1.0000, yDir=-0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(27, 21));DistanceConstraint(references=(27, 25), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);28:SN_Center;SubnodeConstraint(references=(28, 27));HorizontalConstraint(references=(28, 26));29:Circle(xCenter=0.0540, yCenter=0.0035, xDir=1.0000, yDir=0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(29, 21));DistanceConstraint(references=(29, 27), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);30:SN_Center;SubnodeConstraint(references=(30, 29));HorizontalConstraint(references=(30, 28));31:Circle(xCenter=0.1080, yCenter=0.0035, xDir=1.0000, yDir=-0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(31, 21));DistanceConstraint(references=(31, 29), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);32:SN_Center;SubnodeConstraint(references=(32, 31));HorizontalConstraint(references=(32, 30));33:Circle(xCenter=0.1620, yCenter=0.0035, xDir=1.0000, yDir=0.0000, radius=0.0245, clockwise=False, isConstruction=False);EqualConstraint(references=(33, 21));DistanceConstraint(references=(33, 31), direction=MINIMUM, length=#a, halfSpace0=RIGHT, halfSpace1=RIGHT);34:SN_Center;SubnodeConstraint(references=(34, 33));HorizontalConstraint(references=(34, 32));35:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0270, pntY=0.0000, startParam=-0.0330, endParam=0.0330, isConstruction=False);PerpendicularConstraint(references=(35, 13));36:SN_Start;SubnodeConstraint(references=(36, 35));CoincidentConstraint(references=(36, 10));37:SN_End;SubnodeConstraint(references=(37, 35));CoincidentConstraint(references=(37, 13));38:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are there in the image?",
  "fcstd_file": "2D_0646.FCStd",
  "isconstruction_file": "2D_0646_isconstruction.json"
}