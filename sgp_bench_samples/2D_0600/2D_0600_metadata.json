{
  "pid": 600,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Two",
    "B": "Four",
    "C": "Six",
    "D": "Eight"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0030, pntY=-0.0040, startParam=-0.0030, endParam=0.0030, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));VerticalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0060, pntY=0.0004, startParam=-0.0044, endParam=0.0056, isConstruction=False);VerticalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0007, pntY=0.0270, startParam=-0.0123, endParam=-0.0053, isConstruction=False);HorizontalConstraint(references=(7,));DistanceConstraint(references=(7, 1), direction=MINIMUM, length=0.031 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0060, pntY=0.0188, startParam=-0.0082, endParam=0.0038, isConstruction=False);VerticalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.5547, dirY=-0.8321, pntX=-0.0102, pntY=0.0213, startParam=0.0075, endParam=0.0184, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));VerticalConstraint(references=(15, 0));HorizontalConstraint(references=(15, 6));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0031, startParam=-0.0029, endParam=0.0031, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0021, startParam=-0.0021, endParam=0.0019, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 2));22:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0130, pntY=0.0208, startParam=-0.0062, endParam=0.0088, isConstruction=False);PerpendicularConstraint(references=(22, 7));DistanceConstraint(references=(22, 4), direction=MINIMUM, length=0.007 METER, halfSpace0=LEFT, halfSpace1=LEFT);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 8));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=0.7593, dirY=-0.6508, pntX=-0.0149, pntY=0.0136, startParam=0.0024, endParam=0.0117, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 6));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many sides does the CAD object have?",
  "fcstd_file": "2D_0600.FCStd",
  "isconstruction_file": "2D_0600_isconstruction.json"
}