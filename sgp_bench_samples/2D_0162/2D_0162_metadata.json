{
  "pid": 162,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Four",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0021, startParam=-5.3184, endParam=-0.9648, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.004191 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Line(dirX=1.0000, dirY=0.0000, pntX=0.0124, pntY=0.0000, startParam=-0.0124, endParam=-0.0033, isConstruction=False);HorizontalConstraint(references=(5,));6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 2));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=0.0000, dirY=1.0000, pntX=0.0091, pntY=0.0046, startParam=-0.0046, endParam=-0.0034, isConstruction=False);VerticalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 7));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0091, pntY=-0.0016, startParam=-0.0016, endParam=-0.0005, isConstruction=False);VerticalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 7));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=1.0000, dirY=0.0000, pntX=0.0067, pntY=0.0013, startParam=-0.0041, endParam=0.0022, isConstruction=False);HorizontalConstraint(references=(14,));DistanceConstraint(references=(14, 5), direction=MINIMUM, length=0.00127 METER, halfSpace0=LEFT, halfSpace1=RIGHT);15:SN_Start;SubnodeConstraint(references=(15, 14));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=1.0000, dirY=0.0000, pntX=0.0064, pntY=-0.0013, startParam=-0.0038, endParam=0.0025, isConstruction=False);PerpendicularConstraint(references=(17, 11));DistanceConstraint(references=(17, 14), direction=MINIMUM, length=0.00254 METER, halfSpace0=RIGHT, halfSpace1=LEFT);18:SN_Start;SubnodeConstraint(references=(18, 17));19:SN_End;SubnodeConstraint(references=(19, 17));20:Arc(xCenter=0.0090, yCenter=0.0011, xDir=1.0000, yDir=0.0000, radius=0.0001, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(20, 8));TangentConstraint(references=(20, 14));21:SN_Center;SubnodeConstraint(references=(21, 20));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 10));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 16));24:Arc(xCenter=0.0090, yCenter=-0.0011, xDir=1.0000, yDir=0.0000, radius=0.0001, startParam=-1.5708, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(24, 11));TangentConstraint(references=(24, 17));25:SN_Center;SubnodeConstraint(references=(25, 24));26:SN_Start;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 19));27:SN_End;SubnodeConstraint(references=(27, 24));CoincidentConstraint(references=(27, 13));28:Point(x=0.0009, y=0.0013, isConstruction=False);CoincidentConstraint(references=(28, 14));29:Point(x=0.0009, y=-0.0013, isConstruction=False);VerticalConstraint(references=(29, 28));CoincidentConstraint(references=(29, 17));30:Point(x=0.0017, y=0.0013, isConstruction=False);CoincidentConstraint(references=(30, 1));CoincidentConstraint(references=(30, 14));31:Arc(xCenter=0.0026, yCenter=0.0038, xDir=1.0000, yDir=0.0000, radius=0.0025, startParam=-2.1768, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(31, 14));TangentConstraint(references=(31, 1));32:SN_Center;SubnodeConstraint(references=(32, 31));33:SN_Start;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 3));34:SN_End;SubnodeConstraint(references=(34, 31));CoincidentConstraint(references=(34, 15));35:Point(x=0.0017, y=-0.0013, isConstruction=False);CoincidentConstraint(references=(35, 1));CoincidentConstraint(references=(35, 17));36:Arc(xCenter=0.0026, yCenter=-0.0038, xDir=1.0000, yDir=0.0000, radius=0.0025, startParam=1.5708, endParam=2.1768, clockwise=False, isConstruction=False);TangentConstraint(references=(36, 17));TangentConstraint(references=(36, 1));EqualConstraint(references=(36, 31));37:SN_Center;SubnodeConstraint(references=(37, 36));38:SN_Start;SubnodeConstraint(references=(38, 36));CoincidentConstraint(references=(38, 18));39:SN_End;SubnodeConstraint(references=(39, 36));CoincidentConstraint(references=(39, 4));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many holes are visible on the CAD object?",
  "fcstd_file": "2D_0162.FCStd",
  "isconstruction_file": "2D_0162_isconstruction.json"
}