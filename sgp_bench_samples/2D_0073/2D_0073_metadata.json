{
  "pid": 73,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Dotted",
    "B": "Solid",
    "C": "dashes",
    "D": null
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0600, yCenter=-0.0300, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-1.5708, endParam=1.5708, clockwise=True, isConstruction=False);2:SN_Center;SubnodeConstraint(references=(2, 1));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Arc(xCenter=0.0200, yCenter=-0.0300, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-4.7124, endParam=-1.5708, clockwise=True, isConstruction=False);6:SN_Center;SubnodeConstraint(references=(6, 5));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));9:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0244, pntY=-0.0350, startParam=-0.0356, endParam=0.0044, isConstruction=False);TangentConstraint(references=(9, 1));TangentConstraint(references=(9, 5));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 4));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 7));12:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0244, pntY=-0.0250, startParam=-0.0356, endParam=0.0044, isConstruction=False);TangentConstraint(references=(12, 1));TangentConstraint(references=(12, 5));13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 3));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 8));15:Arc(xCenter=0.0200, yCenter=-0.0800, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-4.7124, endParam=-1.5708, clockwise=True, isConstruction=False);16:SN_Center;SubnodeConstraint(references=(16, 15));17:SN_Start;SubnodeConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 15));19:Arc(xCenter=0.0600, yCenter=-0.0800, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-1.5708, endParam=1.5708, clockwise=True, isConstruction=False);20:SN_Center;SubnodeConstraint(references=(20, 19));21:SN_Start;SubnodeConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 19));23:Line(dirX=1.0000, dirY=0.0000, pntX=0.0736, pntY=-0.0750, startParam=-0.0536, endParam=-0.0136, isConstruction=False);TangentConstraint(references=(23, 15));TangentConstraint(references=(23, 19));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 18));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 21));26:Line(dirX=1.0000, dirY=0.0000, pntX=0.0736, pntY=-0.0850, startParam=-0.0536, endParam=-0.0136, isConstruction=False);TangentConstraint(references=(26, 15));TangentConstraint(references=(26, 19));27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 17));28:SN_End;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 22));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of lines are used to outline the objects in the image?",
  "fcstd_file": "2D_0073.FCStd",
  "isconstruction_file": "2D_0073_isconstruction.json"
}