{
  "pid": 225,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Diagonal",
    "D": "Curved"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=0.0798, y=0.0064, isConstruction=False);2:Circle(xCenter=0.0798, yCenter=0.0064, xDir=1.0000, yDir=0.0000, radius=0.0012, clockwise=False, isConstruction=False);DiameterConstraint(references=(2,), length=0.00245 METER);3:SN_Center;SubnodeConstraint(references=(3, 2));CoincidentConstraint(references=(3, 1));4:Point(x=0.0798, y=-0.0008, isConstruction=False);5:Circle(xCenter=0.0798, yCenter=-0.0008, xDir=1.0000, yDir=0.0000, radius=0.0012, clockwise=False, isConstruction=False);DiameterConstraint(references=(5,), length=0.00245 METER);6:SN_Center;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0798, pntY=0.0028, startParam=-0.0036, endParam=0.0036, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 1));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 4));10:Point(x=0.0798, y=0.0028, isConstruction=False);MidpointConstraint(references=(10, 7));11:Line(dirX=1.0000, dirY=0.0000, pntX=0.0785, pntY=0.0064, startParam=0.0013, endParam=0.0013, isConstruction=False);12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 1));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=1.0000, dirY=0.0000, pntX=0.0785, pntY=-0.0008, startParam=0.0013, endParam=0.0013, isConstruction=False);ParallelConstraint(references=(14, 11));HorizontalConstraint(references=(14,));15:SN_Start;SubnodeConstraint(references=(15, 14));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 4));17:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0798, pntY=0.0028, startParam=-0.0036, endParam=0.0036, isConstruction=False);PerpendicularConstraint(references=(17, 14));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 12));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 15));20:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0798, pntY=0.0028, startParam=-0.0036, endParam=0.0036, isConstruction=False);ParallelConstraint(references=(20, 17));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 13));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 16));23:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0783, pntY=0.0065, startParam=-0.0022, endParam=-0.0008, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));25:SN_End;SubnodeConstraint(references=(25, 23));26:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0785, pntY=-0.0009, startParam=-0.0020, endParam=-0.0006, isConstruction=False);ParallelConstraint(references=(26, 23));HorizontalConstraint(references=(26,));27:SN_Start;SubnodeConstraint(references=(27, 26));28:SN_End;SubnodeConstraint(references=(28, 26));29:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0805, pntY=0.0028, startParam=-0.0037, endParam=0.0037, isConstruction=False);PerpendicularConstraint(references=(29, 26));30:SN_Start;SubnodeConstraint(references=(30, 29));CoincidentConstraint(references=(30, 24));31:SN_End;SubnodeConstraint(references=(31, 29));CoincidentConstraint(references=(31, 27));32:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0791, pntY=0.0028, startParam=-0.0037, endParam=0.0037, isConstruction=False);ParallelConstraint(references=(32, 29));DistanceConstraint(references=(32, 29), direction=MINIMUM, length=0.0014 METER, halfSpace0=LEFT, halfSpace1=RIGHT);33:SN_Start;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 25));34:SN_End;SubnodeConstraint(references=(34, 32));CoincidentConstraint(references=(34, 28));35:Point(x=0.0798, y=0.0028, isConstruction=True);MidpointConstraint(references=(35, 27, 25));MidpointConstraint(references=(35, 28, 24));CoincidentConstraint(references=(35, 10));36:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0775, pntY=0.0028, startParam=-0.0023, endParam=0.0037, isConstruction=False);HorizontalConstraint(references=(36,));37:SN_Start;SubnodeConstraint(references=(37, 36));CoincidentConstraint(references=(37, 10));38:SN_End;SubnodeConstraint(references=(38, 36));39:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the line connecting the two circles?",
  "fcstd_file": "2D_0225.FCStd",
  "isconstruction_file": "2D_0225_isconstruction.json"
}