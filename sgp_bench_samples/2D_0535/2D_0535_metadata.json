{
  "pid": 535,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Four",
    "B": "Five",
    "C": "Seven",
    "D": "Six"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0000, pntY=-0.0318, startParam=-0.1016, endParam=0.1016, isConstruction=True);PerpendicularConstraint(references=(1, 0));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0889, pntY=-0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);PerpendicularConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 0));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0508, pntY=0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);PerpendicularConstraint(references=(7, 1));DistanceConstraint(references=(7, 4), direction=MINIMUM, length=0.0381 METER, halfSpace0=LEFT, halfSpace1=RIGHT);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 0));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0127, pntY=0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);PerpendicularConstraint(references=(10, 1));DistanceConstraint(references=(10, 7), direction=MINIMUM, length=0.0381 METER, halfSpace0=LEFT, halfSpace1=RIGHT);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 0));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0127, pntY=0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);VerticalConstraint(references=(13,));DistanceConstraint(references=(13, 10), direction=MINIMUM, length=0.0254 METER, halfSpace0=LEFT, halfSpace1=RIGHT);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 0));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0508, pntY=0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);VerticalConstraint(references=(16,));DistanceConstraint(references=(16, 13), direction=MINIMUM, length=0.0381 METER, halfSpace0=LEFT, halfSpace1=RIGHT);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 0));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0889, pntY=0.0000, startParam=-0.0381, endParam=0.0381, isConstruction=True);PerpendicularConstraint(references=(19, 1));DistanceConstraint(references=(19, 16), direction=MINIMUM, length=0.0381 METER, halfSpace0=LEFT, halfSpace1=RIGHT);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 0));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Circle(xCenter=-0.0889, yCenter=-0.0318, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);DiameterConstraint(references=(22,), length=0.00635 METER);23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 1));CoincidentConstraint(references=(23, 4));24:Circle(xCenter=-0.0508, yCenter=-0.0318, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);EqualConstraint(references=(24, 22));25:SN_Center;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 1));VerticalConstraint(references=(25, 9));26:Circle(xCenter=-0.0127, yCenter=-0.0318, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);EqualConstraint(references=(26, 22));27:SN_Center;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 10));CoincidentConstraint(references=(27, 1));28:Circle(xCenter=0.0127, yCenter=-0.0318, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);EqualConstraint(references=(28, 22));29:SN_Center;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 1));CoincidentConstraint(references=(29, 13));30:Circle(xCenter=0.0508, yCenter=-0.0317, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);EqualConstraint(references=(30, 22));31:SN_Center;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 1));CoincidentConstraint(references=(31, 16));32:Circle(xCenter=0.0889, yCenter=-0.0317, xDir=1.0000, yDir=0.0000, radius=0.0032, clockwise=False, isConstruction=False);EqualConstraint(references=(32, 22));33:SN_Center;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 1));CoincidentConstraint(references=(33, 19));34:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are shown in the CAD design?",
  "fcstd_file": "2D_0535.FCStd",
  "isconstruction_file": "2D_0535_isconstruction.json"
}