{
  "pid": 499,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "upwards",
    "B": "downwards",
    "C": "left",
    "D": "right"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.3827, dirY=-0.9239, pntX=-0.0627, pntY=0.0834, startParam=-0.1638, endParam=0.0902, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));VerticalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));HorizontalConstraint(references=(3, 0));4:Line(dirX=1.0000, dirY=-0.0000, pntX=-0.1251, pntY=0.0000, startParam=0.0279, endParam=0.0597, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.3827, dirY=-0.9239, pntX=0.0083, pntY=0.2147, startParam=-0.0216, endParam=0.0228, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.3919, dirY=0.9200, pntX=-0.0244, pntY=0.0964, startParam=-0.1048, endParam=0.1056, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 6));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 9));13:Line(dirX=0.3827, dirY=-0.9239, pntX=0.0552, pntY=0.1013, startParam=-0.0999, endParam=0.1096, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 9));15:SN_End;SubnodeConstraint(references=(15, 13));HorizontalConstraint(references=(15, 0));16:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0697, pntY=-0.0000, startParam=-0.0275, endParam=0.0042, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=-0.3919, dirY=0.9200, pntX=0.0327, pntY=0.0768, startParam=-0.0835, endParam=0.0835, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 10));VerticalConstraint(references=(21, 0));22:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the triangle in the image?",
  "fcstd_file": "2D_0499.FCStd",
  "isconstruction_file": "2D_0499_isconstruction.json"
}