{
  "pid": 615,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Diagonal",
    "D": "Circular"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0025, pntY=0.0065, startParam=-0.0200, endParam=-0.0170, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0065, startParam=-0.0225, endParam=0.0225, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0195, pntY=0.0020, startParam=-0.0045, endParam=0.0085, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 4));10:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.0195, pntY=0.0020, startParam=-0.0045, endParam=0.0085, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 4));13:Point(x=0.0000, y=0.0000, isConstruction=True);MidpointConstraint(references=(13, 11, 9));MidpointConstraint(references=(13, 12, 8));CoincidentConstraint(references=(13, 0));14:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0225, pntY=-0.0000, startParam=-0.0065, endParam=0.0065, isConstruction=False);DistanceConstraint(references=(14, 7), direction=MINIMUM, length=#meat, halfSpace0=LEFT, halfSpace1=RIGHT);15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 2));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 5));17:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.0225, pntY=-0.0000, startParam=-0.0065, endParam=0.0065, isConstruction=False);ParallelConstraint(references=(17, 14));18:SN_Start;SubnodeConstraint(references=(18, 17));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 6));20:Point(x=0.0000, y=0.0000, isConstruction=True);CoincidentConstraint(references=(20, 13));21:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0015, startParam=-0.0195, endParam=0.0195, isConstruction=False);PerpendicularConstraint(references=(21, 10));DistanceConstraint(references=(21, 4), direction=MINIMUM, length=0.008 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 10));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 7));24:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0025, pntY=0.0065, startParam=0.0220, endParam=0.0250, isConstruction=False);CoincidentConstraint(references=(24, 1));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 11));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 18));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the largest rectangle in the CAD object?",
  "fcstd_file": "2D_0615.FCStd",
  "isconstruction_file": "2D_0615_isconstruction.json"
}