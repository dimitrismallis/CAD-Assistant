{
  "pid": 318,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "2",
    "B": "4",
    "C": "6",
    "D": "8"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0891, pntY=-0.1945, startParam=-0.1650, endParam=-0.0888, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.2160, pntY=-0.2707, startParam=-0.0381, endParam=0.0381, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.2541, pntY=-0.2326, startParam=-0.0381, endParam=0.0381, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.1779, pntY=-0.2184, startParam=-0.0240, endParam=0.0522, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.2160, pntY=-0.2326, startParam=-0.0381, endParam=0.0381, isConstruction=True);14:SN_Start;SubnodeConstraint(references=(14, 13));MidpointConstraint(references=(14, 1));15:SN_End;SubnodeConstraint(references=(15, 13));MidpointConstraint(references=(15, 4));16:Line(dirX=1.0000, dirY=0.0000, pntX=-0.2160, pntY=-0.2326, startParam=-0.0381, endParam=0.0381, isConstruction=True);17:SN_Start;SubnodeConstraint(references=(17, 16));MidpointConstraint(references=(17, 7));18:SN_End;SubnodeConstraint(references=(18, 16));MidpointConstraint(references=(18, 10));19:Line(dirX=0.7071, dirY=-0.7071, pntX=-0.2190, pntY=-0.2295, startParam=-0.0360, endParam=0.0448, isConstruction=True);20:SN_Start;SubnodeConstraint(references=(20, 19));ConcentricConstraint(references=(20, 0));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=0.7071, dirY=0.7071, pntX=-0.2161, pntY=-0.2328, startParam=-0.0402, endParam=0.0407, isConstruction=True);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 0));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 0));25:Point(x=-0.2160, y=-0.2326, isConstruction=False);CoincidentConstraint(references=(25, 19));CoincidentConstraint(references=(25, 22));26:Point(x=-0.2160, y=-0.2326, isConstruction=False);MidpointConstraint(references=(26, 13));CoincidentConstraint(references=(26, 25));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many lines of symmetry does the object in the image have?",
  "fcstd_file": "2D_0318.FCStd",
  "isconstruction_file": "2D_0318_isconstruction.json"
}