{
  "pid": 200,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=0.2032, startParam=-0.0127, endParam=0.0127, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0127, pntY=0.1535, startParam=-0.0497, endParam=0.0773, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0127, pntY=0.1535, startParam=-0.0497, endParam=0.0773, isConstruction=False);ParallelConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Point(x=0.0000, y=0.2032, isConstruction=False);MidpointConstraint(references=(10, 1));VerticalConstraint(references=(10, 0));11:Point(x=-0.0381, y=0.0762, isConstruction=False);CoincidentConstraint(references=(11, 0));12:Point(x=0.0381, y=0.0762, isConstruction=False);CoincidentConstraint(references=(12, 0));13:Point(x=-0.0127, y=0.1016, isConstruction=False);CoincidentConstraint(references=(13, 4));14:Arc(xCenter=-0.0381, yCenter=0.1016, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=-1.5708, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(14, 4));TangentConstraint(references=(14, 0));15:SN_Center;SubnodeConstraint(references=(15, 14));16:SN_Start;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 11));17:SN_End;SubnodeConstraint(references=(17, 14));CoincidentConstraint(references=(17, 13));18:Point(x=0.0127, y=0.1016, isConstruction=False);CoincidentConstraint(references=(18, 7));19:Arc(xCenter=0.0381, yCenter=0.1016, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);RadiusConstraint(references=(19,), length=0.0254 METER);TangentConstraint(references=(19, 7));TangentConstraint(references=(19, 0));20:SN_Center;SubnodeConstraint(references=(20, 19));21:SN_Start;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 18));22:SN_End;SubnodeConstraint(references=(22, 19));CoincidentConstraint(references=(22, 12));23:Line(dirX=1.0000, dirY=-0.0000, pntX=-0.0000, pntY=0.0762, startParam=-0.0381, endParam=0.0381, isConstruction=False);CoincidentConstraint(references=(23, 9));CoincidentConstraint(references=(23, 6));PerpendicularConstraint(references=(23, 4));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 11));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 12));26:Circle(xCenter=-0.0000, yCenter=0.0762, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=False);DiameterConstraint(references=(26,), length=0.0508 METER);27:SN_Center;SubnodeConstraint(references=(27, 26));MidpointConstraint(references=(27, 23));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many visible circles are there in the image?",
  "fcstd_file": "2D_0200.FCStd",
  "isconstruction_file": "2D_0200_isconstruction.json"
}