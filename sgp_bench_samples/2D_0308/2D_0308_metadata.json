{
  "pid": 308,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Asymmetrical",
    "B": "Horizontal symmetry",
    "C": "Vertical symmetry",
    "D": "Rotational symmetry"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0090, pntY=-0.0105, startParam=-0.0235, endParam=0.0035, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0147, pntY=-0.0140, startParam=-0.0057, endParam=0.0063, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.0210, pntY=-0.0320, startParam=-0.0180, endParam=-0.0120, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=0.0007, pntY=-0.0200, startParam=-0.0217, endParam=0.0203, isConstruction=False);PerpendicularConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=1.0000, pntX=0.0210, pntY=-0.0320, startParam=0.0120, endParam=0.0180, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));HorizontalConstraint(references=(15, 3));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0171, pntY=-0.0140, startParam=-0.0039, endParam=0.0081, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=1.0000, pntX=0.0090, pntY=-0.0105, startParam=-0.0035, endParam=0.0235, isConstruction=False);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));HorizontalConstraint(references=(21, 2));22:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0011, pntY=0.0130, startParam=-0.0079, endParam=0.0101, isConstruction=True);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 2));25:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0040, startParam=-4.5871, endParam=1.4455, clockwise=False, isConstruction=False);DiameterConstraint(references=(25,), length=0.008 METER);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 0));27:SN_Start;SubnodeConstraint(references=(27, 25));28:SN_End;SubnodeConstraint(references=(28, 25));29:Point(x=-0.0000, y=0.0130, isConstruction=False);MidpointConstraint(references=(29, 22));VerticalConstraint(references=(29, 26));30:Point(x=0.0000, y=-0.0200, isConstruction=False);MidpointConstraint(references=(30, 10));VerticalConstraint(references=(30, 26));31:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0005, pntY=0.0085, startParam=-0.0045, endParam=0.0045, isConstruction=False);VerticalConstraint(references=(31,));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 27));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 22));34:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0049, pntY=0.0130, startParam=-0.0044, endParam=0.0041, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 2));37:Line(dirX=0.0000, dirY=1.0000, pntX=0.0005, pntY=0.0085, startParam=-0.0045, endParam=0.0045, isConstruction=False);VerticalConstraint(references=(37,));DistanceConstraint(references=(37, 31), direction=MINIMUM, length=0.001 METER, halfSpace0=RIGHT, halfSpace1=LEFT);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 28));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 22));40:Line(dirX=1.0000, dirY=0.0000, pntX=0.0049, pntY=0.0130, startParam=-0.0044, endParam=0.0041, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 39));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 21));43:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the symmetry type of the CAD object?",
  "fcstd_file": "2D_0308.FCStd",
  "isconstruction_file": "2D_0308_isconstruction.json"
}