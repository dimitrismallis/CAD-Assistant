{
  "pid": 684,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Octagon",
    "D": "Rectangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.7071, dirY=0.7071, pntX=-0.0150, pntY=0.0150, startParam=-0.0022, endParam=0.0035, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0003, pntY=0.0175, startParam=-0.0122, endParam=0.0128, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=0.7071, dirY=-0.7071, pntX=0.0151, pntY=0.0149, startParam=-0.0037, endParam=0.0019, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0165, pntY=0.0013, startParam=-0.0122, endParam=0.0148, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Line(dirX=-0.7071, dirY=-0.7071, pntX=0.0129, pntY=-0.0171, startParam=-0.0050, endParam=0.0006, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0011, pntY=-0.0175, startParam=-0.0136, endParam=0.0114, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=-0.7071, dirY=0.7071, pntX=-0.0150, pntY=-0.0150, startParam=-0.0036, endParam=0.0021, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0165, pntY=0.0004, startParam=-0.0139, endParam=0.0131, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 2));25:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0055, pntY=0.0036, startParam=-0.0055, endParam=0.0055, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 0));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0055, pntY=-0.0175, startParam=-0.0055, endParam=0.0055, isConstruction=False);ParallelConstraint(references=(28, 25));HorizontalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 0));31:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0110, pntY=-0.0069, startParam=-0.0106, endParam=0.0106, isConstruction=False);PerpendicularConstraint(references=(31, 28));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 26));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 29));34:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0069, startParam=-0.0106, endParam=0.0106, isConstruction=False);ParallelConstraint(references=(34, 31));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 27));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 30));37:Line(dirX=1.0000, dirY=0.0000, pntX=0.0055, pntY=0.0036, startParam=-0.0055, endParam=0.0055, isConstruction=False);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 0));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=1.0000, dirY=0.0000, pntX=0.0055, pntY=-0.0036, startParam=-0.0055, endParam=0.0055, isConstruction=False);ParallelConstraint(references=(40, 37));HorizontalConstraint(references=(40,));41:SN_Start;SubnodeConstraint(references=(41, 40));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 0));43:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0000, pntY=0.0000, startParam=-0.0036, endParam=0.0036, isConstruction=False);PerpendicularConstraint(references=(43, 40));44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 38));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 41));46:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0110, pntY=0.0000, startParam=-0.0036, endParam=0.0036, isConstruction=False);ParallelConstraint(references=(46, 43));47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 39));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 42));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the outer boundary of the CAD object?",
  "fcstd_file": "2D_0684.FCStd",
  "isconstruction_file": "2D_0684_isconstruction.json"
}