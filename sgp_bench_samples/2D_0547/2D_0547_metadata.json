{
  "pid": 547,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "polygon",
    "B": "polygon",
    "C": "Ellipse",
    "D": "Cylinder"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.9487, dirY=0.3162, pntX=0.0119, pntY=0.0010, startParam=-0.0002, endParam=-0.0014, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0138, pntY=0.0005, startParam=-0.0006, endParam=0.0014, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.5386, dirY=-0.8426, pntX=0.0152, pntY=0.0006, startParam=0.0000, endParam=0.0006, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.1952, dirY=-0.9808, pntX=0.0149, pntY=-0.0001, startParam=-0.0001, endParam=0.0004, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0140, pntY=-0.0004, startParam=-0.0010, endParam=0.0010, isConstruction=False);HorizontalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-0.8364, dirY=0.5482, pntX=0.0123, pntY=0.0000, startParam=-0.0008, endParam=0.0009, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=1.0000, pntX=0.0115, pntY=0.0005, startParam=0.0000, endParam=0.0011, isConstruction=False);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=0.6575, dirY=-0.7534, pntX=0.0119, pntY=0.0012, startParam=-0.0005, endParam=0.0004, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 2));25:Line(dirX=-0.7682, dirY=-0.6402, pntX=0.0136, pntY=-0.0022, startParam=-0.0003, endParam=0.0003, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=-0.2549, dirY=-0.9670, pntX=0.0132, pntY=-0.0030, startParam=-0.0007, endParam=0.0007, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));VerticalConstraint(references=(30, 15));31:Line(dirX=-0.6310, dirY=0.7757, pntX=0.0127, pntY=-0.0032, startParam=-0.0005, endParam=0.0005, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=0.4807, dirY=0.8769, pntX=0.0127, pntY=-0.0022, startParam=-0.0007, endParam=0.0007, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));VerticalConstraint(references=(36, 15));37:Line(dirX=1.0000, dirY=0.0000, pntX=0.0133, pntY=-0.0016, startParam=-0.0003, endParam=0.0003, isConstruction=False);ParallelConstraint(references=(37, 13));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=0.4603, dirY=-0.8878, pntX=0.0137, pntY=-0.0018, startParam=-0.0002, endParam=0.0002, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 39));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 26));43:Circle(xCenter=0.0148, yCenter=-0.0030, xDir=1.0000, yDir=0.0000, radius=0.0005, clockwise=False, isConstruction=False);44:SN_Center;SubnodeConstraint(references=(44, 43));45:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the bottom left object in the image?",
  "fcstd_file": "2D_0547.FCStd",
  "isconstruction_file": "2D_0547_isconstruction.json"
}