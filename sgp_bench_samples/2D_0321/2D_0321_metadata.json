{
  "pid": 321,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Four",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0021, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.0042 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=0.1050, xDir=1.0000, yDir=0.0000, radius=0.0021, clockwise=False, isConstruction=False);DiameterConstraint(references=(3,), length=0.0042 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));VerticalConstraint(references=(4, 2));5:Arc(xCenter=0.0000, yCenter=0.1050, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-4.7124, endParam=-1.5708, clockwise=False, isConstruction=False);DiameterConstraint(references=(5,), length=0.01 METER);6:SN_Center;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 4));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));9:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-4.7124, endParam=-1.5708, clockwise=False, isConstruction=False);RadiusConstraint(references=(9,), length=0.005 METER);10:SN_Center;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 2));11:SN_Start;SubnodeConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 9));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.0301, pntY=0.1100, startParam=-0.0301, endParam=0.0024, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));VerticalConstraint(references=(14, 0));CoincidentConstraint(references=(14, 7));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0325, pntY=0.0419, startParam=-0.0681, endParam=0.0469, isConstruction=False);VerticalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=1.0000, dirY=0.0000, pntX=0.0301, pntY=-0.0050, startParam=-0.0301, endParam=0.0024, isConstruction=False);HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));VerticalConstraint(references=(20, 0));CoincidentConstraint(references=(20, 12));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 18));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.0038, pntY=0.0050, startParam=-0.0038, endParam=-0.0012, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));VerticalConstraint(references=(23, 0));CoincidentConstraint(references=(23, 11));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=1.0000, dirY=0.0000, pntX=0.0038, pntY=0.1000, startParam=-0.0037, endParam=-0.0013, isConstruction=False);TangentConstraint(references=(25, 5));26:SN_Start;SubnodeConstraint(references=(26, 25));VerticalConstraint(references=(26, 0));CoincidentConstraint(references=(26, 8));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0075, pntY=0.0400, startParam=-0.0550, endParam=0.0300, isConstruction=False);DistanceConstraint(references=(28, 16), direction=MINIMUM, length=0.025 METER, halfSpace0=LEFT, halfSpace1=RIGHT);29:SN_Start;SubnodeConstraint(references=(29, 28));30:SN_End;SubnodeConstraint(references=(30, 28));31:Point(x=0.0075, y=0.1000, isConstruction=False);CoincidentConstraint(references=(31, 28));CoincidentConstraint(references=(31, 25));32:Arc(xCenter=0.0025, yCenter=0.0950, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(32, 25));TangentConstraint(references=(32, 28));33:SN_Center;SubnodeConstraint(references=(33, 32));34:SN_Start;SubnodeConstraint(references=(34, 32));CoincidentConstraint(references=(34, 29));35:SN_End;SubnodeConstraint(references=(35, 32));CoincidentConstraint(references=(35, 27));36:Point(x=0.0075, y=0.0050, isConstruction=False);CoincidentConstraint(references=(36, 28));CoincidentConstraint(references=(36, 22));37:Arc(xCenter=0.0025, yCenter=0.0100, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-1.5708, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(37, 22));TangentConstraint(references=(37, 28));EqualConstraint(references=(37, 32));38:SN_Center;SubnodeConstraint(references=(38, 37));39:SN_Start;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 24));40:SN_End;SubnodeConstraint(references=(40, 37));CoincidentConstraint(references=(40, 30));41:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many holes are visible on the CAD object?",
  "fcstd_file": "2D_0321.FCStd",
  "isconstruction_file": "2D_0321_isconstruction.json"
}