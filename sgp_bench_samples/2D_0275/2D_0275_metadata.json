{
  "pid": 275,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0293, clockwise=False, isConstruction=False);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0000, startParam=-0.0293, endParam=0.0293, isConstruction=True);VerticalConstraint(references=(3,));4:SN_Start;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 1));VerticalConstraint(references=(4, 0));5:SN_End;SubnodeConstraint(references=(5, 3));CoincidentConstraint(references=(5, 1));6:Line(dirX=0.8660, dirY=-0.5000, pntX=0.0000, pntY=-0.0000, startParam=-0.0293, endParam=0.0293, isConstruction=True);MidpointConstraint(references=(6, 2));7:SN_Start;SubnodeConstraint(references=(7, 6));CoincidentConstraint(references=(7, 1));8:SN_End;SubnodeConstraint(references=(8, 6));CoincidentConstraint(references=(8, 1));9:Line(dirX=0.8660, dirY=0.5000, pntX=0.0000, pntY=0.0000, startParam=-0.0293, endParam=0.0293, isConstruction=True);MidpointConstraint(references=(9, 2));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 1));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 1));12:Line(dirX=0.8660, dirY=0.5000, pntX=-0.0099, pntY=0.0236, startParam=-0.0179, endParam=0.0114, isConstruction=False);13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 7));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 4));15:Line(dirX=0.8660, dirY=-0.5000, pntX=0.0097, pntY=0.0238, startParam=-0.0111, endParam=0.0182, isConstruction=False);EqualConstraint(references=(15, 12));16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 4));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 11));18:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0254, pntY=0.0003, startParam=-0.0143, endParam=0.0150, isConstruction=False);VerticalConstraint(references=(18,));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 11));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 8));21:Line(dirX=-0.8660, dirY=-0.5000, pntX=0.0099, pntY=-0.0236, startParam=-0.0179, endParam=0.0114, isConstruction=False);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 8));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 5));24:Line(dirX=-0.8660, dirY=0.5000, pntX=-0.0097, pntY=-0.0238, startParam=-0.0111, endParam=0.0182, isConstruction=False);DistanceConstraint(references=(24, 15), direction=MINIMUM, length=0.0508 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 5));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 10));27:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0254, pntY=0.0028, startParam=-0.0174, endParam=0.0119, isConstruction=False);EqualConstraint(references=(27, 15));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 10));29:SN_End;SubnodeConstraint(references=(29, 27));CoincidentConstraint(references=(29, 7));30:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0079, clockwise=False, isConstruction=False);RadiusConstraint(references=(30,), length=0.007938 METER);31:SN_Center;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 2));32:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many smaller circles are contained within the central circle?",
  "fcstd_file": "2D_0275.FCStd",
  "isconstruction_file": "2D_0275_isconstruction.json"
}