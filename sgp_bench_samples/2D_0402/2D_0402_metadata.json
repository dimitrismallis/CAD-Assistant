{
  "pid": 402,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Five",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0003, pntY=0.0080, startParam=-0.0095, endParam=0.0065, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0018, pntY=-0.0080, startParam=-0.0080, endParam=0.0080, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0098, pntY=-0.0057, startParam=-0.0137, endParam=0.0023, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0062, pntY=-0.0057, startParam=-0.0137, endParam=0.0023, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0018, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));14:Point(x=0.0018, y=0.0100, isConstruction=False);MidpointConstraint(references=(14, 0));VerticalConstraint(references=(14, 13));15:Point(x=-0.0148, y=0.0000, isConstruction=False);MidpointConstraint(references=(15, 0));HorizontalConstraint(references=(15, 13));16:Point(x=0.0018, y=0.0100, isConstruction=False);MidpointConstraint(references=(16, 0));VerticalConstraint(references=(16, 13));17:Point(x=-0.0148, y=0.0000, isConstruction=False);MidpointConstraint(references=(17, 0));HorizontalConstraint(references=(17, 13));18:Circle(xCenter=0.0098, yCenter=0.0080, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(18,), length=0.004 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 2));20:Circle(xCenter=0.0098, yCenter=-0.0080, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(20,), length=0.004 METER);21:SN_Center;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 5));22:Circle(xCenter=-0.0062, yCenter=-0.0080, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(22,), length=0.004 METER);23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 6));24:Circle(xCenter=-0.0063, yCenter=0.0080, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(24,), length=0.004 METER);25:SN_Center;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 3));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are attached to the main frame of the CAD object?",
  "fcstd_file": "2D_0402.FCStd",
  "isconstruction_file": "2D_0402_isconstruction.json"
}