{
  "pid": 166,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Four",
    "B": "Six",
    "C": "Eight",
    "D": "Ten"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0028, pntY=-0.0200, startParam=-0.0472, endParam=0.0528, isConstruction=True);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=0.0200, startParam=-0.0500, endParam=0.0500, isConstruction=True);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));DistanceConstraint(references=(4, 1), direction=MINIMUM, length=0.04 METER, halfSpace0=LEFT, halfSpace1=RIGHT);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0500, pntY=0.0037, startParam=-0.0170, endParam=0.0096, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0500, pntY=0.0037, startParam=-0.0170, endParam=0.0096, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Arc(xCenter=0.0000, yCenter=-0.1736, xDir=1.0000, yDir=-0.0000, radius=0.2000, startParam=1.3524, endParam=1.7892, clockwise=False, isConstruction=False);15:SN_Center;SubnodeConstraint(references=(15, 14));16:SN_Start;SubnodeConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 14));18:Arc(xCenter=-0.0000, yCenter=0.1736, xDir=1.0000, yDir=-0.0000, radius=0.2000, startParam=-1.7892, endParam=-1.3524, clockwise=False, isConstruction=False);EqualConstraint(references=(18, 14));RadiusConstraint(references=(18,), length=0.2 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));20:SN_Start;SubnodeConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 18));22:Point(x=-0.0500, y=0.0200, isConstruction=False);CoincidentConstraint(references=(22, 6));CoincidentConstraint(references=(22, 6));CoincidentConstraint(references=(22, 14));CoincidentConstraint(references=(22, 10));23:Arc(xCenter=-0.0415, yCenter=0.0133, xDir=1.0000, yDir=-0.0000, radius=0.0085, startParam=-4.4939, endParam=-3.1416, clockwise=False, isConstruction=False);TangentConstraint(references=(23, 10));TangentConstraint(references=(23, 14));24:SN_Center;SubnodeConstraint(references=(24, 23));25:SN_Start;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 17));26:SN_End;SubnodeConstraint(references=(26, 23));CoincidentConstraint(references=(26, 12));27:Point(x=0.0500, y=0.0200, isConstruction=False);CoincidentConstraint(references=(27, 5));CoincidentConstraint(references=(27, 5));CoincidentConstraint(references=(27, 14));CoincidentConstraint(references=(27, 7));28:Arc(xCenter=0.0415, yCenter=0.0133, xDir=1.0000, yDir=-0.0000, radius=0.0085, startParam=0.0000, endParam=1.3524, clockwise=False, isConstruction=False);TangentConstraint(references=(28, 7));TangentConstraint(references=(28, 14));EqualConstraint(references=(28, 23));29:SN_Center;SubnodeConstraint(references=(29, 28));30:SN_Start;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 9));31:SN_End;SubnodeConstraint(references=(31, 28));CoincidentConstraint(references=(31, 16));32:Point(x=0.0500, y=-0.0200, isConstruction=False);CoincidentConstraint(references=(32, 2));CoincidentConstraint(references=(32, 2));CoincidentConstraint(references=(32, 18));CoincidentConstraint(references=(32, 7));33:Arc(xCenter=0.0415, yCenter=-0.0133, xDir=1.0000, yDir=-0.0000, radius=0.0085, startParam=-1.3524, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(33, 7));TangentConstraint(references=(33, 18));EqualConstraint(references=(33, 23));34:SN_Center;SubnodeConstraint(references=(34, 33));35:SN_Start;SubnodeConstraint(references=(35, 33));CoincidentConstraint(references=(35, 21));36:SN_End;SubnodeConstraint(references=(36, 33));CoincidentConstraint(references=(36, 8));37:Point(x=-0.0500, y=-0.0200, isConstruction=False);CoincidentConstraint(references=(37, 3));CoincidentConstraint(references=(37, 3));CoincidentConstraint(references=(37, 18));CoincidentConstraint(references=(37, 10));38:Arc(xCenter=-0.0415, yCenter=-0.0133, xDir=1.0000, yDir=-0.0000, radius=0.0085, startParam=-3.1416, endParam=-1.7892, clockwise=False, isConstruction=False);TangentConstraint(references=(38, 10));TangentConstraint(references=(38, 18));EqualConstraint(references=(38, 23));39:SN_Center;SubnodeConstraint(references=(39, 38));40:SN_Start;SubnodeConstraint(references=(40, 38));CoincidentConstraint(references=(40, 11));41:SN_End;SubnodeConstraint(references=(41, 38));CoincidentConstraint(references=(41, 20));42:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many control points are visible on the perimeter of the CAD object?",
  "fcstd_file": "2D_0166.FCStd",
  "isconstruction_file": "2D_0166_isconstruction.json"
}