{
  "pid": 501,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Inverted",
    "D": "Diagonal"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.5592, dirY=-0.8290, pntX=-0.0449, pntY=0.0232, startParam=-0.0157, endParam=0.0743, isConstruction=False);CoincidentConstraint(references=(1, 0));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-0.5592, dirY=-0.8290, pntX=-0.0881, pntY=0.0128, startParam=-0.0620, endParam=0.0620, isConstruction=True);ParallelConstraint(references=(4, 1));DistanceConstraint(references=(4, 1), direction=MINIMUM, length=0.03 METER, halfSpace0=RIGHT, halfSpace1=LEFT);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.9998, dirY=-0.0175, pntX=-0.0984, pntY=-0.0386, startParam=-0.0120, endParam=0.0070, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.8290, dirY=0.5592, pntX=-0.1098, pntY=-0.0358, startParam=-0.0052, endParam=0.0092, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 4));13:Line(dirX=-0.8290, dirY=0.5592, pntX=-0.0547, pntY=0.0354, startParam=-0.0150, endParam=0.0150, isConstruction=True);PerpendicularConstraint(references=(13, 4));ParallelConstraint(references=(13, 10));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 1));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 4));16:Line(dirX=-0.8290, dirY=0.5592, pntX=-0.0371, pntY=0.0369, startParam=-0.0013, endParam=0.0012, isConstruction=False);PerpendicularConstraint(references=(16, 1));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 2));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=-0.5592, dirY=-0.8290, pntX=-0.1165, pntY=-0.0293, startParam=-0.0009, endParam=0.0016, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 4));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 12));22:Line(dirX=-0.8290, dirY=0.5592, pntX=-0.1084, pntY=-0.0337, startParam=-0.0045, endParam=0.0092, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 20));25:Line(dirX=-0.9998, dirY=-0.0175, pntX=-0.0984, pntY=-0.0361, startParam=-0.0107, endParam=0.0062, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 23));28:Line(dirX=-0.5592, dirY=-0.8290, pntX=-0.0469, pntY=0.0246, startParam=-0.0157, endParam=0.0730, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 18));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 26));31:Line(dirX=0.5592, dirY=0.8290, pntX=-0.1166, pntY=-0.0296, startParam=-0.0013, endParam=0.0012, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 12));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 20));34:Line(dirX=-0.8290, dirY=0.5592, pntX=-0.0496, pntY=0.0453, startParam=-0.0138, endParam=0.0138, isConstruction=False);PerpendicularConstraint(references=(34, 28));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 18));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 4));37:Line(dirX=-0.5592, dirY=-0.8290, pntX=-0.0885, pntY=0.0122, startParam=-0.0492, endParam=0.0492, isConstruction=False);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 20));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the CAD object in the image?",
  "fcstd_file": "2D_0501.FCStd",
  "isconstruction_file": "2D_0501_isconstruction.json"
}