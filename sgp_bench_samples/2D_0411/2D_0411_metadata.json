{
  "pid": 411,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Rectangular",
    "B": "Circular",
    "C": "Irregular",
    "D": "Triangular"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=-0.0338, yCenter=-0.0723, xDir=1.0000, yDir=0.0000, radius=0.0375, startParam=0.4885, endParam=1.5708, clockwise=False, isConstruction=False);RadiusConstraint(references=(1,), length=0.0375 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Arc(xCenter=-0.0061, yCenter=-0.0576, xDir=1.0000, yDir=0.0000, radius=0.0062, startParam=-0.4679, endParam=0.4885, clockwise=False, isConstruction=False);EqualConstraint(references=(5, 0));6:SN_Center;SubnodeConstraint(references=(6, 5));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));CoincidentConstraint(references=(8, 3));9:Arc(xCenter=0.0128, yCenter=-0.0671, xDir=1.0000, yDir=0.0000, radius=0.0150, startParam=2.6737, endParam=2.7949, clockwise=False, isConstruction=False);EqualConstraint(references=(9, 0));10:SN_Center;SubnodeConstraint(references=(10, 9));11:SN_Start;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 7));12:SN_End;SubnodeConstraint(references=(12, 9));13:Arc(xCenter=0.1679, yCenter=-0.1232, xDir=1.0000, yDir=0.0000, radius=0.1800, startParam=-3.4882, endParam=-3.0938, clockwise=False, isConstruction=False);EqualConstraint(references=(13, 0));14:SN_Center;SubnodeConstraint(references=(14, 13));15:SN_Start;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 12));16:SN_End;SubnodeConstraint(references=(16, 13));17:Arc(xCenter=0.0511, yCenter=-0.1318, xDir=1.0000, yDir=0.0000, radius=0.1150, startParam=2.7821, endParam=3.1416, clockwise=False, isConstruction=False);EqualConstraint(references=(17, 0));18:SN_Center;SubnodeConstraint(references=(18, 17));19:SN_Start;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 0));20:SN_End;SubnodeConstraint(references=(20, 17));CoincidentConstraint(references=(20, 0));21:Arc(xCenter=-0.0022, yCenter=-0.1117, xDir=1.0000, yDir=0.0000, radius=0.0580, startParam=2.5061, endParam=2.7821, clockwise=False, isConstruction=False);EqualConstraint(references=(21, 0));22:SN_Center;SubnodeConstraint(references=(22, 21));23:SN_Start;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 0));24:SN_End;SubnodeConstraint(references=(24, 21));CoincidentConstraint(references=(24, 19));25:Arc(xCenter=-0.0770, yCenter=-0.0566, xDir=1.0000, yDir=0.0000, radius=0.0349, startParam=-0.6355, endParam=0.0622, clockwise=False, isConstruction=False);EqualConstraint(references=(25, 0));26:SN_Center;SubnodeConstraint(references=(26, 25));27:SN_Start;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 23));28:SN_End;SubnodeConstraint(references=(28, 25));29:Arc(xCenter=-0.0581, yCenter=-0.0554, xDir=1.0000, yDir=0.0000, radius=0.0160, startParam=0.0622, endParam=0.9590, clockwise=False, isConstruction=False);TangentConstraint(references=(29, 25));ConcentricConstraint(references=(29, 0));30:SN_Center;SubnodeConstraint(references=(30, 29));31:SN_Start;SubnodeConstraint(references=(31, 29));CoincidentConstraint(references=(31, 28));32:SN_End;SubnodeConstraint(references=(32, 29));33:Arc(xCenter=-0.0472, yCenter=-0.0398, xDir=1.0000, yDir=0.0000, radius=0.0030, startParam=-4.0141, endParam=-2.1826, clockwise=False, isConstruction=False);EqualConstraint(references=(33, 0));EqualConstraint(references=(33, 0));TangentConstraint(references=(33, 29));34:SN_Center;SubnodeConstraint(references=(34, 33));35:SN_Start;SubnodeConstraint(references=(35, 33));CoincidentConstraint(references=(35, 0));36:SN_End;SubnodeConstraint(references=(36, 33));CoincidentConstraint(references=(36, 32));37:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0339, pntY=-0.0348, startParam=-0.0001, endParam=0.0121, isConstruction=False);HorizontalConstraint(references=(37,));TangentConstraint(references=(37, 1));CoincidentConstraint(references=(37, 0));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 4));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 0));40:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0379, pntY=-0.1318, startParam=-0.0260, endParam=0.0260, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 20));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 16));43:Line(dirX=1.0000, dirY=-0.0072, pntX=-0.0203, pntY=-0.0546, startParam=-0.0219, endParam=0.0196, isConstruction=True);44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 28));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 3));46:Arc(xCenter=-0.1051, yCenter=0.0292, xDir=1.0000, yDir=0.0000, radius=0.0871, startParam=-0.8725, endParam=-0.8248, clockwise=False, isConstruction=False);EqualConstraint(references=(46, 0));TangentConstraint(references=(46, 33));47:SN_Center;SubnodeConstraint(references=(47, 46));48:SN_Start;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 35));49:SN_End;SubnodeConstraint(references=(49, 46));CoincidentConstraint(references=(49, 39));50:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the general shape of the CAD object in the image?",
  "fcstd_file": "2D_0411.FCStd",
  "isconstruction_file": "2D_0411_isconstruction.json"
}