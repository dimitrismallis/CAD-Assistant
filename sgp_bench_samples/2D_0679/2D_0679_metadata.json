{
  "pid": 679,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0027, pntY=0.0000, startParam=-0.0737, endParam=0.0683, isConstruction=False);HorizontalConstraint(references=(1,));MidpointConstraint(references=(1, 0));2:SN_Start;SubnodeConstraint(references=(2, 1));HorizontalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0710, pntY=0.0120, startParam=-0.0120, endParam=-0.0000, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));VerticalConstraint(references=(6, 3));7:Line(dirX=-0.2245, dirY=0.9745, pntX=0.0519, pntY=0.0948, startParam=-0.0850, endParam=0.0576, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.2245, dirY=-0.9745, pntX=-0.0515, pntY=0.0967, startParam=-0.0557, endParam=0.0870, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));HorizontalConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));VerticalConstraint(references=(12, 2));HorizontalConstraint(references=(12, 6));13:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0710, pntY=0.0120, startParam=0.0000, endParam=0.0120, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 2));16:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0910, startParam=-0.0910, endParam=0.0910, isConstruction=True);VerticalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 0));18:SN_End;SubnodeConstraint(references=(18, 16));19:Circle(xCenter=0.0000, yCenter=0.1420, xDir=1.0000, yDir=0.0000, radius=0.0250, clockwise=False, isConstruction=False);DiameterConstraint(references=(19,), length=0.05 METER);20:SN_Center;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 16));21:Arc(xCenter=0.0000, yCenter=0.1420, xDir=1.0000, yDir=0.0000, radius=0.0400, startParam=0.2264, endParam=2.9151, clockwise=False, isConstruction=False);TangentConstraint(references=(21, 7));TangentConstraint(references=(21, 10));DiameterConstraint(references=(21,), length=0.08 METER);22:SN_Center;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_Start;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 9));24:SN_End;SubnodeConstraint(references=(24, 21));CoincidentConstraint(references=(24, 11));25:Circle(xCenter=0.0000, yCenter=0.0820, xDir=1.0000, yDir=0.0000, radius=0.0100, clockwise=False, isConstruction=False);DiameterConstraint(references=(25,), length=0.02 METER);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 16));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are visible in the CAD object?",
  "fcstd_file": "2D_0679.FCStd",
  "isconstruction_file": "2D_0679_isconstruction.json"
}