{
  "pid": 419,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Parallel",
    "B": "Perpendicular",
    "C": "Acute angle",
    "D": "Obtuse angle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.1000, pntY=-0.0000, startParam=-0.1000, endParam=-0.0950, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 1));HorizontalConstraint(references=(3, 0));4:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0701, startParam=-0.0701, endParam=-0.0651, isConstruction=False);EqualConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 4));7:Line(dirX=0.7071, dirY=0.7071, pntX=0.1032, pntY=0.0982, startParam=-0.1318, endParam=0.1369, isConstruction=False);CoincidentConstraint(references=(7, 3));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.7071, dirY=0.7071, pntX=0.0992, pntY=0.1042, startParam=-0.1332, endParam=0.1355, isConstruction=False);ParallelConstraint(references=(10, 7));CoincidentConstraint(references=(10, 6));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.1989, pntY=0.2000, startParam=-0.0039, endParam=0.0011, isConstruction=False);HorizontalConstraint(references=(13,));EqualConstraint(references=(13, 1));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.2000, pntY=0.1952, startParam=-0.0048, endParam=0.0002, isConstruction=False);VerticalConstraint(references=(16,));EqualConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 9));19:Line(dirX=1.0000, dirY=0.0000, pntX=0.0340, pntY=-0.0000, startParam=-0.0290, endParam=0.1660, isConstruction=False);HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 3));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=0.0000, dirY=1.0000, pntX=0.2000, pntY=0.0029, startParam=-0.0029, endParam=0.0021, isConstruction=False);VerticalConstraint(references=(22,));EqualConstraint(references=(22, 1));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));VerticalConstraint(references=(24, 15));25:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.1735, pntY=0.0050, startParam=-0.0265, endParam=0.1635, isConstruction=False);HorizontalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 8));28:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0140, startParam=-0.0090, endParam=0.1860, isConstruction=False);VerticalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 6));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=1.0000, dirY=0.0000, pntX=0.0030, pntY=0.2000, startParam=-0.0030, endParam=0.0020, isConstruction=False);HorizontalConstraint(references=(31,));EqualConstraint(references=(31, 1));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));HorizontalConstraint(references=(33, 15));34:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0050, pntY=0.1932, startParam=-0.0068, endParam=0.1832, isConstruction=False);VerticalConstraint(references=(34,));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 11));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the relative position of the diagonal line with respect to the bottom horizontal line?",
  "fcstd_file": "2D_0419.FCStd",
  "isconstruction_file": "2D_0419_isconstruction.json"
}