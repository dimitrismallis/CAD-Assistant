{
  "pid": 237,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Top-left corner",
    "B": "Bottom-right",
    "C": "Top-right corner",
    "D": "centered"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=-0.0155, y=0.0155, isConstruction=False);2:Point(x=0.0155, y=0.0155, isConstruction=False);3:Point(x=-0.0155, y=-0.0155, isConstruction=False);4:Point(x=0.0155, y=-0.0155, isConstruction=False);5:Point(x=0.0000, y=0.0000, isConstruction=False);CoincidentConstraint(references=(5, 0));6:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0006, pntY=0.0240, startParam=-0.0234, endParam=0.0246, isConstruction=False);7:SN_Start;SubnodeConstraint(references=(7, 6));8:SN_End;SubnodeConstraint(references=(8, 6));9:Line(dirX=1.0000, dirY=0.0000, pntX=0.0022, pntY=-0.0240, startParam=-0.0262, endParam=0.0218, isConstruction=False);ParallelConstraint(references=(9, 6));HorizontalConstraint(references=(9,));10:SN_Start;SubnodeConstraint(references=(10, 9));11:SN_End;SubnodeConstraint(references=(11, 9));12:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0240, pntY=-0.0095, startParam=-0.0335, endParam=0.0145, isConstruction=False);PerpendicularConstraint(references=(12, 9));13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 7));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 10));15:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0240, pntY=-0.0095, startParam=-0.0335, endParam=0.0145, isConstruction=False);ParallelConstraint(references=(15, 12));16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 8));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 11));18:Circle(xCenter=0.0155, yCenter=-0.0155, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(18,), length=0.0035 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 4));20:Circle(xCenter=-0.0155, yCenter=-0.0155, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(20, 18));21:SN_Center;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 3));22:Circle(xCenter=-0.0155, yCenter=0.0155, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(22, 18));23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 1));24:Circle(xCenter=0.0155, yCenter=0.0155, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(24, 18));25:SN_Center;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 2));26:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0115, clockwise=False, isConstruction=False);DiameterConstraint(references=(26,), length=0.023 METER);27:SN_Center;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 5));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the position of the biggest circle within the square?",
  "fcstd_file": "2D_0237.FCStd",
  "isconstruction_file": "2D_0237_isconstruction.json"
}