{
  "pid": 581,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Rectangle",
    "B": "Triangle",
    "C": "Circle",
    "D": "Semi-circle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0025, pntY=0.0542, startParam=-0.0017, endParam=0.0015, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));HorizontalConstraint(references=(3, 0));4:Line(dirX=0.0000, dirY=1.0000, pntX=0.0025, pntY=0.0541, startParam=-0.0016, endParam=0.0016, isConstruction=False);VerticalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));HorizontalConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));HorizontalConstraint(references=(6, 3));7:Arc(xCenter=0.0000, yCenter=0.0557, xDir=1.0000, yDir=0.0000, radius=0.0025, startParam=-3.1416, endParam=0.0000, clockwise=True, isConstruction=False);RadiusConstraint(references=(7,), length=0.00254 METER);8:SN_Center;SubnodeConstraint(references=(8, 7));ConcentricConstraint(references=(8, 0));9:SN_Start;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 3));10:SN_End;SubnodeConstraint(references=(10, 7));CoincidentConstraint(references=(10, 6));11:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0044, pntY=0.0525, startParam=-0.0018, endParam=0.0016, isConstruction=False);HorizontalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 2));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 0));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0060, pntY=0.0521, startParam=-0.0004, endParam=0.0005, isConstruction=False);VerticalConstraint(references=(14,));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 13));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 0));17:Line(dirX=1.0000, dirY=0.0000, pntX=0.0042, pntY=0.0525, startParam=-0.0017, endParam=0.0017, isConstruction=False);HorizontalConstraint(references=(17,));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 5));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 0));20:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0060, pntY=0.0523, startParam=-0.0002, endParam=0.0006, isConstruction=False);VerticalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 0));23:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0516, startParam=-0.0060, endParam=0.0060, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 16));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What geometric shape forms the top part of the CAD object?",
  "fcstd_file": "2D_0581.FCStd",
  "isconstruction_file": "2D_0581_isconstruction.json"
}