{
  "pid": 4,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "2D",
    "B": "3D",
    "C": "1D",
    "D": "4D"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0196, pntY=0.0000, startParam=-0.0196, endParam=0.0164, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0056, pntY=0.0040, startParam=-0.0056, endParam=0.0304, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));VerticalConstraint(references=(6, 3));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0025, startParam=-0.0025, endParam=0.0015, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0360, pntY=0.0181, startParam=-0.0141, endParam=-0.0075, isConstruction=False);PerpendicularConstraint(references=(10, 4));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 6));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0400, pntY=0.0155, startParam=-0.0115, endParam=-0.0049, isConstruction=False);ParallelConstraint(references=(13, 10));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Arc(xCenter=-0.0310, yCenter=0.0106, xDir=0.9564, yDir=-0.2921, radius=0.0090, startParam=-5.1141, endParam=-2.8451, clockwise=False, isConstruction=False);TangentConstraint(references=(16, 13));17:SN_Center;SubnodeConstraint(references=(17, 16));18:SN_Start;SubnodeConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 16));CoincidentConstraint(references=(19, 15));20:Arc(xCenter=-0.0310, yCenter=0.0106, xDir=0.9564, yDir=-0.2921, radius=0.0050, startParam=-5.1141, endParam=-2.8451, clockwise=False, isConstruction=False);TangentConstraint(references=(20, 10));RadiusConstraint(references=(20,), length=0.005 METER);21:SN_Center;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 17));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 12));24:Line(dirX=0.7660, dirY=-0.6428, pntX=-0.0190, pntY=0.0123, startParam=-0.0081, endParam=-0.0051, isConstruction=False);TangentConstraint(references=(24, 16));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 16));CoincidentConstraint(references=(25, 18));26:SN_End;SubnodeConstraint(references=(26, 24));27:Line(dirX=0.7660, dirY=-0.6428, pntX=-0.0171, pntY=0.0055, startParam=-0.0139, endParam=-0.0109, isConstruction=False);TangentConstraint(references=(27, 20));ParallelConstraint(references=(27, 24));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 22));29:SN_End;SubnodeConstraint(references=(29, 27));30:Arc(xCenter=-0.0158, yCenter=0.0240, xDir=0.9844, yDir=-0.1760, radius=0.0110, startParam=-2.0920, endParam=-0.9575, clockwise=False, isConstruction=False);CoincidentConstraint(references=(30, 26));TangentConstraint(references=(30, 24));31:SN_Center;SubnodeConstraint(references=(31, 30));32:SN_Start;SubnodeConstraint(references=(32, 30));CoincidentConstraint(references=(32, 26));33:SN_End;SubnodeConstraint(references=(33, 30));34:Arc(xCenter=-0.0158, yCenter=0.0240, xDir=1.0000, yDir=-0.0012, radius=0.0150, startParam=-2.2677, endParam=-1.1333, clockwise=False, isConstruction=False);CoincidentConstraint(references=(34, 29));TangentConstraint(references=(34, 27));RadiusConstraint(references=(34,), length=0.015 METER);DistanceConstraint(references=(34, 4), direction=MINIMUM, length=0.005 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);35:SN_Center;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 31));36:SN_Start;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 29));37:SN_End;SubnodeConstraint(references=(37, 34));38:Line(dirX=0.4226, dirY=-0.9063, pntX=-0.0090, pntY=0.0093, startParam=-0.0052, endParam=-0.0012, isConstruction=False);CoincidentConstraint(references=(38, 31));39:SN_Start;SubnodeConstraint(references=(39, 38));CoincidentConstraint(references=(39, 33));40:SN_End;SubnodeConstraint(references=(40, 38));CoincidentConstraint(references=(40, 37));41:Arc(xCenter=-0.0360, yCenter=0.0040, xDir=1.0000, yDir=-0.0015, radius=0.0040, startParam=-3.1401, endParam=-1.5693, clockwise=False, isConstruction=False);TangentConstraint(references=(41, 13));42:SN_Center;SubnodeConstraint(references=(42, 41));CoincidentConstraint(references=(42, 6));43:SN_Start;SubnodeConstraint(references=(43, 41));CoincidentConstraint(references=(43, 14));44:SN_End;SubnodeConstraint(references=(44, 41));CoincidentConstraint(references=(44, 3));45:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the overall dimensionality of the CAD object?",
  "fcstd_file": "2D_0004.FCStd",
  "isconstruction_file": "2D_0004_isconstruction.json"
}