{
  "pid": 327,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "1",
    "B": "2",
    "C": "3",
    "D": "4"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0215, pntY=-0.0070, startParam=-0.0145, endParam=0.0145, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0215, pntY=-0.0360, startParam=-0.0145, endParam=0.0145, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0070, pntY=-0.0222, startParam=-0.0152, endParam=0.0138, isConstruction=False);PerpendicularConstraint(references=(7, 4));EqualConstraint(references=(7, 1));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0360, pntY=-0.0218, startParam=-0.0148, endParam=0.0142, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=0.0000, dirY=1.0000, pntX=0.0215, pntY=-0.0041, startParam=-0.0029, endParam=0.0041, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));MidpointConstraint(references=(14, 1));15:SN_End;SubnodeConstraint(references=(15, 13));MidpointConstraint(references=(15, 0));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0375, pntY=-0.0215, startParam=-0.0015, endParam=0.0055, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));MidpointConstraint(references=(17, 10));18:SN_End;SubnodeConstraint(references=(18, 16));MidpointConstraint(references=(18, 0));19:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0015, pntY=-0.0215, startParam=-0.0055, endParam=0.0015, isConstruction=False);PerpendicularConstraint(references=(19, 0));HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));MidpointConstraint(references=(20, 7));21:SN_End;SubnodeConstraint(references=(21, 19));22:Point(x=0.0000, y=-0.0215, isConstruction=False);MidpointConstraint(references=(22, 0));VerticalConstraint(references=(22, 21));23:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0215, pntY=-0.0389, startParam=-0.0029, endParam=0.0041, isConstruction=False);VerticalConstraint(references=(23,));24:SN_Start;SubnodeConstraint(references=(24, 23));MidpointConstraint(references=(24, 4));25:SN_End;SubnodeConstraint(references=(25, 23));MidpointConstraint(references=(25, 0));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many lines of symmetry does the object in the image have?",
  "fcstd_file": "2D_0327.FCStd",
  "isconstruction_file": "2D_0327_isconstruction.json"
}