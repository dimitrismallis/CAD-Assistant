{
  "pid": 379,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Diagonal",
    "D": "Curved"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0015, yCenter=-0.0520, xDir=1.0000, yDir=0.0000, radius=0.0070, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.014 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));3:Point(x=-0.0095, y=-0.0520, isConstruction=False);HorizontalConstraint(references=(3, 2));CoincidentConstraint(references=(3, 0));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0086, pntY=-0.0525, startParam=-0.0101, endParam=-0.0291, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0054, pntY=-0.0515, startParam=-0.0069, endParam=-0.0259, isConstruction=False);ParallelConstraint(references=(7, 4));HorizontalConstraint(references=(7,));DistanceConstraint(references=(7, 4), direction=MINIMUM, length=0.001 METER, halfSpace0=RIGHT, halfSpace1=LEFT);8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0015, pntY=-0.0493, startParam=0.0032, endParam=0.0022, isConstruction=False);PerpendicularConstraint(references=(10, 7));MidpointConstraint(references=(10, 2));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 5));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 8));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0205, pntY=-0.0528, startParam=-0.0003, endParam=-0.0013, isConstruction=False);ParallelConstraint(references=(13, 10));CoincidentConstraint(references=(13, 0));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 6));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 9));16:Arc(xCenter=0.0015, yCenter=-0.0520, xDir=1.0000, yDir=0.0000, radius=0.0110, startParam=-3.1416, endParam=-0.6322, clockwise=False, isConstruction=False);ConcentricConstraint(references=(16, 1));17:SN_Center;SubnodeConstraint(references=(17, 16));18:SN_Start;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 3));19:SN_End;SubnodeConstraint(references=(19, 16));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.0137, pntY=-0.0585, startParam=-0.0034, endParam=0.0068, isConstruction=False);HorizontalConstraint(references=(20,));DistanceConstraint(references=(20, 4), direction=MINIMUM, length=0.006 METER, halfSpace0=LEFT, halfSpace1=LEFT);21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 0));23:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0205, pntY=-0.0642, startParam=-0.0057, endParam=0.0038, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 0));26:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0055, pntY=-0.0680, startParam=-0.0150, endParam=0.0150, isConstruction=False);27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 25));28:SN_End;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 0));29:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0095, pntY=-0.0618, startParam=-0.0062, endParam=0.0098, isConstruction=False);30:SN_Start;SubnodeConstraint(references=(30, 29));CoincidentConstraint(references=(30, 28));31:SN_End;SubnodeConstraint(references=(31, 29));CoincidentConstraint(references=(31, 3));32:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the rectangle connected to the circle?",
  "fcstd_file": "2D_0379.FCStd",
  "isconstruction_file": "2D_0379_isconstruction.json"
}