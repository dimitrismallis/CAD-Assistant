{
  "pid": 155,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Rounded",
    "B": "Sharp",
    "C": "Beveled",
    "D": null
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0710, pntY=0.0390, startParam=-0.0280, endParam=0.0355, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.1088, pntY=0.0035, startParam=-0.0378, endParam=0.0194, isConstruction=False);PerpendicularConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.1535, pntY=0.1808, startParam=-0.1518, endParam=0.1784, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.1088, pntY=0.3845, startParam=-0.0194, endParam=0.0378, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));VerticalConstraint(references=(12, 3));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0710, pntY=0.3390, startParam=-0.0456, endParam=0.0179, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0804, pntY=0.3210, startParam=-0.0094, endParam=0.0096, isConstruction=False);PerpendicularConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1154, pntY=0.1598, startParam=-0.1358, endParam=0.0674, isConstruction=False);VerticalConstraint(references=(19,));DistanceConstraint(references=(19, 7), direction=MINIMUM, length=0.0381 METER, halfSpace0=LEFT, halfSpace1=LEFT);DistanceConstraint(references=(19, 13), direction=MINIMUM, length=0.04445 METER, halfSpace0=RIGHT, halfSpace1=LEFT);20:SN_Start;SubnodeConstraint(references=(20, 19));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.0809, pntY=0.0670, startParam=-0.0099, endParam=0.0092, isConstruction=False);HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 2));24:SN_End;SubnodeConstraint(references=(24, 22));25:Point(x=0.1154, y=0.3210, isConstruction=False);CoincidentConstraint(references=(25, 19));CoincidentConstraint(references=(25, 16));26:Arc(xCenter=0.0900, yCenter=0.2956, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(26, 16));TangentConstraint(references=(26, 19));27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 20));29:SN_End;SubnodeConstraint(references=(29, 26));CoincidentConstraint(references=(29, 18));30:Point(x=0.1535, y=0.3845, isConstruction=False);CoincidentConstraint(references=(30, 10));CoincidentConstraint(references=(30, 7));31:Arc(xCenter=0.1281, yCenter=0.3591, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(31, 7));TangentConstraint(references=(31, 10));32:SN_Center;SubnodeConstraint(references=(32, 31));33:SN_Start;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 9));34:SN_End;SubnodeConstraint(references=(34, 31));CoincidentConstraint(references=(34, 11));35:Point(x=0.1535, y=0.0035, isConstruction=False);CoincidentConstraint(references=(35, 7));CoincidentConstraint(references=(35, 4));36:Arc(xCenter=0.1281, yCenter=0.0289, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=-1.5708, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(36, 4));TangentConstraint(references=(36, 7));EqualConstraint(references=(36, 31));37:SN_Center;SubnodeConstraint(references=(37, 36));38:SN_Start;SubnodeConstraint(references=(38, 36));CoincidentConstraint(references=(38, 6));39:SN_End;SubnodeConstraint(references=(39, 36));CoincidentConstraint(references=(39, 8));40:Point(x=0.1154, y=0.0670, isConstruction=False);CoincidentConstraint(references=(40, 22));CoincidentConstraint(references=(40, 19));41:Arc(xCenter=0.0900, yCenter=0.0924, xDir=1.0000, yDir=0.0000, radius=0.0254, startParam=-1.5708, endParam=-0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(41, 19));TangentConstraint(references=(41, 22));EqualConstraint(references=(41, 31));42:SN_Center;SubnodeConstraint(references=(42, 41));43:SN_Start;SubnodeConstraint(references=(43, 41));CoincidentConstraint(references=(43, 24));44:SN_End;SubnodeConstraint(references=(44, 41));CoincidentConstraint(references=(44, 21));45:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of corner does the CAD object have at its bottom right?",
  "fcstd_file": "2D_0155.FCStd",
  "isconstruction_file": "2D_0155_isconstruction.json"
}