{
  "pid": 389,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Triangle",
    "B": "Square",
    "C": "Circle",
    "D": "U-shape"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0147, startParam=3.1416, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(1, 0));2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0147, pntY=0.0031, startParam=-0.0031, endParam=0.0037, isConstruction=False);VerticalConstraint(references=(5,));6:SN_Start;SubnodeConstraint(references=(6, 5));HorizontalConstraint(references=(6, 0));CoincidentConstraint(references=(6, 3));7:SN_End;SubnodeConstraint(references=(7, 5));CoincidentConstraint(references=(7, 0));8:Line(dirX=0.0000, dirY=1.0000, pntX=0.0147, pntY=0.0031, startParam=-0.0031, endParam=0.0037, isConstruction=False);TangentConstraint(references=(8, 1));9:SN_Start;SubnodeConstraint(references=(9, 8));HorizontalConstraint(references=(9, 0));CoincidentConstraint(references=(9, 4));10:SN_End;SubnodeConstraint(references=(10, 8));CoincidentConstraint(references=(10, 0));11:Line(dirX=1.0000, dirY=0.0000, pntX=0.0151, pntY=0.0068, startParam=-0.0004, endParam=0.0008, isConstruction=False);HorizontalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 0));14:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0160, startParam=-3.1416, endParam=0.0146, clockwise=False, isConstruction=False);TangentConstraint(references=(14, 0));15:SN_Center;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 2));16:SN_Start;SubnodeConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 14));18:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0160, pntY=0.0034, startParam=-0.0034, endParam=0.0034, isConstruction=False);VerticalConstraint(references=(18,));19:SN_Start;SubnodeConstraint(references=(19, 18));HorizontalConstraint(references=(19, 0));CoincidentConstraint(references=(19, 16));20:SN_End;SubnodeConstraint(references=(20, 18));HorizontalConstraint(references=(20, 13));21:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0154, pntY=0.0068, startParam=-0.0006, endParam=0.0006, isConstruction=False);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 7));24:Line(dirX=-0.0073, dirY=1.0000, pntX=0.0160, pntY=0.0035, startParam=-0.0033, endParam=0.0033, isConstruction=False);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 17));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 13));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the basic shape of the CAD object in the image?",
  "fcstd_file": "2D_0389.FCStd",
  "isconstruction_file": "2D_0389_isconstruction.json"
}