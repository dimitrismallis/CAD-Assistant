{
  "pid": 270,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "A",
    "B": "X",
    "C": "M",
    "D": "W"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0191, pntY=0.0000, startParam=-0.0191, endParam=0.0191, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=1.0000, pntX=0.0381, pntY=0.0187, startParam=-0.0187, endParam=0.0194, isConstruction=False);VerticalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0191, pntY=0.0381, startParam=-0.0191, endParam=0.0191, isConstruction=False);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));VerticalConstraint(references=(9, 0));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0187, startParam=-0.0194, endParam=0.0187, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=0.1644, dirY=0.9864, pntX=0.0032, pntY=0.0190, startParam=-0.0193, endParam=0.0193, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 2));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 7));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0103, pntY=0.0381, startParam=-0.0039, endParam=0.0024, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 7));19:Line(dirX=0.4242, dirY=-0.9055, pntX=0.0160, pntY=0.0312, startParam=-0.0077, endParam=0.0073, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=0.4242, dirY=0.9055, pntX=0.0222, pntY=0.0313, startParam=-0.0074, endParam=0.0076, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 7));25:Line(dirX=1.0000, dirY=0.0000, pntX=0.0284, pntY=0.0381, startParam=-0.0030, endParam=0.0034, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 7));28:Line(dirX=0.1644, dirY=-0.9864, pntX=0.0349, pntY=0.0190, startParam=-0.0194, endParam=0.0193, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 3));31:Line(dirX=-0.2228, dirY=0.9749, pntX=0.0286, pntY=0.0137, startParam=-0.0141, endParam=0.0087, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 1));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=-0.3714, dirY=-0.9285, pntX=0.0247, pntY=0.0174, startParam=-0.0052, endParam=0.0085, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));37:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0209, pntY=0.0095, startParam=-0.0007, endParam=0.0044, isConstruction=False);HorizontalConstraint(references=(37,));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=-0.3714, dirY=0.9285, pntX=0.0149, pntY=0.0136, startParam=-0.0044, endParam=0.0092, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 39));42:SN_End;SubnodeConstraint(references=(42, 40));43:Line(dirX=-0.2228, dirY=-0.9749, pntX=0.0086, pntY=0.0101, startParam=-0.0125, endParam=0.0103, isConstruction=False);44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 42));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 1));46:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0024, pntY=0.0000, startParam=-0.0040, endParam=0.0024, isConstruction=False);47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 45));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 12));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Which letter is depicted in the image?",
  "fcstd_file": "2D_0270.FCStd",
  "isconstruction_file": "2D_0270_isconstruction.json"
}