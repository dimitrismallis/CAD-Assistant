{
  "pid": 693,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "Trapezoid"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0126, pntY=0.0294, startParam=-0.0732, endParam=0.0592, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-0.5528, dirY=0.8333, pntX=0.0584, pntY=0.0495, startParam=-0.0242, endParam=0.0266, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0046, pntY=0.0717, startParam=-0.0391, endParam=0.0371, isConstruction=False);HorizontalConstraint(references=(7,));ParallelConstraint(references=(7, 1));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.5528, dirY=-0.8333, pntX=-0.0501, pntY=0.0453, startParam=-0.0318, endParam=0.0191, isConstruction=False);EqualConstraint(references=(10, 4));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0051, pntY=0.0294, startParam=-0.0449, endParam=0.0440, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 1));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0051, pntY=-0.0468, startParam=-0.0449, endParam=0.0440, isConstruction=False);ParallelConstraint(references=(16, 13));HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0500, pntY=-0.0108, startParam=-0.0402, endParam=0.0360, isConstruction=False);PerpendicularConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 14));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 17));22:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0389, pntY=-0.0108, startParam=-0.0402, endParam=0.0360, isConstruction=False);ParallelConstraint(references=(22, 19));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 15));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 18));25:Point(x=0.0056, y=-0.0087, isConstruction=False);MidpointConstraint(references=(25, 17, 15));MidpointConstraint(references=(25, 18, 14));26:Point(x=0.0056, y=0.0294, isConstruction=False);MidpointConstraint(references=(26, 1));VerticalConstraint(references=(26, 25));27:Point(x=0.0056, y=0.0294, isConstruction=False);MidpointConstraint(references=(27, 1));VerticalConstraint(references=(27, 25));28:Circle(xCenter=0.0056, yCenter=-0.0087, xDir=1.0000, yDir=0.0000, radius=0.0175, clockwise=False, isConstruction=False);29:SN_Center;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 25));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the roof of the CAD object?",
  "fcstd_file": "2D_0693.FCStd",
  "isconstruction_file": "2D_0693_isconstruction.json"
}