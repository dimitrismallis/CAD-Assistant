{
  "pid": 251,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Circular",
    "B": "Triangular",
    "C": "Rectangular",
    "D": "Pentagonal"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.8661, dirY=-0.4998, pntX=-0.0055, pntY=0.0053, startParam=-0.0063, endParam=0.0063, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=0.5064, dirY=-0.8623, pntX=-0.0096, pntY=-0.0002, startParam=-0.0027, endParam=0.0027, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=0.8661, dirY=-0.4998, pntX=0.0055, pntY=0.0053, startParam=-0.0064, endParam=0.0064, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=-0.5064, dirY=-0.8623, pntX=0.0096, pntY=-0.0002, startParam=-0.0027, endParam=0.0027, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0110, pntY=-0.0069, startParam=-0.0016, endParam=0.0016, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 0));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0085, startParam=-0.0110, endParam=0.0110, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=0.0000, dirY=1.0000, pntX=0.0110, pntY=-0.0069, startParam=-0.0016, endParam=0.0016, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Arc(xCenter=0.0100, yCenter=-0.0035, xDir=1.0000, yDir=0.0000, radius=0.0020, startParam=-3.6726, endParam=-1.0472, clockwise=False, isConstruction=False);TangentConstraint(references=(22, 0));23:SN_Center;SubnodeConstraint(references=(23, 22));24:SN_Start;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 12));25:SN_End;SubnodeConstraint(references=(25, 22));CoincidentConstraint(references=(25, 21));26:Arc(xCenter=-0.0100, yCenter=-0.0035, xDir=1.0000, yDir=0.0000, radius=0.0020, startParam=-2.0944, endParam=0.5310, clockwise=False, isConstruction=False);TangentConstraint(references=(26, 0));27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 14));29:SN_End;SubnodeConstraint(references=(29, 26));CoincidentConstraint(references=(29, 6));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the top edge of the CAD object?",
  "fcstd_file": "2D_0251.FCStd",
  "isconstruction_file": "2D_0251_isconstruction.json"
}