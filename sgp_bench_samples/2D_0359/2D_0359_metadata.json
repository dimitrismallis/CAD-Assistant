{
  "pid": 359,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Horizontal symmetry",
    "B": "Vertical symmetry",
    "C": "Asymmetry",
    "D": "Horizontal and vertical symmetry"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0603, pntY=0.0556, startParam=-0.0572, endParam=0.0572, isConstruction=True);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0603, pntY=0.0079, startParam=-0.0572, endParam=0.0572, isConstruction=True);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0603, pntY=0.0318, startParam=-0.0286, endParam=0.0286, isConstruction=True);8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Arc(xCenter=0.0603, yCenter=0.0556, xDir=1.0000, yDir=0.0000, radius=0.0079, startParam=3.1416, endParam=0.0000, clockwise=False, isConstruction=False);11:SN_Center;SubnodeConstraint(references=(11, 10));MidpointConstraint(references=(11, 1));12:SN_Start;SubnodeConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 10));14:Arc(xCenter=0.0603, yCenter=0.0079, xDir=1.0000, yDir=0.0000, radius=0.0079, startParam=0.0000, endParam=3.1416, clockwise=False, isConstruction=False);15:SN_Center;SubnodeConstraint(references=(15, 14));MidpointConstraint(references=(15, 4));16:SN_Start;SubnodeConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 14));18:Line(dirX=0.0000, dirY=1.0000, pntX=0.0524, pntY=0.0595, startParam=-0.0040, endParam=0.0040, isConstruction=False);VerticalConstraint(references=(18,));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 1));CoincidentConstraint(references=(19, 12));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 0));21:Line(dirX=0.0000, dirY=1.0000, pntX=0.0683, pntY=0.0595, startParam=-0.0040, endParam=0.0040, isConstruction=False);VerticalConstraint(references=(21,));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 1));CoincidentConstraint(references=(22, 13));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 0));24:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0683, pntY=0.0040, startParam=-0.0040, endParam=0.0040, isConstruction=False);VerticalConstraint(references=(24,));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 4));CoincidentConstraint(references=(25, 16));26:SN_End;SubnodeConstraint(references=(26, 24));HorizontalConstraint(references=(26, 0));27:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0524, pntY=0.0040, startParam=-0.0040, endParam=0.0040, isConstruction=False);VerticalConstraint(references=(27,));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 4));VerticalConstraint(references=(28, 20));CoincidentConstraint(references=(28, 17));29:SN_End;SubnodeConstraint(references=(29, 27));HorizontalConstraint(references=(29, 26));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of symmetry is shown in the CAD drawing?",
  "fcstd_file": "2D_0359.FCStd",
  "isconstruction_file": "2D_0359_isconstruction.json"
}