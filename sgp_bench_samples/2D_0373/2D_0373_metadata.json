{
  "pid": 373,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Diagonal",
    "B": "Horizontal",
    "C": "Vertical",
    "D": "Circular"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.1407, pntY=0.0762, startParam=-0.3439, endParam=0.0625, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0321, pntY=-0.0762, startParam=-0.1711, endParam=0.2353, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.2032, pntY=0.0984, startParam=0.0222, endParam=0.1746, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.2032, pntY=0.0984, startParam=0.0222, endParam=0.1746, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1572, pntY=-0.0000, startParam=-0.0460, endParam=0.0429, isConstruction=False);PerpendicularConstraint(references=(14, 7));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 7));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0052, pntY=-0.0000, startParam=-0.1195, endParam=0.1472, isConstruction=False);PerpendicularConstraint(references=(17, 7));DistanceConstraint(references=(17, 4), direction=MINIMUM, length=0.0762 METER, halfSpace0=RIGHT, halfSpace1=LEFT);18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 17));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.1624, pntY=-0.0000, startParam=-0.0100, endParam=0.0408, isConstruction=False);PerpendicularConstraint(references=(20, 10));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 10));23:Arc(xCenter=-0.1143, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0318, startParam=-4.7124, endParam=-1.5708, clockwise=True, isConstruction=False);24:SN_Center;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 18));25:SN_Start;SubnodeConstraint(references=(25, 23));26:SN_End;SubnodeConstraint(references=(26, 23));27:Arc(xCenter=0.1524, yCenter=-0.0000, xDir=1.0000, yDir=-0.0000, radius=0.0318, startParam=-1.5708, endParam=1.5708, clockwise=True, isConstruction=False);28:SN_Center;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 19));29:SN_Start;SubnodeConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 27));31:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0179, pntY=0.0317, startParam=-0.1322, endParam=0.1345, isConstruction=False);TangentConstraint(references=(31, 23));TangentConstraint(references=(31, 27));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 26));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 29));34:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0306, pntY=-0.0318, startParam=-0.1449, endParam=0.1218, isConstruction=False);TangentConstraint(references=(34, 23));TangentConstraint(references=(34, 27));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 25));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 30));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the main inner shape relative to the page?",
  "fcstd_file": "2D_0373.FCStd",
  "isconstruction_file": "2D_0373_isconstruction.json"
}