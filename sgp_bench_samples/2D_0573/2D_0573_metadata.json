{
  "pid": 573,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "2",
    "B": "3",
    "C": "4",
    "D": "5"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=0.0000, y=0.0238, isConstruction=False);VerticalConstraint(references=(1, 0));2:Point(x=0.0000, y=0.0016, isConstruction=False);VerticalConstraint(references=(2, 0));3:Line(dirX=-0.3420, dirY=0.9397, pntX=-0.0019, pntY=0.0179, startParam=-0.0056, endParam=0.0056, isConstruction=True);4:SN_Start;SubnodeConstraint(references=(4, 3));5:SN_End;SubnodeConstraint(references=(5, 3));6:Line(dirX=0.3420, dirY=0.9397, pntX=0.0019, pntY=0.0179, startParam=-0.0056, endParam=0.0056, isConstruction=True);7:SN_Start;SubnodeConstraint(references=(7, 6));8:SN_End;SubnodeConstraint(references=(8, 6));9:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0183, startParam=-0.0056, endParam=0.0056, isConstruction=True);10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 7));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 1));12:Line(dirX=-0.8660, dirY=-0.5000, pntX=-0.0048, pntY=0.0099, startParam=-0.0056, endParam=0.0056, isConstruction=True);13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 4));14:SN_End;SubnodeConstraint(references=(14, 12));15:Line(dirX=0.8660, dirY=-0.5000, pntX=0.0048, pntY=0.0099, startParam=-0.0056, endParam=0.0056, isConstruction=True);16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 10));17:SN_End;SubnodeConstraint(references=(17, 15));18:Arc(xCenter=0.0000, yCenter=0.0127, xDir=1.0000, yDir=0.0000, radius=0.0111, startParam=-4.3633, endParam=-2.6180, clockwise=False, isConstruction=False);DiameterConstraint(references=(18,), length=0.02222 METER);CoincidentConstraint(references=(18, 1));CoincidentConstraint(references=(18, 2));CoincidentConstraint(references=(18, 5));CoincidentConstraint(references=(18, 8));CoincidentConstraint(references=(18, 14));CoincidentConstraint(references=(18, 17));19:SN_Center;SubnodeConstraint(references=(19, 18));VerticalConstraint(references=(19, 0));CoincidentConstraint(references=(19, 4));CoincidentConstraint(references=(19, 7));20:SN_Start;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 3));21:SN_End;SubnodeConstraint(references=(21, 18));22:Arc(xCenter=0.0000, yCenter=0.0127, xDir=1.0000, yDir=0.0000, radius=0.0111, startParam=1.2217, endParam=1.9199, clockwise=False, isConstruction=False);CoincidentConstraint(references=(22, 18));23:SN_Center;SubnodeConstraint(references=(23, 22));24:SN_Start;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 6));25:SN_End;SubnodeConstraint(references=(25, 22));CoincidentConstraint(references=(25, 20));26:Arc(xCenter=0.0000, yCenter=0.0127, xDir=1.0000, yDir=0.0000, radius=0.0111, startParam=-0.5236, endParam=1.2217, clockwise=False, isConstruction=False);CoincidentConstraint(references=(26, 18));27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 15));29:SN_End;SubnodeConstraint(references=(29, 26));CoincidentConstraint(references=(29, 24));30:Arc(xCenter=0.0000, yCenter=0.0127, xDir=1.0000, yDir=0.0000, radius=0.0111, startParam=-2.6180, endParam=-0.5236, clockwise=False, isConstruction=False);CoincidentConstraint(references=(30, 18));31:SN_Center;SubnodeConstraint(references=(31, 30));32:SN_Start;SubnodeConstraint(references=(32, 30));CoincidentConstraint(references=(32, 12));CoincidentConstraint(references=(32, 21));33:SN_End;SubnodeConstraint(references=(33, 30));CoincidentConstraint(references=(33, 28));34:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the total number of points where the lines intersect the circle's boundary?",
  "fcstd_file": "2D_0573.FCStd",
  "isconstruction_file": "2D_0573_isconstruction.json"
}