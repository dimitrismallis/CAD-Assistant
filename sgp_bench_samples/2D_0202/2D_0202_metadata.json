{
  "pid": 202,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Circular",
    "B": "Trapezoidal",
    "C": "Rectangular",
    "D": "Hexagonal"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0353, pntY=0.2126, startParam=-0.0005, endParam=0.0005, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-0.2588, dirY=-0.9659, pntX=-0.0361, pntY=0.2115, startParam=-0.0012, endParam=0.0001, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0382, pntY=0.2114, startParam=-0.0021, endParam=0.0011, isConstruction=False);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.2588, dirY=0.9659, pntX=-0.0392, pntY=0.2112, startParam=0.0002, endParam=0.0014, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));HorizontalConstraint(references=(12, 3));13:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0400, pntY=0.2126, startParam=-0.0004, endParam=0.0008, isConstruction=False);HorizontalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-0.2588, dirY=-0.9659, pntX=-0.0412, pntY=0.2113, startParam=-0.0013, endParam=-0.0001, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));HorizontalConstraint(references=(18, 9));19:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0430, pntY=0.2114, startParam=-0.0018, endParam=0.0015, isConstruction=False);HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=-0.2588, dirY=0.9659, pntX=-0.0444, pntY=0.2114, startParam=0.0000, endParam=0.0013, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));HorizontalConstraint(references=(24, 15));25:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0452, pntY=0.2126, startParam=-0.0004, endParam=0.0008, isConstruction=False);HorizontalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=-0.2588, dirY=-0.9659, pntX=-0.0463, pntY=0.2113, startParam=-0.0014, endParam=-0.0001, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));HorizontalConstraint(references=(30, 21));31:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0474, pntY=0.2114, startParam=-0.0011, endParam=0.0021, isConstruction=False);HorizontalConstraint(references=(31,));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=-0.2588, dirY=0.9659, pntX=-0.0495, pntY=0.2113, startParam=0.0001, endParam=0.0014, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));HorizontalConstraint(references=(36, 27));37:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0499, pntY=0.2126, startParam=-0.0001, endParam=0.0009, isConstruction=False);HorizontalConstraint(references=(37,));DistanceConstraint(references=(37, 31), direction=MINIMUM, length=0.0012 METER, halfSpace0=RIGHT, halfSpace1=LEFT);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 0));40:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0428, pntY=0.2126, startParam=-0.0070, endParam=0.0070, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 3));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 36));43:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape are the individual sections of the CAD object?",
  "fcstd_file": "2D_0202.FCStd",
  "isconstruction_file": "2D_0202_isconstruction.json"
}