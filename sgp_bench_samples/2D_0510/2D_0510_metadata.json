{
  "pid": 510,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "line",
    "B": "Randomly",
    "C": "circular pattern",
    "D": "cross-pattern"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=0.6130, pntY=0.5882, startParam=-1.1767, endParam=1.2998, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.6130, pntY=1.6042, startParam=-1.1767, endParam=1.2998, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=1.0000, pntX=1.7897, pntY=1.0914, startParam=-0.5033, endParam=0.5127, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.6868, pntY=1.1020, startParam=-0.5138, endParam=0.5022, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=-1.0000, dirY=-0.0000, pntX=-1.3743, pntY=1.1025, startParam=-0.5224, endParam=0.6206, isConstruction=False);PerpendicularConstraint(references=(13, 10));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-0.0000, dirY=1.0000, pntX=-1.4234, pntY=1.1111, startParam=-0.5801, endParam=0.5629, isConstruction=False);PerpendicularConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));19:Circle(xCenter=-1.4234, yCenter=0.6707, xDir=-1.0000, yDir=-0.0000, radius=0.0889, clockwise=False, isConstruction=False);DiameterConstraint(references=(19,), length=0.1778 METER);20:SN_Center;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 16));21:Circle(xCenter=-1.8552, yCenter=1.1025, xDir=-1.0000, yDir=-0.0000, radius=0.0889, clockwise=False, isConstruction=False);DiameterConstraint(references=(21,), length=0.1778 METER);22:SN_Center;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 13));23:Circle(xCenter=-1.4234, yCenter=1.5216, xDir=-1.0000, yDir=-0.0000, radius=0.0889, clockwise=False, isConstruction=False);DiameterConstraint(references=(23,), length=0.1778 METER);DistanceConstraint(references=(23, 19), direction=MINIMUM, length=1.029 METER, halfSpace0=LEFT, halfSpace1=LEFT);24:SN_Center;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 16));25:Circle(xCenter=-1.0043, yCenter=1.1025, xDir=-1.0000, yDir=-0.0000, radius=0.0889, clockwise=False, isConstruction=False);DiameterConstraint(references=(25,), length=0.1778 METER);DistanceConstraint(references=(25, 21), direction=MINIMUM, length=1.029 METER, halfSpace0=LEFT, halfSpace1=LEFT);DistanceConstraint(references=(25, 10), direction=MINIMUM, length=0.2286 METER, halfSpace0=LEFT, halfSpace1=RIGHT);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 13));27:Circle(xCenter=-1.4234, yCenter=1.1025, xDir=-1.0000, yDir=-0.0000, radius=0.0889, clockwise=False, isConstruction=False);DiameterConstraint(references=(27,), length=0.1778 METER);28:SN_Center;SubnodeConstraint(references=(28, 27));MidpointConstraint(references=(28, 16));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How are the circles arranged relative to each other?",
  "fcstd_file": "2D_0510.FCStd",
  "isconstruction_file": "2D_0510_isconstruction.json"
}