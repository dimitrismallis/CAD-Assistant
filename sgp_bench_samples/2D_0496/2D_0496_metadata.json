{
  "pid": 496,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "I-beam"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0407, pntY=-0.0159, startParam=-0.0023, endParam=0.0022, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0405, pntY=-0.0181, startParam=0.0002, endParam=0.0018, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0423, pntY=-0.0195, startParam=-0.0014, endParam=0.0002, isConstruction=False);VerticalConstraint(references=(7,));EqualConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0401, pntY=-0.0197, startParam=-0.0023, endParam=0.0020, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0380, pntY=-0.0191, startParam=-0.0006, endParam=0.0010, isConstruction=False);PerpendicularConstraint(references=(13, 10));EqualConstraint(references=(13, 7));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0374, pntY=-0.0181, startParam=0.0007, endParam=0.0023, isConstruction=False);HorizontalConstraint(references=(16,));EqualConstraint(references=(16, 4));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0396, pntY=-0.0161, startParam=-0.0020, endParam=0.0025, isConstruction=False);VerticalConstraint(references=(19,));EqualConstraint(references=(19, 1));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0410, pntY=-0.0136, startParam=-0.0003, endParam=0.0013, isConstruction=False);HorizontalConstraint(references=(22,));EqualConstraint(references=(22, 4));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 2));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0423, pntY=-0.0128, startParam=-0.0009, endParam=0.0007, isConstruction=False);VerticalConstraint(references=(25,));EqualConstraint(references=(25, 7));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0404, pntY=-0.0120, startParam=-0.0020, endParam=0.0023, isConstruction=False);HorizontalConstraint(references=(28,));EqualConstraint(references=(28, 10));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0380, pntY=-0.0128, startParam=-0.0007, endParam=0.0009, isConstruction=False);VerticalConstraint(references=(31,));EqualConstraint(references=(31, 25));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));HorizontalConstraint(references=(33, 2));34:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0388, pntY=-0.0136, startParam=-0.0008, endParam=0.0008, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 21));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the primary shape of the CAD object in the image?",
  "fcstd_file": "2D_0496.FCStd",
  "isconstruction_file": "2D_0496_isconstruction.json"
}