{
  "pid": 48,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "3",
    "B": "4",
    "C": "5",
    "D": "6"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0745, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.149 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=0.0660, xDir=1.0000, yDir=0.0000, radius=0.0043, clockwise=False, isConstruction=False);DiameterConstraint(references=(3,), length=0.00855 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));VerticalConstraint(references=(4, 0));5:Circle(xCenter=-0.0660, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0043, clockwise=False, isConstruction=False);DiameterConstraint(references=(5,), length=0.00855 METER);6:SN_Center;SubnodeConstraint(references=(6, 5));HorizontalConstraint(references=(6, 0));7:Circle(xCenter=0.0660, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0043, clockwise=False, isConstruction=False);DiameterConstraint(references=(7,), length=0.00855 METER);8:SN_Center;SubnodeConstraint(references=(8, 7));HorizontalConstraint(references=(8, 0));9:Circle(xCenter=0.0000, yCenter=-0.0660, xDir=1.0000, yDir=0.0000, radius=0.0043, clockwise=False, isConstruction=False);DiameterConstraint(references=(9,), length=0.0085 METER);10:SN_Center;SubnodeConstraint(references=(10, 9));VerticalConstraint(references=(10, 0));11:Line(dirX=-0.7071, dirY=-0.7071, pntX=0.1799, pntY=-0.1670, startParam=-0.0683, endParam=0.0817, isConstruction=False);12:SN_Start;SubnodeConstraint(references=(12, 11));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=-0.7071, dirY=0.7071, pntX=0.1719, pntY=-0.0623, startParam=-0.0797, endParam=0.0703, isConstruction=False);PerpendicularConstraint(references=(14, 11));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 12));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=-0.7071, dirY=0.7071, pntX=0.0716, pntY=-0.1741, startParam=-0.0716, endParam=0.0784, isConstruction=False);PerpendicularConstraint(references=(17, 11));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 13));19:SN_End;SubnodeConstraint(references=(19, 17));20:Arc(xCenter=0.1041, yCenter=0.0458, xDir=1.0000, yDir=0.0000, radius=0.0611, startParam=-2.0835, endParam=-1.2706, clockwise=False, isConstruction=False);21:SN_Center;SubnodeConstraint(references=(21, 20));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 1));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 16));24:Arc(xCenter=-0.0432, yCenter=-0.1055, xDir=1.0000, yDir=0.0000, radius=0.0608, startParam=-0.2174, endParam=0.5459, clockwise=False, isConstruction=False);25:SN_Center;SubnodeConstraint(references=(25, 24));26:SN_Start;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 19));27:SN_End;SubnodeConstraint(references=(27, 24));CoincidentConstraint(references=(27, 1));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many smaller circles are placed on the circular part of the CAD object?",
  "fcstd_file": "2D_0048.FCStd",
  "isconstruction_file": "2D_0048_isconstruction.json"
}