{
  "pid": 393,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "I-shaped"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0102, startParam=-0.1985, endParam=0.1985, isConstruction=True);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));VerticalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0015, pntY=0.0000, startParam=-0.1307, endParam=0.1307, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));HorizontalConstraint(references=(5, 0));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=1.0000, dirY=0.0000, pntX=0.1625, pntY=0.1000, startParam=-0.0500, endParam=0.0500, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=0.1625, pntY=0.0750, startParam=-0.0500, endParam=-0.0125, isConstruction=False);ParallelConstraint(references=(10, 7));HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1125, pntY=0.0639, startParam=-0.0361, endParam=-0.0111, isConstruction=False);PerpendicularConstraint(references=(13, 10));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 8));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 11));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.2125, pntY=0.0850, startParam=-0.0150, endParam=0.0100, isConstruction=False);ParallelConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 9));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=1.0000, dirY=0.0000, pntX=0.1164, pntY=-0.0750, startParam=-0.0039, endParam=0.0336, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));VerticalConstraint(references=(20, 11));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.1625, pntY=-0.1000, startParam=-0.0500, endParam=0.0500, isConstruction=False);ParallelConstraint(references=(22, 19));HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1125, pntY=-0.0891, startParam=-0.0141, endParam=0.0109, isConstruction=False);PerpendicularConstraint(references=(25, 22));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 20));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 23));28:Line(dirX=0.0000, dirY=-1.0000, pntX=0.2125, pntY=-0.0680, startParam=0.0070, endParam=0.0320, isConstruction=False);ParallelConstraint(references=(28, 25));29:SN_Start;SubnodeConstraint(references=(29, 28));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 24));31:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1500, pntY=-0.0108, startParam=-0.0858, endParam=0.0642, isConstruction=False);DistanceConstraint(references=(31, 1), direction=MINIMUM, length=0.15 METER, halfSpace0=RIGHT, halfSpace1=LEFT);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 12));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 21));34:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1750, pntY=-0.0108, startParam=-0.0858, endParam=0.0642, isConstruction=False);ParallelConstraint(references=(34, 31));DistanceConstraint(references=(34, 31), direction=MINIMUM, length=0.025 METER, halfSpace0=LEFT, halfSpace1=RIGHT);35:SN_Start;SubnodeConstraint(references=(35, 34));36:SN_End;SubnodeConstraint(references=(36, 34));37:Line(dirX=1.0000, dirY=0.0000, pntX=0.1164, pntY=-0.0750, startParam=0.0586, endParam=0.0961, isConstruction=False);CoincidentConstraint(references=(37, 19));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 29));40:Line(dirX=1.0000, dirY=0.0000, pntX=0.1625, pntY=0.0750, startParam=0.0125, endParam=0.0500, isConstruction=False);CoincidentConstraint(references=(40, 10));41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 35));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 18));VerticalConstraint(references=(42, 24));43:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the primary shape of the CAD object in the image?",
  "fcstd_file": "2D_0393.FCStd",
  "isconstruction_file": "2D_0393_isconstruction.json"
}