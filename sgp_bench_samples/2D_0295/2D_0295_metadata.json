{
  "pid": 295,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Semi-circle",
    "B": "Quarter-circle",
    "C": "Crescent",
    "D": "Triangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=-0.0116, yCenter=0.0060, xDir=1.0000, yDir=0.0000, radius=0.0079, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.01575 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));3:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0286, pntY=0.0060, startParam=0.0170, endParam=0.0318, isConstruction=False);HorizontalConstraint(references=(3,));4:SN_Start;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:SN_End;SubnodeConstraint(references=(5, 3));6:Circle(xCenter=0.0032, yCenter=0.0060, xDir=1.0000, yDir=0.0000, radius=0.0079, clockwise=False, isConstruction=False);DiameterConstraint(references=(6,), length=0.01575 METER);7:SN_Center;SubnodeConstraint(references=(7, 6));CoincidentConstraint(references=(7, 5));8:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0116, pntY=-0.0485, startParam=0.0545, endParam=0.0624, isConstruction=False);VerticalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 2));10:SN_End;SubnodeConstraint(references=(10, 8));CoincidentConstraint(references=(10, 1));11:Line(dirX=0.0000, dirY=1.0000, pntX=0.0032, pntY=-0.0485, startParam=0.0545, endParam=0.0624, isConstruction=False);VerticalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 5));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 6));14:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0042, pntY=0.0139, startParam=-0.0074, endParam=0.0074, isConstruction=False);15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 13));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 10));17:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0116, pntY=-0.0564, startParam=-0.0624, endParam=-0.0545, isConstruction=False);VerticalConstraint(references=(17,));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 2));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 1));20:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0032, pntY=-0.0564, startParam=-0.0624, endParam=-0.0545, isConstruction=False);VerticalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 5));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 6));23:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0042, pntY=-0.0019, startParam=-0.0074, endParam=0.0074, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 19));26:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=-0.0217, startParam=0.0217, endParam=0.0277, isConstruction=True);VerticalConstraint(references=(26,));27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 0));28:SN_End;SubnodeConstraint(references=(28, 26));29:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0227, pntY=0.0060, startParam=-0.0227, endParam=-0.0185, isConstruction=True);HorizontalConstraint(references=(29,));30:SN_Start;SubnodeConstraint(references=(30, 29));CoincidentConstraint(references=(30, 28));31:SN_End;SubnodeConstraint(references=(31, 29));32:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0256, pntY=0.0060, startParam=-0.0288, endParam=-0.0209, isConstruction=False);33:SN_Start;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 5));34:SN_End;SubnodeConstraint(references=(34, 32));CoincidentConstraint(references=(34, 3));CoincidentConstraint(references=(34, 6));35:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0244, pntY=0.0060, startParam=-0.0275, endParam=-0.0202, isConstruction=True);36:SN_Start;SubnodeConstraint(references=(36, 35));CoincidentConstraint(references=(36, 5));37:SN_End;SubnodeConstraint(references=(37, 35));CoincidentConstraint(references=(37, 32));CoincidentConstraint(references=(37, 31));38:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the object that is the overlapping of the left circle and the square in the middle?",
  "fcstd_file": "2D_0295.FCStd",
  "isconstruction_file": "2D_0295_isconstruction.json"
}