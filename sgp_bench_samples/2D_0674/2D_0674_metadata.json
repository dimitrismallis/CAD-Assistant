{
  "pid": 674,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Rectangle",
    "D": "Hexagon"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1241, pntY=0.2136, startParam=-0.1099, endParam=0.1101, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1241, pntY=0.0086, startParam=-0.1099, endParam=0.1101, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.2340, pntY=0.1111, startParam=-0.1025, endParam=0.1025, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0140, pntY=0.1111, startParam=-0.1025, endParam=0.1025, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1222, pntY=0.1936, startParam=-0.0918, endParam=0.0882, isConstruction=False);DistanceConstraint(references=(13, 1), direction=MINIMUM, length=0.02 METER, halfSpace0=RIGHT, halfSpace1=LEFT);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1200, pntY=0.0286, startParam=-0.0940, endParam=0.0860, isConstruction=False);ParallelConstraint(references=(16, 13));HorizontalConstraint(references=(16,));DistanceConstraint(references=(16, 4), direction=MINIMUM, length=0.02 METER, halfSpace0=RIGHT, halfSpace1=LEFT);17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.2140, pntY=0.1058, startParam=-0.0878, endParam=0.0772, isConstruction=False);PerpendicularConstraint(references=(19, 16));DistanceConstraint(references=(19, 7), direction=MINIMUM, length=0.02 METER, halfSpace0=RIGHT, halfSpace1=LEFT);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 14));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 17));22:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0340, pntY=0.1163, startParam=-0.0772, endParam=0.0878, isConstruction=False);ParallelConstraint(references=(22, 19));DistanceConstraint(references=(22, 10), direction=MINIMUM, length=0.02 METER, halfSpace0=LEFT, halfSpace1=RIGHT);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 15));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 18));25:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the innermost object in the image?",
  "fcstd_file": "2D_0674.FCStd",
  "isconstruction_file": "2D_0674_isconstruction.json"
}