{
  "pid": 320,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Three",
    "B": "Four",
    "C": "Six",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.8369, dirY=-0.5473, pntX=0.0084, pntY=-0.0249, startParam=-0.0589, endParam=0.0589, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0887, pntY=-0.0571, startParam=-0.0310, endParam=0.0310, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));VerticalConstraint(references=(6, 0));7:Point(x=0.1212, y=-0.0308, isConstruction=False);MidpointConstraint(references=(7, 0));8:Line(dirX=0.0000, dirY=1.0000, pntX=0.1197, pntY=-0.0418, startParam=-0.0153, endParam=0.0153, isConstruction=False);VerticalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 6));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0409, pntY=0.0170, startParam=-0.0097, endParam=0.0097, isConstruction=False);ParallelConstraint(references=(11, 0));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 2));13:SN_End;SubnodeConstraint(references=(13, 11));HorizontalConstraint(references=(13, 0));14:Point(x=0.1477, y=0.0252, isConstruction=False);MidpointConstraint(references=(14, 0));15:Line(dirX=1.0000, dirY=0.0000, pntX=0.1283, pntY=-0.0265, startParam=-0.0086, endParam=0.0086, isConstruction=False);HorizontalConstraint(references=(15,));16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 10));17:SN_End;SubnodeConstraint(references=(17, 15));18:Line(dirX=0.0000, dirY=1.0000, pntX=0.1369, pntY=0.0001, startParam=-0.0266, endParam=0.0266, isConstruction=False);VerticalConstraint(references=(18,));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 17));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 0));21:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0480, pntY=0.0267, startParam=-0.0889, endParam=0.0889, isConstruction=False);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 13));24:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many right angles are present in the CAD object shown in the image?",
  "fcstd_file": "2D_0320.FCStd",
  "isconstruction_file": "2D_0320_isconstruction.json"
}