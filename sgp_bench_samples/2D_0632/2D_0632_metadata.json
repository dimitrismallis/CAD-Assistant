{
  "pid": 632,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Diagonal",
    "D": "Curved"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1727, pntY=0.0181, startParam=-0.0318, endParam=0.0317, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1645, pntY=0.0499, startParam=-0.0083, endParam=0.0141, isConstruction=False);PerpendicularConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1504, pntY=0.0421, startParam=-0.0078, endParam=0.0334, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1584, pntY=-0.0136, startParam=-0.0143, endParam=0.1361, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0227, pntY=0.0087, startParam=-0.1276, endParam=0.0227, isConstruction=False);PerpendicularConstraint(references=(13, 7));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 9));15:SN_End;SubnodeConstraint(references=(15, 13));VerticalConstraint(references=(15, 0));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0015, startParam=-0.0102, endParam=0.0121, isConstruction=False);VerticalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));HorizontalConstraint(references=(18, 12));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0229, startParam=-0.0093, endParam=0.0095, isConstruction=False);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0110, pntY=-0.0324, startParam=-0.0110, endParam=0.0110, isConstruction=False);HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=-0.0200, dirY=0.9998, pntX=-0.0222, pntY=-0.0229, startParam=-0.0095, endParam=0.0093, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 12));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the longest segment of the CAD object?",
  "fcstd_file": "2D_0632.FCStd",
  "isconstruction_file": "2D_0632_isconstruction.json"
}