{
  "pid": 95,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "Hexagon"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0949, pntY=-0.0619, startParam=0.0742, endParam=0.1155, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0619, startParam=-0.0206, endParam=0.0206, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0206, pntY=0.0000, startParam=-0.0619, endParam=0.0619, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0206, pntY=0.0000, startParam=-0.0619, endParam=0.0619, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Line(dirX=0.5264, dirY=-0.8503, pntX=-0.0000, pntY=0.0286, startParam=-0.0392, endParam=0.0392, isConstruction=False);15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 6));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 7));17:Point(x=-0.0000, y=-0.0619, isConstruction=False);MidpointConstraint(references=(17, 1));18:Line(dirX=0.6688, dirY=-0.7435, pntX=-0.0180, pntY=0.0113, startParam=-0.0040, endParam=0.0040, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 10));20:SN_End;SubnodeConstraint(references=(20, 18));21:Line(dirX=-0.7435, dirY=-0.6688, pntX=-0.0180, pntY=0.0060, startParam=-0.0036, endParam=0.0036, isConstruction=False);PerpendicularConstraint(references=(21, 18));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));VerticalConstraint(references=(23, 19));24:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0206, pntY=0.0381, startParam=-0.0238, endParam=0.0238, isConstruction=False);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 6));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 19));27:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0206, pntY=-0.0333, startParam=-0.0286, endParam=0.0286, isConstruction=False);28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 16));29:SN_End;SubnodeConstraint(references=(29, 27));CoincidentConstraint(references=(29, 2));30:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0206, pntY=-0.0333, startParam=-0.0286, endParam=0.0286, isConstruction=False);31:SN_Start;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 8));32:SN_End;SubnodeConstraint(references=(32, 30));CoincidentConstraint(references=(32, 28));33:Line(dirX=0.5692, dirY=-0.8222, pntX=-0.0064, pntY=-0.0413, startParam=-0.0251, endParam=0.0251, isConstruction=False);34:SN_Start;SubnodeConstraint(references=(34, 33));CoincidentConstraint(references=(34, 10));35:SN_End;SubnodeConstraint(references=(35, 33));HorizontalConstraint(references=(35, 17));36:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of additional shape is inside the rectangle one the left side?",
  "fcstd_file": "2D_0095.FCStd",
  "isconstruction_file": "2D_0095_isconstruction.json"
}