{
  "pid": 460,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Four",
    "B": "Five",
    "C": "Six",
    "D": "Seven"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0378, pntY=0.0012, startParam=-0.0022, endParam=0.0023, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0378, pntY=-0.0013, startParam=-0.0022, endParam=0.0023, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0400, pntY=-0.0000, startParam=-0.0012, endParam=0.0013, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0355, pntY=-0.0002, startParam=-0.0014, endParam=0.0011, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0377, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));14:Point(x=0.0400, y=-0.0000, isConstruction=False);MidpointConstraint(references=(14, 0));HorizontalConstraint(references=(14, 13));15:Point(x=0.0400, y=-0.0000, isConstruction=False);MidpointConstraint(references=(15, 0));HorizontalConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0310, pntY=0.0000, startParam=-0.0050, endParam=0.0050, isConstruction=False);VerticalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 0));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0340, pntY=-0.0050, startParam=-0.0030, endParam=0.0030, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=0.7071, dirY=0.7071, pntX=0.0385, pntY=-0.0035, startParam=-0.0021, endParam=0.0021, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 0));25:Line(dirX=0.0000, dirY=1.0000, pntX=0.0400, pntY=-0.0000, startParam=-0.0020, endParam=0.0020, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 0));28:Line(dirX=-0.7071, dirY=0.7071, pntX=0.0385, pntY=0.0035, startParam=-0.0021, endParam=0.0021, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 0));31:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0340, pntY=0.0050, startParam=-0.0030, endParam=0.0030, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 17));34:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many sides does the outer shape of the object have?",
  "fcstd_file": "2D_0460.FCStd",
  "isconstruction_file": "2D_0460_isconstruction.json"
}