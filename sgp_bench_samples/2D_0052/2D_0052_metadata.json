{
  "pid": 52,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Teardrop",
    "D": "Rectangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0080, startParam=-0.2665, endParam=-2.8751, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.016 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0025, clockwise=False, isConstruction=True);DistanceConstraint(references=(5, 1), direction=MINIMUM, length=0.0055 METER, halfSpace0=RIGHT, halfSpace1=LEFT);6:SN_Center;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 2));7:Point(x=0.0000, y=0.0080, isConstruction=False);VerticalConstraint(references=(7, 2));CoincidentConstraint(references=(7, 1));8:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0101, startParam=-0.0181, endParam=0.0119, isConstruction=True);VerticalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 7));10:SN_End;SubnodeConstraint(references=(10, 8));11:Circle(xCenter=0.0000, yCenter=-0.0190, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=True);12:SN_Center;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 8));13:Arc(xCenter=0.0000, yCenter=-0.0190, xDir=1.0000, yDir=0.0000, radius=0.0030, startParam=-2.8751, endParam=-0.2665, clockwise=False, isConstruction=False);DistanceConstraint(references=(13, 11), direction=MINIMUM, length=0.0015 METER, halfSpace0=RIGHT, halfSpace1=LEFT);14:SN_Center;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));CoincidentConstraint(references=(14, 8));15:SN_Start;SubnodeConstraint(references=(15, 13));16:SN_End;SubnodeConstraint(references=(16, 13));17:Point(x=0.0000, y=-0.0220, isConstruction=False);CoincidentConstraint(references=(17, 13));CoincidentConstraint(references=(17, 8));CoincidentConstraint(references=(17, 10));18:Line(dirX=0.2633, dirY=-0.9647, pntX=-0.0054, pntY=-0.0105, startParam=-0.0087, endParam=0.0097, isConstruction=False);TangentConstraint(references=(18, 1));TangentConstraint(references=(18, 13));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 4));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 15));21:Line(dirX=-0.2633, dirY=-0.9647, pntX=0.0054, pntY=-0.0107, startParam=-0.0089, endParam=0.0095, isConstruction=False);TangentConstraint(references=(21, 1));TangentConstraint(references=(21, 13));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 3));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 16));24:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the main body of the CAD object?",
  "fcstd_file": "2D_0052.FCStd",
  "isconstruction_file": "2D_0052_isconstruction.json"
}