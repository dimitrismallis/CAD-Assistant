{
  "pid": 582,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "5",
    "B": "6",
    "C": "7",
    "D": "8"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=-0.0059, y=0.0000, isConstruction=False);CoincidentConstraint(references=(1, 0));2:Point(x=-0.0280, y=0.0032, isConstruction=False);CoincidentConstraint(references=(2, 0));3:Point(x=-0.0150, y=0.0032, isConstruction=False);HorizontalConstraint(references=(3, 2));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0215, pntY=0.0032, startParam=-0.0065, endParam=0.0065, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 3));7:Line(dirX=0.9439, dirY=-0.3302, pntX=-0.0105, pntY=0.0016, startParam=-0.0048, endParam=0.0048, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 1));10:Point(x=-0.0150, y=0.0042, isConstruction=False);VerticalConstraint(references=(10, 3));11:Point(x=-0.0059, y=0.0042, isConstruction=False);VerticalConstraint(references=(11, 1));HorizontalConstraint(references=(11, 10));12:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0150, pntY=0.0037, startParam=-0.0005, endParam=0.0005, isConstruction=False);13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 3));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 10));15:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0104, pntY=0.0042, startParam=-0.0046, endParam=0.0045, isConstruction=False);16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 11));18:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0059, pntY=0.0021, startParam=-0.0021, endParam=0.0021, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 1));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 17));21:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0110, pntY=0.0030, startParam=-0.0012, endParam=0.0012, isConstruction=False);VerticalConstraint(references=(21,));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 15));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 7));24:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0120, pntY=0.0032, startParam=-0.0010, endParam=0.0011, isConstruction=False);PerpendicularConstraint(references=(24, 15));DistanceConstraint(references=(24, 21), direction=MINIMUM, length=0.001 METER, halfSpace0=LEFT, halfSpace1=RIGHT);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 15));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 7));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many lines are used to form the outline of the CAD object?",
  "fcstd_file": "2D_0582.FCStd",
  "isconstruction_file": "2D_0582_isconstruction.json"
}