{
  "pid": 120,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Vertical",
    "B": "Horizontal",
    "C": "Diagonal",
    "D": "Circular"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0073, pntY=0.0079, startParam=-0.0102, endParam=0.0327, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0054, pntY=-0.0079, startParam=-0.0229, endParam=0.0200, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0254, pntY=-0.0016, startParam=-0.0016, endParam=-0.0016, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0254, pntY=-0.0016, startParam=-0.0095, endParam=-0.0032, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 10));13:Point(x=0.0000, y=0.0000, isConstruction=True);CoincidentConstraint(references=(13, 0));14:Arc(xCenter=-0.0175, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0032, startParam=-5.7596, endParam=-0.5236, clockwise=False, isConstruction=False);RadiusConstraint(references=(14,), length=0.003175 METER);15:SN_Center;SubnodeConstraint(references=(15, 14));16:SN_Start;SubnodeConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 14));18:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0254, pntY=-0.0016, startParam=-0.0000, endParam=0.0063, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 10));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 6));21:Line(dirX=1.0000, dirY=0.0000, pntX=0.0053, pntY=0.0016, startParam=-0.0201, endParam=0.0201, isConstruction=False);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 16));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 12));24:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0010, pntY=-0.0016, startParam=-0.0137, endParam=0.0264, isConstruction=False);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 17));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 19));27:Point(x=-0.0254, y=-0.0079, isConstruction=False);MidpointConstraint(references=(27, 13, 3));CoincidentConstraint(references=(27, 7));CoincidentConstraint(references=(27, 4));28:Arc(xCenter=-0.0175, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0079, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(28, 4));TangentConstraint(references=(28, 7));29:SN_Center;SubnodeConstraint(references=(29, 28));30:SN_Start;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 9));31:SN_End;SubnodeConstraint(references=(31, 28));CoincidentConstraint(references=(31, 5));32:Point(x=-0.0254, y=0.0079, isConstruction=False);MidpointConstraint(references=(32, 13, 6));CoincidentConstraint(references=(32, 1));CoincidentConstraint(references=(32, 7));33:Arc(xCenter=-0.0175, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0079, startParam=1.5708, endParam=3.1416, clockwise=False, isConstruction=False);TangentConstraint(references=(33, 7));TangentConstraint(references=(33, 1));EqualConstraint(references=(33, 28));34:SN_Center;SubnodeConstraint(references=(34, 33));35:SN_Start;SubnodeConstraint(references=(35, 33));CoincidentConstraint(references=(35, 2));36:SN_End;SubnodeConstraint(references=(36, 33));CoincidentConstraint(references=(36, 8));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the longest dimension of the object?",
  "fcstd_file": "2D_0120.FCStd",
  "isconstruction_file": "2D_0120_isconstruction.json"
}