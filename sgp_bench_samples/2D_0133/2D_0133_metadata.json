{
  "pid": 133,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Acute",
    "B": "Right",
    "C": "Obtuse",
    "D": "Straight"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.3085, pntY=0.3702, startParam=-0.0020, endParam=0.0190, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.3057, pntY=0.3487, startParam=-0.0048, endParam=0.0162, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.3105, pntY=0.3633, startParam=-0.0069, endParam=0.0146, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.2895, pntY=0.3633, startParam=-0.0069, endParam=0.0146, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.3000, pntY=0.3487, startParam=-0.0105, endParam=0.0105, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 6));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.3000, pntY=0.3467, startParam=-0.0105, endParam=0.0105, isConstruction=False);ParallelConstraint(references=(16, 13));HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));VerticalConstraint(references=(18, 5));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.2895, pntY=0.3477, startParam=-0.0010, endParam=0.0010, isConstruction=False);PerpendicularConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 14));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 17));22:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.3105, pntY=0.3477, startParam=-0.0010, endParam=0.0010, isConstruction=False);ParallelConstraint(references=(22, 19));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 15));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 18));25:Line(dirX=1.0000, dirY=0.0000, pntX=-0.3000, pntY=0.3667, startParam=-0.0105, endParam=0.0105, isConstruction=False);PerpendicularConstraint(references=(25, 10));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 7));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 10));28:Line(dirX=1.0000, dirY=0.0000, pntX=-0.3155, pntY=0.3487, startParam=0.0050, endParam=0.0070, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 5));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=1.0000, dirY=0.0000, pntX=-0.3155, pntY=0.3667, startParam=0.0050, endParam=0.0070, isConstruction=False);ParallelConstraint(references=(31, 28));HorizontalConstraint(references=(31,));EqualConstraint(references=(31, 19));32:SN_Start;SubnodeConstraint(references=(32, 31));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 25));34:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.3105, pntY=0.3577, startParam=-0.0090, endParam=0.0090, isConstruction=False);PerpendicularConstraint(references=(34, 31));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 29));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 32));37:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.3085, pntY=0.3577, startParam=-0.0090, endParam=0.0090, isConstruction=False);ParallelConstraint(references=(37, 34));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 30));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 33));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of angles are formed at the corners of the inner shape in the image?",
  "fcstd_file": "2D_0133.FCStd",
  "isconstruction_file": "2D_0133_isconstruction.json"
}