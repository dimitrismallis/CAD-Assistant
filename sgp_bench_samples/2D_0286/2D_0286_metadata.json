{
  "pid": 286,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Perpendicular",
    "B": "Parallel",
    "C": "Obtuse angle",
    "D": "Overlapping"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.5271, dirY=-0.8498, pntX=0.0013, pntY=0.0008, startParam=-0.0068, endParam=0.0068, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=0.6018, dirY=0.7986, pntX=0.0057, pntY=-0.0040, startParam=-0.0013, endParam=0.0009, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=-0.5271, dirY=0.8498, pntX=0.0027, pntY=0.0023, startParam=-0.0066, endParam=0.0055, isConstruction=False);ParallelConstraint(references=(7, 1));DistanceConstraint(references=(7, 1), direction=MINIMUM, length=0.002 METER, halfSpace0=LEFT, halfSpace1=LEFT);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=-0.9829, dirY=-0.1844, pntX=-0.0008, pntY=0.0069, startParam=-0.0005, endParam=0.0016, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=0.5271, dirY=-0.8498, pntX=-0.0013, pntY=-0.0008, startParam=-0.0068, endParam=0.0068, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 0));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=-0.9829, dirY=-0.1844, pntX=0.0012, pntY=-0.0068, startParam=-0.0011, endParam=0.0010, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=0.6018, dirY=0.7986, pntX=-0.0056, pntY=0.0040, startParam=-0.0009, endParam=0.0012, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 0));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 14));22:Line(dirX=0.5271, dirY=-0.8498, pntX=-0.0030, pntY=-0.0018, startParam=-0.0061, endParam=0.0061, isConstruction=False);ParallelConstraint(references=(22, 13));DistanceConstraint(references=(22, 13), direction=MINIMUM, length=0.002 METER, halfSpace0=LEFT, halfSpace1=RIGHT);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 20));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 18));25:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How are the parts oriented in relation to each other in the image?",
  "fcstd_file": "2D_0286.FCStd",
  "isconstruction_file": "2D_0286_isconstruction.json"
}