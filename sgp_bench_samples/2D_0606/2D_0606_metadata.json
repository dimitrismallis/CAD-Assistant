{
  "pid": 606,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Equilateral",
    "B": "Isosceles",
    "C": "Scalene",
    "D": "Right"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0020, pntY=-0.3810, startParam=-0.3790, endParam=0.3830, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-0.7071, dirY=0.7071, pntX=0.1905, pntY=-0.1905, startParam=-0.2694, endParam=0.2694, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=-0.7071, dirY=-0.7071, pntX=-0.1895, pntY=-0.1895, startParam=-0.2680, endParam=0.2709, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 2));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.3810, pntY=-0.3978, startParam=-0.0168, endParam=0.0023, isConstruction=False);PerpendicularConstraint(references=(10, 1));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 2));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.4000, startParam=-0.3810, endParam=0.3810, isConstruction=False);PerpendicularConstraint(references=(13, 10));DistanceConstraint(references=(13, 1), direction=MINIMUM, length=0.01905 METER, halfSpace0=LEFT, halfSpace1=RIGHT);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));VerticalConstraint(references=(15, 3));16:Line(dirX=0.0000, dirY=1.0000, pntX=0.3810, pntY=-0.3978, startParam=-0.0023, endParam=0.0168, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 5));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0201, startParam=-0.0201, endParam=0.0068, isConstruction=False);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 6));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=-0.7071, dirY=-0.7071, pntX=-0.1704, pntY=-0.1973, startParam=-0.2410, endParam=0.2597, isConstruction=False);ParallelConstraint(references=(22, 7));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 1));25:Line(dirX=0.7071, dirY=-0.7071, pntX=0.1770, pntY=-0.2040, startParam=-0.2504, endParam=0.2504, isConstruction=False);ParallelConstraint(references=(25, 4));DistanceConstraint(references=(25, 4), direction=MINIMUM, length=0.01905 METER, halfSpace0=LEFT, halfSpace1=LEFT);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 21));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 1));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of triangle is shown in the image?",
  "fcstd_file": "2D_0606.FCStd",
  "isconstruction_file": "2D_0606_isconstruction.json"
}