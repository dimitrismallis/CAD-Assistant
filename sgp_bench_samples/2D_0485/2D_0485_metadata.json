{
  "pid": 485,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Two",
    "B": "One",
    "C": "Three",
    "D": null
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.9848, dirY=-0.1736, pntX=1.1812, pntY=0.0684, startParam=-0.0262, endParam=0.0358, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=1.0000, dirY=0.0000, pntX=1.1725, pntY=0.0517, startParam=-0.0265, endParam=0.0265, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=1.1460, pntY=0.0676, startParam=-0.0054, endParam=0.0054, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=1.0000, dirY=-0.0000, pntX=1.1765, pntY=0.0730, startParam=-0.0305, endParam=0.0305, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=0.7071, dirY=-0.7071, pntX=1.1483, pntY=0.0389, startParam=-0.0033, endParam=0.0057, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 0));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=-1.0000, dirY=0.0000, pntX=1.1504, pntY=0.0349, startParam=-0.0019, endParam=0.0044, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=0.0000, dirY=1.0000, pntX=1.1460, pntY=0.0385, startParam=-0.0036, endParam=0.0027, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 14));22:Line(dirX=0.0000, dirY=-1.0000, pntX=1.1587, pntY=0.0490, startParam=-0.0279, endParam=0.0279, isConstruction=True);VerticalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));24:SN_End;SubnodeConstraint(references=(24, 22));25:Circle(xCenter=1.1587, yCenter=0.0517, xDir=1.0000, yDir=0.0000, radius=0.0038, clockwise=False, isConstruction=False);DiameterConstraint(references=(25,), length=0.00762 METER);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 22));CoincidentConstraint(references=(26, 4));27:Line(dirX=0.0000, dirY=-1.0000, pntX=1.1460, pntY=0.0517, startParam=-0.0105, endParam=0.0105, isConstruction=True);MidpointConstraint(references=(27, 5));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 3));29:SN_End;SubnodeConstraint(references=(29, 27));CoincidentConstraint(references=(29, 14));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many triangles are visible in the image?",
  "fcstd_file": "2D_0485.FCStd",
  "isconstruction_file": "2D_0485_isconstruction.json"
}