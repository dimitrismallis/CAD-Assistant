{
  "pid": 50,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Rectangle",
    "B": "Triangle",
    "C": "U-shaped",
    "D": "Circle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0683, pntY=0.0422, startParam=-0.0066, endParam=0.0034, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0582, pntY=0.0422, startParam=-0.0069, endParam=0.0031, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 0));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0389, pntY=0.0422, startParam=-0.0161, endParam=0.0139, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 0));10:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0389, pntY=0.0422, startParam=-0.0161, endParam=0.0139, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 6));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 9));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0200, pntY=0.0422, startParam=-0.0450, endParam=0.0450, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 3));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 12));16:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0527, pntY=0.0422, startParam=-0.0122, endParam=0.0178, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 3));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0333, pntY=0.0422, startParam=-0.0017, endParam=0.0033, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0231, pntY=0.0422, startParam=-0.0020, endParam=0.0030, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 9));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 0));25:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0200, pntY=0.0278, startParam=-0.0144, endParam=0.0306, isConstruction=False);VerticalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0300, pntY=0.0249, startParam=-0.0173, endParam=0.0277, isConstruction=False);PerpendicularConstraint(references=(28, 19));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 21));30:SN_End;SubnodeConstraint(references=(30, 28));31:Arc(xCenter=-0.0050, yCenter=0.0104, xDir=1.0000, yDir=0.0000, radius=0.0283, startParam=-2.6550, endParam=-0.4866, clockwise=False, isConstruction=False);32:SN_Center;SubnodeConstraint(references=(32, 31));33:SN_Start;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 30));34:SN_End;SubnodeConstraint(references=(34, 31));CoincidentConstraint(references=(34, 27));35:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the basic shape of the object shown in the image?",
  "fcstd_file": "2D_0050.FCStd",
  "isconstruction_file": "2D_0050_isconstruction.json"
}