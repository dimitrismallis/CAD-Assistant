{
  "pid": 595,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Five",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0019, pntY=0.0140, startParam=-0.0294, endParam=0.0256, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0000, pntY=-0.0140, startParam=-0.0275, endParam=0.0275, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.0275, pntY=-0.0015, startParam=-0.0155, endParam=0.0125, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0275, pntY=-0.0015, startParam=-0.0155, endParam=0.0125, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0232, pntY=0.0000, startParam=-0.0140, endParam=0.0140, isConstruction=True);PerpendicularConstraint(references=(14, 1));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 1));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 4));17:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0234, pntY=0.0000, startParam=-0.0140, endParam=0.0140, isConstruction=True);PerpendicularConstraint(references=(17, 4));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 1));19:SN_End;SubnodeConstraint(references=(19, 17));HorizontalConstraint(references=(19, 16));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.0289, pntY=0.0023, startParam=-0.0055, endParam=-0.0014, isConstruction=True);PerpendicularConstraint(references=(20, 17));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 17));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 10));23:Line(dirX=1.0000, dirY=-0.0000, pntX=-0.0242, pntY=0.0018, startParam=-0.0033, endParam=0.0011, isConstruction=True);PerpendicularConstraint(references=(23, 7));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 7));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 14));26:Circle(xCenter=-0.0232, yCenter=0.0096, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(26,), length=0.004 METER);27:SN_Center;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 14));28:Circle(xCenter=-0.0232, yCenter=-0.0102, xDir=1.0000, yDir=0.0000, radius=0.0019, clockwise=False, isConstruction=False);29:SN_Center;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 14));30:Circle(xCenter=0.0234, yCenter=-0.0093, xDir=1.0000, yDir=0.0000, radius=0.0023, clockwise=False, isConstruction=False);31:SN_Center;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 17));32:Circle(xCenter=0.0234, yCenter=0.0097, xDir=1.0000, yDir=0.0000, radius=0.0019, clockwise=False, isConstruction=False);33:SN_Center;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 17));34:Line(dirX=1.0000, dirY=0.0000, pntX=0.0001, pntY=0.0096, startParam=-0.0232, endParam=0.0233, isConstruction=True);PerpendicularConstraint(references=(34, 14));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 27));36:SN_End;SubnodeConstraint(references=(36, 34));VerticalConstraint(references=(36, 33));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are shown in the CAD object?",
  "fcstd_file": "2D_0595.FCStd",
  "isconstruction_file": "2D_0595_isconstruction.json"
}