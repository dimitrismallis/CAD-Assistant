{
  "pid": 569,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "polygon"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0009, pntY=0.0519, startParam=-0.0350, endParam=-0.0086, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0009, pntY=-0.0419, startParam=-0.0350, endParam=0.0350, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0341, pntY=0.0050, startParam=-0.0469, endParam=-0.0318, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0359, pntY=0.0050, startParam=-0.0469, endParam=-0.0292, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0427, pntY=0.0368, startParam=-0.0086, endParam=0.0086, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 7));CoincidentConstraint(references=(14, 9));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0427, pntY=-0.0275, startParam=-0.0086, endParam=0.0086, isConstruction=False);ParallelConstraint(references=(16, 13));HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0513, pntY=0.0046, startParam=-0.0321, endParam=0.0321, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 15));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 18));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.0471, pntY=0.0343, startParam=-0.0112, endParam=0.0112, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 12));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=1.0000, dirY=0.0000, pntX=0.0471, pntY=-0.0275, startParam=-0.0112, endParam=0.0112, isConstruction=False);ParallelConstraint(references=(25, 22));HorizontalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0584, pntY=0.0034, startParam=-0.0309, endParam=0.0309, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 24));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 27));31:Line(dirX=1.0000, dirY=0.0000, pntX=0.0004, pntY=0.0587, startParam=-0.0081, endParam=0.0081, isConstruction=False);HorizontalConstraint(references=(31,));32:SN_Start;SubnodeConstraint(references=(32, 31));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0077, pntY=0.0553, startParam=-0.0034, endParam=0.0034, isConstruction=False);PerpendicularConstraint(references=(34, 31));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 3));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 32));37:Line(dirX=0.0000, dirY=1.0000, pntX=0.0085, pntY=0.0553, startParam=-0.0034, endParam=0.0034, isConstruction=False);ParallelConstraint(references=(37, 34));38:SN_Start;SubnodeConstraint(references=(38, 37));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 33));40:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0359, pntY=0.0050, startParam=0.0325, endParam=0.0469, isConstruction=False);CoincidentConstraint(references=(40, 10));41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 26));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 6));43:Line(dirX=1.0000, dirY=0.0000, pntX=0.0009, pntY=0.0519, startParam=0.0076, endParam=0.0350, isConstruction=False);CoincidentConstraint(references=(43, 1));44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 38));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 11));46:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0341, pntY=0.0050, startParam=0.0325, endParam=0.0469, isConstruction=False);CoincidentConstraint(references=(46, 7));47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 17));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 5));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the basic shape of the CAD object in the image?",
  "fcstd_file": "2D_0569.FCStd",
  "isconstruction_file": "2D_0569_isconstruction.json"
}