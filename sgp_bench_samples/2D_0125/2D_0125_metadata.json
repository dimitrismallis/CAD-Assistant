{
  "pid": 125,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Four",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0012, pntY=-0.0250, startParam=-0.0288, endParam=0.0312, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=0.0250, startParam=-0.0300, endParam=0.0300, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));DistanceConstraint(references=(4, 1), direction=MINIMUM, length=0.05 METER, halfSpace0=LEFT, halfSpace1=RIGHT);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0300, pntY=0.0020, startParam=-0.0270, endParam=0.0230, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0300, pntY=0.0020, startParam=-0.0270, endParam=0.0230, isConstruction=False);ParallelConstraint(references=(10, 7));DistanceConstraint(references=(10, 7), direction=MINIMUM, length=0.06 METER, halfSpace0=LEFT, halfSpace1=RIGHT);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0150, clockwise=False, isConstruction=False);DiameterConstraint(references=(14,), length=0.03 METER);15:SN_Center;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0250, pntY=0.0000, startParam=-0.0250, endParam=0.0250, isConstruction=True);VerticalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 4));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 1));19:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0250, pntY=-0.0000, startParam=-0.0250, endParam=0.0250, isConstruction=True);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 1));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 4));22:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0000, pntY=0.0150, startParam=-0.0300, endParam=0.0300, isConstruction=True);HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 10));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 7));25:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0150, startParam=-0.0300, endParam=0.0300, isConstruction=True);HorizontalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 10));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 7));28:Circle(xCenter=-0.0250, yCenter=0.0150, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(28,), length=0.00366 METER);29:SN_Center;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 22));CoincidentConstraint(references=(29, 19));30:Circle(xCenter=-0.0250, yCenter=-0.0150, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(30,), length=0.00366 METER);31:SN_Center;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 25));CoincidentConstraint(references=(31, 19));32:Circle(xCenter=0.0250, yCenter=-0.0150, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(32,), length=0.00366 METER);33:SN_Center;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 25));CoincidentConstraint(references=(33, 16));34:Circle(xCenter=0.0250, yCenter=0.0150, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(34,), length=0.00366 METER);35:SN_Center;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 22));CoincidentConstraint(references=(35, 16));36:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are used as reference points at the corners of the rectangle?",
  "fcstd_file": "2D_0125.FCStd",
  "isconstruction_file": "2D_0125_isconstruction.json"
}