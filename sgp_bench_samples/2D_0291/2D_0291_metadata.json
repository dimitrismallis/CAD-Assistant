{
  "pid": 291,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Three",
    "B": "Four",
    "C": "Five",
    "D": "Six"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0110, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.022 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0190, clockwise=False, isConstruction=False);DiameterConstraint(references=(3,), length=0.038 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0055, startParam=-0.0055, endParam=0.0055, isConstruction=True);VerticalConstraint(references=(5,));6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 2));7:SN_End;SubnodeConstraint(references=(7, 5));CoincidentConstraint(references=(7, 1));8:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0055, startParam=-0.0055, endParam=0.0055, isConstruction=True);VerticalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 2));10:SN_End;SubnodeConstraint(references=(10, 8));CoincidentConstraint(references=(10, 1));11:Line(dirX=1.0000, dirY=0.0000, pntX=0.0234, pntY=-0.0110, startParam=-0.0234, endParam=0.0136, isConstruction=False);HorizontalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=1.0000, dirY=0.0000, pntX=0.0234, pntY=0.0110, startParam=-0.0234, endParam=0.0136, isConstruction=False);HorizontalConstraint(references=(14,));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 7));16:SN_End;SubnodeConstraint(references=(16, 14));VerticalConstraint(references=(16, 13));17:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0370, pntY=0.0000, startParam=-0.0110, endParam=0.0110, isConstruction=True);18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 13));20:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0176, pntY=-0.0110, startParam=-0.0176, endParam=0.0194, isConstruction=False);HorizontalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 10));22:SN_End;SubnodeConstraint(references=(22, 20));23:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0370, pntY=-0.0000, startParam=-0.0110, endParam=0.0110, isConstruction=True);VerticalConstraint(references=(23,));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));HorizontalConstraint(references=(25, 7));26:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0176, pntY=0.0110, startParam=-0.0194, endParam=0.0176, isConstruction=False);EqualConstraint(references=(26, 14));27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 25));28:SN_End;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 15));29:Circle(xCenter=-0.0370, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0110, clockwise=False, isConstruction=False);TangentConstraint(references=(29, 14));30:SN_Center;SubnodeConstraint(references=(30, 29));MidpointConstraint(references=(30, 23));31:Circle(xCenter=0.0370, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0110, clockwise=False, isConstruction=False);TangentConstraint(references=(31, 14));32:SN_Center;SubnodeConstraint(references=(32, 31));MidpointConstraint(references=(32, 17));33:Circle(xCenter=-0.0370, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0063, clockwise=False, isConstruction=False);DiameterConstraint(references=(33,), length=0.0127 METER);34:SN_Center;SubnodeConstraint(references=(34, 33));CoincidentConstraint(references=(34, 30));35:Circle(xCenter=0.0370, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0063, clockwise=False, isConstruction=False);DiameterConstraint(references=(35,), length=0.0127 METER);36:SN_Center;SubnodeConstraint(references=(36, 35));CoincidentConstraint(references=(36, 32));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the total number of visible circles, including both distinct and overlapping parts?",
  "fcstd_file": "2D_0291.FCStd",
  "isconstruction_file": "2D_0291_isconstruction.json"
}