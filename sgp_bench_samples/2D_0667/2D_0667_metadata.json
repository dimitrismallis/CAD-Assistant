{
  "pid": 667,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Four",
    "B": "Three",
    "C": "Two",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=-0.0345, yCenter=0.0460, xDir=0.9963, yDir=0.0863, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.0035 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));3:Circle(xCenter=-0.0295, yCenter=0.0460, xDir=0.9963, yDir=0.0863, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(3, 1));4:SN_Center;SubnodeConstraint(references=(4, 3));HorizontalConstraint(references=(4, 2));5:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0351, pntY=0.0418, startParam=-0.0004, endParam=0.0016, isConstruction=False);6:SN_Start;SubnodeConstraint(references=(6, 5));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0351, pntY=0.0413, startParam=-0.0004, endParam=0.0016, isConstruction=False);ParallelConstraint(references=(8, 5));HorizontalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0355, pntY=0.0416, startParam=-0.0002, endParam=0.0003, isConstruction=False);PerpendicularConstraint(references=(11, 8));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 6));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 9));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0335, pntY=0.0418, startParam=-0.0000, endParam=0.0005, isConstruction=False);ParallelConstraint(references=(14, 11));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 7));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 10));17:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0295, pntY=0.0418, startParam=-0.0010, endParam=0.0010, isConstruction=False);EqualConstraint(references=(17, 5));18:SN_Start;SubnodeConstraint(references=(18, 17));19:SN_End;SubnodeConstraint(references=(19, 17));20:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0295, pntY=0.0413, startParam=-0.0010, endParam=0.0010, isConstruction=False);ParallelConstraint(references=(20, 17));HorizontalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));22:SN_End;SubnodeConstraint(references=(22, 20));23:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0305, pntY=0.0418, startParam=-0.0000, endParam=0.0005, isConstruction=False);PerpendicularConstraint(references=(23, 20));EqualConstraint(references=(23, 14));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 18));HorizontalConstraint(references=(24, 15));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 21));26:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0285, pntY=0.0418, startParam=-0.0000, endParam=0.0005, isConstruction=False);ParallelConstraint(references=(26, 23));27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 19));28:SN_End;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 22));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many total geometric shapes are there in the image?",
  "fcstd_file": "2D_0667.FCStd",
  "isconstruction_file": "2D_0667_isconstruction.json"
}