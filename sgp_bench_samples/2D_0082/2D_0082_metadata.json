{
  "pid": 82,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Cylinder",
    "B": "Cone",
    "C": "Sphere",
    "D": "Pyramid"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0166, pntY=-0.1000, startParam=-0.0584, endParam=0.0916, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=1.0000, pntX=0.0750, pntY=-0.0368, startParam=-0.0632, endParam=0.1368, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0750, pntY=-0.0368, startParam=-0.0632, endParam=0.1368, isConstruction=False);ParallelConstraint(references=(7, 4));DistanceConstraint(references=(7, 4), direction=MINIMUM, length=#Width, halfSpace0=LEFT, halfSpace1=RIGHT);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));10:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(10, 9, 2));CoincidentConstraint(references=(10, 0));11:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.2308, startParam=-0.1308, endParam=0.1308, isConstruction=True);VerticalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=0.5000, dirY=0.8660, pntX=-0.0498, pntY=0.1437, startParam=-0.0504, endParam=0.0996, isConstruction=False);15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 9));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 11));17:Line(dirX=0.5000, dirY=-0.8660, pntX=0.0488, pntY=0.1454, startParam=-0.0976, endParam=0.0524, isConstruction=False);18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 17));MidpointConstraint(references=(19, 10, 3));CoincidentConstraint(references=(19, 6));MidpointConstraint(references=(19, 12, 9));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=0.1000, startParam=-0.0750, endParam=0.0750, isConstruction=True);DistanceConstraint(references=(20, 1), direction=MINIMUM, length=#Height, halfSpace0=RIGHT, halfSpace1=RIGHT);21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 9));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 6));23:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of geometric shape is added on top of the rectangular base in the image?",
  "fcstd_file": "2D_0082.FCStd",
  "isconstruction_file": "2D_0082_isconstruction.json"
}