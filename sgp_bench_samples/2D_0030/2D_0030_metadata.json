{
  "pid": 30,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Equilateral",
    "B": "Isosceles",
    "C": "Scalene",
    "D": "Right"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=0.3575, startParam=-0.0452, endParam=0.0452, isConstruction=False);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=-0.4131, dirY=0.9107, pntX=0.0219, pntY=0.4089, startParam=-0.0565, endParam=0.0530, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));MidpointConstraint(references=(6, 0));7:Line(dirX=-0.4131, dirY=-0.9107, pntX=-0.0220, pntY=0.4088, startParam=-0.0532, endParam=0.0563, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 2));10:Line(dirX=-0.4131, dirY=-0.9107, pntX=-0.0458, pntY=0.3563, startParam=-0.0013, endParam=0.0147, isConstruction=False);CoincidentConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 2));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0441, pntY=0.3429, startParam=-0.0077, endParam=-0.0011, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));CoincidentConstraint(references=(15, 0));16:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0452, pntY=0.3514, startParam=-0.0085, endParam=0.0061, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 2));19:Line(dirX=0.4131, dirY=-0.9107, pntX=0.0484, pntY=0.3504, startParam=-0.0078, endParam=0.0082, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 3));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0497, pntY=0.3429, startParam=-0.0021, endParam=0.0045, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));CoincidentConstraint(references=(23, 0));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=0.0000, dirY=1.0000, pntX=0.0452, pntY=0.3505, startParam=-0.0076, endParam=0.0069, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));CoincidentConstraint(references=(26, 0));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 3));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of triangle is shown in the image based on its side lengths?",
  "fcstd_file": "2D_0030.FCStd",
  "isconstruction_file": "2D_0030_isconstruction.json"
}