{
  "pid": 391,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Oval",
    "D": "Rectangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.5000, dirY=0.8660, pntX=-0.0217, pntY=-0.0075, startParam=-0.0044, endParam=0.0108, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));MidpointConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=0.5000, dirY=-0.8660, pntX=-0.0173, pntY=-0.0152, startParam=-0.0045, endParam=0.0107, isConstruction=False);EqualConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=-0.8660, dirY=-0.5000, pntX=-0.0145, pntY=-0.0259, startParam=-0.0029, endParam=0.0071, isConstruction=False);PerpendicularConstraint(references=(7, 0));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.8660, dirY=-0.5000, pntX=-0.0333, pntY=-0.0017, startParam=-0.0071, endParam=0.0029, isConstruction=False);PerpendicularConstraint(references=(10, 0));EqualConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.5000, dirY=-0.8660, pntX=-0.0282, pntY=-0.0163, startParam=-0.0152, endParam=0.0152, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 9));16:Line(dirX=0.5000, dirY=0.8660, pntX=0.0208, pntY=-0.0092, startParam=-0.0025, endParam=0.0127, isConstruction=False);EqualConstraint(references=(16, 1));17:SN_Start;SubnodeConstraint(references=(17, 16));MidpointConstraint(references=(17, 0));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 0));19:Line(dirX=-0.5000, dirY=-0.8660, pntX=0.0185, pntY=-0.0132, startParam=-0.0022, endParam=0.0130, isConstruction=False);EqualConstraint(references=(19, 1));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 17));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.0015, pntY=0.0226, startParam=-0.0015, endParam=0.0137, isConstruction=False);EqualConstraint(references=(22, 1));23:SN_Start;SubnodeConstraint(references=(23, 22));MidpointConstraint(references=(23, 0));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 0));25:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0016, pntY=0.0226, startParam=-0.0016, endParam=0.0136, isConstruction=False);EqualConstraint(references=(25, 1));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 23));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 0));28:Line(dirX=0.8660, dirY=-0.5000, pntX=0.0152, pntY=-0.0263, startParam=-0.0037, endParam=0.0063, isConstruction=False);PerpendicularConstraint(references=(28, 0));EqualConstraint(references=(28, 7));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 21));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=0.8660, dirY=-0.5000, pntX=0.0298, pntY=0.0003, startParam=-0.0031, endParam=0.0069, isConstruction=False);PerpendicularConstraint(references=(31, 16));EqualConstraint(references=(31, 7));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 18));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=0.0000, dirY=1.0000, pntX=0.0152, pntY=0.0270, startParam=-0.0044, endParam=0.0056, isConstruction=False);VerticalConstraint(references=(34,));EqualConstraint(references=(34, 7));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 24));36:SN_End;SubnodeConstraint(references=(36, 34));37:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0152, pntY=0.0272, startParam=-0.0046, endParam=0.0054, isConstruction=False);VerticalConstraint(references=(37,));EqualConstraint(references=(37, 7));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 27));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=0.5000, dirY=0.8660, pntX=0.0282, pntY=-0.0163, startParam=-0.0152, endParam=0.0152, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 30));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 33));43:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=0.0326, startParam=-0.0152, endParam=0.0152, isConstruction=False);44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 36));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 39));46:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the object at the top of the image?",
  "fcstd_file": "2D_0391.FCStd",
  "isconstruction_file": "2D_0391_isconstruction.json"
}