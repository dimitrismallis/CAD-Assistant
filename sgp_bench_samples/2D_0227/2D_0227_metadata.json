{
  "pid": 227,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Asymmetrical",
    "B": "Horizontal symmetry",
    "C": "Vertical symmetry",
    "D": "Horizontal and vertical symmetry"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0150, clockwise=False, isConstruction=False);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0209, pntY=0.0000, startParam=0.0054, endParam=0.0054, isConstruction=False);4:SN_Start;SubnodeConstraint(references=(4, 3));5:SN_End;SubnodeConstraint(references=(5, 3));6:Line(dirX=1.0000, dirY=0.0000, pntX=0.0024, pntY=0.0000, startParam=-0.0287, endParam=-0.0287, isConstruction=False);7:SN_Start;SubnodeConstraint(references=(7, 6));CoincidentConstraint(references=(7, 3));8:SN_End;SubnodeConstraint(references=(8, 6));9:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0104, pntY=0.0000, startParam=-0.0159, endParam=-0.0159, isConstruction=False);10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 7));CoincidentConstraint(references=(10, 5));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 8));CoincidentConstraint(references=(11, 4));12:Line(dirX=1.0000, dirY=0.0000, pntX=0.0187, pntY=0.0000, startParam=0.0079, endParam=0.0079, isConstruction=False);HorizontalConstraint(references=(12,));13:SN_Start;SubnodeConstraint(references=(13, 12));14:SN_End;SubnodeConstraint(references=(14, 12));15:Arc(xCenter=0.0017, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0249, startParam=-2.8296, endParam=-0.3108, clockwise=False, isConstruction=False);CoincidentConstraint(references=(15, 14));16:SN_Center;SubnodeConstraint(references=(16, 15));17:SN_Start;SubnodeConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 15));19:Circle(xCenter=0.0304, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);20:SN_Center;SubnodeConstraint(references=(20, 19));21:Arc(xCenter=0.0304, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=-1.6571, endParam=1.6571, clockwise=False, isConstruction=False);22:SN_Center;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_Start;SubnodeConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 21));25:Arc(xCenter=-0.0263, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=-4.7094, endParam=-1.5738, clockwise=False, isConstruction=False);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 4));27:SN_Start;SubnodeConstraint(references=(27, 25));28:SN_End;SubnodeConstraint(references=(28, 25));29:Arc(xCenter=0.0017, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0249, startParam=0.3108, endParam=2.8296, clockwise=False, isConstruction=False);30:SN_Center;SubnodeConstraint(references=(30, 29));31:SN_Start;SubnodeConstraint(references=(31, 29));32:SN_End;SubnodeConstraint(references=(32, 29));33:Arc(xCenter=-0.0263, yCenter=0.0090, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=-1.5678, endParam=-0.3120, clockwise=False, isConstruction=False);TangentConstraint(references=(33, 25));34:SN_Center;SubnodeConstraint(references=(34, 33));35:SN_Start;SubnodeConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 33));37:Arc(xCenter=-0.0263, yCenter=-0.0090, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=0.3120, endParam=1.5678, clockwise=False, isConstruction=False);TangentConstraint(references=(37, 15));TangentConstraint(references=(37, 25));EqualConstraint(references=(37, 33));38:SN_Center;SubnodeConstraint(references=(38, 37));39:SN_Start;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 17));40:SN_End;SubnodeConstraint(references=(40, 37));CoincidentConstraint(references=(40, 28));41:Arc(xCenter=0.0296, yCenter=0.0090, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=-2.8308, endParam=-1.4845, clockwise=False, isConstruction=False);EqualConstraint(references=(41, 33));42:SN_Center;SubnodeConstraint(references=(42, 41));43:SN_Start;SubnodeConstraint(references=(43, 41));44:SN_End;SubnodeConstraint(references=(44, 41));45:Arc(xCenter=0.0296, yCenter=-0.0090, xDir=1.0000, yDir=0.0000, radius=0.0045, startParam=1.4845, endParam=2.8308, clockwise=False, isConstruction=False);46:SN_Center;SubnodeConstraint(references=(46, 45));47:SN_Start;SubnodeConstraint(references=(47, 45));48:SN_End;SubnodeConstraint(references=(48, 45));49:Circle(xCenter=-0.0263, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);50:SN_Center;SubnodeConstraint(references=(50, 49));CoincidentConstraint(references=(50, 4));51:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0017, pntY=0.0000, startParam=0.0249, endParam=0.0249, isConstruction=False);52:SN_Start;SubnodeConstraint(references=(52, 51));CoincidentConstraint(references=(52, 13));53:SN_End;SubnodeConstraint(references=(53, 51));CoincidentConstraint(references=(53, 14));54:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the symmetry type of the CAD object?",
  "fcstd_file": "2D_0227.FCStd",
  "isconstruction_file": "2D_0227_isconstruction.json"
}