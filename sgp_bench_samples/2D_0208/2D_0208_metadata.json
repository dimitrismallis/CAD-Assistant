{
  "pid": 208,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Oval",
    "D": "Rectangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0108, pntY=0.0064, startParam=-0.0393, endParam=0.0298, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0108, pntY=-0.0300, startParam=-0.0393, endParam=0.0298, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0501, pntY=-0.0097, startParam=-0.0160, endParam=0.0203, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0190, pntY=-0.0097, startParam=-0.0160, endParam=0.0203, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Circle(xCenter=-0.0406, yCenter=-0.0118, xDir=1.0000, yDir=-0.0089, radius=0.0034, clockwise=False, isConstruction=False);DiameterConstraint(references=(13,), length=0.006858 METER);14:SN_Center;SubnodeConstraint(references=(14, 13));15:Circle(xCenter=0.0095, yCenter=-0.0118, xDir=1.0000, yDir=-0.0089, radius=0.0034, clockwise=False, isConstruction=False);EqualConstraint(references=(15, 13));16:SN_Center;SubnodeConstraint(references=(16, 15));17:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0151, pntY=-0.0118, startParam=-0.0255, endParam=0.0246, isConstruction=True);HorizontalConstraint(references=(17,));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 14));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 16));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.0129, pntY=-0.0118, startParam=-0.0034, endParam=0.0061, isConstruction=True);HorizontalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 16));22:SN_End;SubnodeConstraint(references=(22, 20));MidpointConstraint(references=(22, 10));23:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0155, pntY=-0.0059, startParam=-0.0059, endParam=0.0059, isConstruction=True);VerticalConstraint(references=(23,));24:SN_Start;SubnodeConstraint(references=(24, 23));MidpointConstraint(references=(24, 0));25:SN_End;SubnodeConstraint(references=(25, 23));MidpointConstraint(references=(25, 17));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What geometric shape is the outer boundary of the image?",
  "fcstd_file": "2D_0208.FCStd",
  "isconstruction_file": "2D_0208_isconstruction.json"
}