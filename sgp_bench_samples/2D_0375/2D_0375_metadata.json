{
  "pid": 375,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Parabolic",
    "B": "Linear",
    "C": "Circular",
    "D": "Hyperbolic"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=-0.0400, yCenter=0.1237, xDir=1.0000, yDir=0.0000, radius=0.1196, startParam=-2.0021, endParam=-1.6360, clockwise=False, isConstruction=False);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0478, pntY=-0.0220, startParam=-0.0263, endParam=0.0052, isConstruction=False);6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0756, pntY=-0.0272, startParam=-0.0278, endParam=0.0144, isConstruction=False);HorizontalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 7));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0900, pntY=-0.0138, startParam=-0.0134, endParam=0.0288, isConstruction=False);CoincidentConstraint(references=(11, 0));EqualConstraint(references=(11, 8));ParallelConstraint(references=(11, 5));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 3));14:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-0.0241, startParam=-0.0241, endParam=0.0241, isConstruction=True);VerticalConstraint(references=(14,));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 0));16:SN_End;SubnodeConstraint(references=(16, 14));17:Arc(xCenter=-0.0400, yCenter=0.1237, xDir=1.0000, yDir=0.0000, radius=0.1196, startParam=-2.4510, endParam=-2.0021, clockwise=False, isConstruction=False);CoincidentConstraint(references=(17, 1));18:SN_Center;SubnodeConstraint(references=(18, 17));19:SN_Start;SubnodeConstraint(references=(19, 17));20:SN_End;SubnodeConstraint(references=(20, 17));CoincidentConstraint(references=(20, 3));21:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1322, pntY=-0.0000, startParam=-0.0475, endParam=0.0272, isConstruction=False);VerticalConstraint(references=(21,));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 19));23:SN_End;SubnodeConstraint(references=(23, 21));24:Line(dirX=1.0000, dirY=0.0000, pntX=-0.1114, pntY=-0.0272, startParam=-0.0208, endParam=0.0214, isConstruction=False);CoincidentConstraint(references=(24, 8));EqualConstraint(references=(24, 8));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 23));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 10));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the nature of the curve on the top of the object?",
  "fcstd_file": "2D_0375.FCStd",
  "isconstruction_file": "2D_0375_isconstruction.json"
}