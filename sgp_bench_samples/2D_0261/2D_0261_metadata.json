{
  "pid": 261,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Rectangle",
    "D": "Oval"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=0.0678, startParam=-0.0708, endParam=0.0912, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=-0.0402, startParam=-0.0708, endParam=0.0912, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));DistanceConstraint(references=(4, 1), direction=MINIMUM, length=0.108 METER, halfSpace0=LEFT, halfSpace1=RIGHT);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1192, pntY=0.0043, startParam=-0.0636, endParam=0.0444, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0428, pntY=0.0043, startParam=-0.0636, endParam=0.0444, isConstruction=False);ParallelConstraint(references=(10, 7));DistanceConstraint(references=(10, 7), direction=MINIMUM, length=0.162 METER, halfSpace0=LEFT, halfSpace1=RIGHT);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0458, pntY=0.0043, startParam=-0.0666, endParam=0.0474, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=-0.0432, startParam=-0.0738, endParam=0.0942, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 15));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1222, pntY=0.0043, startParam=-0.0666, endParam=0.0474, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 17));22:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=0.0708, startParam=-0.0738, endParam=0.0942, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 20));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 14));25:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0398, pntY=0.0043, startParam=-0.0606, endParam=0.0414, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=-0.0372, startParam=-0.0678, endParam=0.0882, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 27));31:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1162, pntY=0.0043, startParam=-0.0606, endParam=0.0414, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 29));34:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0484, pntY=0.0648, startParam=-0.0678, endParam=0.0882, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 32));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 26));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the primary object in the image?",
  "fcstd_file": "2D_0261.FCStd",
  "isconstruction_file": "2D_0261_isconstruction.json"
}