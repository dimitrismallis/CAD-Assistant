{
  "pid": 437,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "2",
    "B": "4",
    "C": "6",
    "D": "8"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0250, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.05 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0210, clockwise=False, isConstruction=False);DiameterConstraint(references=(3,), length=0.042 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0030, pntY=0.0020, startParam=-0.0230, endParam=-0.0050, isConstruction=False);6:SN_Start;SubnodeConstraint(references=(6, 5));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=-0.0020, startParam=-0.0200, endParam=-0.0020, isConstruction=False);ParallelConstraint(references=(8, 5));HorizontalConstraint(references=(8,));DistanceConstraint(references=(8, 5), direction=MINIMUM, length=0.004 METER, halfSpace0=RIGHT, halfSpace1=LEFT);9:SN_Start;SubnodeConstraint(references=(9, 8));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0200, pntY=0.0001, startParam=-0.0019, endParam=0.0021, isConstruction=False);PerpendicularConstraint(references=(11, 8));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 6));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 9));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0200, pntY=0.0001, startParam=-0.0019, endParam=0.0021, isConstruction=False);ParallelConstraint(references=(14, 11));DistanceConstraint(references=(14, 11), direction=MINIMUM, length=0.04 METER, halfSpace0=RIGHT, halfSpace1=LEFT);15:SN_Start;SubnodeConstraint(references=(15, 14));16:SN_End;SubnodeConstraint(references=(16, 14));17:Point(x=0.0000, y=0.0000, isConstruction=False);CoincidentConstraint(references=(17, 2));18:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0010, pntY=0.0200, startParam=-0.0030, endParam=0.0010, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));20:SN_End;SubnodeConstraint(references=(20, 18));21:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=-0.0200, startParam=-0.0020, endParam=0.0020, isConstruction=False);ParallelConstraint(references=(21, 18));HorizontalConstraint(references=(21,));DistanceConstraint(references=(21, 18), direction=MINIMUM, length=0.04 METER, halfSpace0=RIGHT, halfSpace1=LEFT);22:SN_Start;SubnodeConstraint(references=(22, 21));23:SN_End;SubnodeConstraint(references=(23, 21));24:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0020, pntY=-0.0126, startParam=-0.0326, endParam=-0.0146, isConstruction=False);PerpendicularConstraint(references=(24, 21));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 19));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 7));27:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0020, pntY=-0.0126, startParam=-0.0326, endParam=-0.0146, isConstruction=False);ParallelConstraint(references=(27, 24));DistanceConstraint(references=(27, 24), direction=MINIMUM, length=0.004 METER, halfSpace0=RIGHT, halfSpace1=LEFT);28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 20));29:SN_End;SubnodeConstraint(references=(29, 27));30:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(30, 22, 20));MidpointConstraint(references=(30, 23, 19));CoincidentConstraint(references=(30, 2));31:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0000, pntY=-0.0020, startParam=0.0020, endParam=0.0200, isConstruction=False);CoincidentConstraint(references=(31, 8));32:SN_Start;SubnodeConstraint(references=(32, 31));33:SN_End;SubnodeConstraint(references=(33, 31));MidpointConstraint(references=(33, 17, 6));CoincidentConstraint(references=(33, 16));34:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0020, pntY=-0.0126, startParam=-0.0106, endParam=0.0074, isConstruction=False);CoincidentConstraint(references=(34, 24));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 10));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 22));37:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0020, pntY=-0.0126, startParam=-0.0106, endParam=0.0074, isConstruction=False);CoincidentConstraint(references=(37, 27));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 32));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 23));40:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0030, pntY=0.0020, startParam=-0.0010, endParam=0.0170, isConstruction=False);CoincidentConstraint(references=(40, 5));41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 29));42:SN_End;SubnodeConstraint(references=(42, 40));MidpointConstraint(references=(42, 17, 9));CoincidentConstraint(references=(42, 15));43:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many distinct regions are created within the circle by the cross?",
  "fcstd_file": "2D_0437.FCStd",
  "isconstruction_file": "2D_0437_isconstruction.json"
}