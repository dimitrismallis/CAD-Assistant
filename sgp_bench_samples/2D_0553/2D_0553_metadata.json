{
  "pid": 553,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "2",
    "B": "3",
    "C": "4",
    "D": "5"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0585, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.003 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));VerticalConstraint(references=(2, 0));3:Circle(xCenter=0.0556, yCenter=0.0181, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);EqualConstraint(references=(3, 1));4:SN_Center;SubnodeConstraint(references=(4, 3));5:Circle(xCenter=-0.0556, yCenter=0.0181, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);EqualConstraint(references=(5, 1));6:SN_Center;SubnodeConstraint(references=(6, 5));7:Circle(xCenter=-0.0344, yCenter=-0.0473, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);8:SN_Center;SubnodeConstraint(references=(8, 7));9:Circle(xCenter=0.0344, yCenter=-0.0473, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);EqualConstraint(references=(9, 7));EqualConstraint(references=(9, 3));10:SN_Center;SubnodeConstraint(references=(10, 9));11:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0000, pntY=0.0658, startParam=-0.0027, endParam=0.0073, isConstruction=True);VerticalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));MidpointConstraint(references=(12, 0));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 2));14:Line(dirX=0.9511, dirY=-0.3090, pntX=-0.0326, pntY=0.0106, startParam=-0.0342, endParam=0.0343, isConstruction=True);CoincidentConstraint(references=(14, 6));15:SN_Start;SubnodeConstraint(references=(15, 14));MidpointConstraint(references=(15, 0));16:SN_End;SubnodeConstraint(references=(16, 14));ConcentricConstraint(references=(16, 0));17:Line(dirX=0.5878, dirY=0.8090, pntX=-0.0201, pntY=-0.0277, startParam=-0.0343, endParam=0.0343, isConstruction=True);CoincidentConstraint(references=(17, 8));18:SN_Start;SubnodeConstraint(references=(18, 17));MidpointConstraint(references=(18, 0));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 16));20:Line(dirX=0.5878, dirY=-0.8090, pntX=0.0201, pntY=-0.0277, startParam=-0.0343, endParam=0.0343, isConstruction=True);CoincidentConstraint(references=(20, 10));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));MidpointConstraint(references=(22, 0));23:Line(dirX=0.9511, dirY=0.3090, pntX=0.0326, pntY=0.0106, startParam=-0.0342, endParam=0.0342, isConstruction=True);CoincidentConstraint(references=(23, 4));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 16));25:SN_End;SubnodeConstraint(references=(25, 23));MidpointConstraint(references=(25, 0));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many lines are intersecting at the central point in the image?",
  "fcstd_file": "2D_0553.FCStd",
  "isconstruction_file": "2D_0553_isconstruction.json"
}