{
  "pid": 9,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Rectangle",
    "D": "Trapezoid"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0298, pntY=0.0089, startParam=-0.0017, endParam=0.0009, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0298, pntY=-0.0089, startParam=-0.0017, endParam=0.0009, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0315, pntY=-0.0004, startParam=-0.0093, endParam=-0.0031, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));CoincidentConstraint(references=(8, 0));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0306, pntY=0.0027, startParam=-0.0009, endParam=0.0004, isConstruction=False);PerpendicularConstraint(references=(10, 7));CoincidentConstraint(references=(10, 0));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0305, pntY=-0.0027, startParam=-0.0010, endParam=0.0004, isConstruction=False);CoincidentConstraint(references=(13, 0));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0302, startParam=2.8431, endParam=3.0535, clockwise=False, isConstruction=False);DiameterConstraint(references=(16,), length=0.06045 METER);17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 0));18:SN_Start;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 3));19:SN_End;SubnodeConstraint(references=(19, 16));CoincidentConstraint(references=(19, 12));20:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0302, startParam=-3.0535, endParam=-2.8431, clockwise=False, isConstruction=False);CoincidentConstraint(references=(20, 16));21:SN_Center;SubnodeConstraint(references=(21, 20));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 15));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 6));24:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0315, pntY=-0.0004, startParam=0.0022, endParam=0.0085, isConstruction=False);CoincidentConstraint(references=(24, 7));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 14));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 5));CoincidentConstraint(references=(26, 0));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the primary shape of the objects in the image?",
  "fcstd_file": "2D_0009.FCStd",
  "isconstruction_file": "2D_0009_isconstruction.json"
}