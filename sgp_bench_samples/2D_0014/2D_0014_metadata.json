{
  "pid": 14,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "horizontally aligned",
    "B": "vertically aligned",
    "C": " diagonally aligned",
    "D": "randomly placed"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0114, pntY=0.0900, startParam=-0.0114, endParam=0.0126, isConstruction=True);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0244, pntY=0.0900, startParam=-0.0004, endParam=0.0026, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Circle(xCenter=-0.0270, yCenter=0.0900, xDir=1.0000, yDir=0.0000, radius=0.0090, clockwise=False, isConstruction=False);DiameterConstraint(references=(7,), length=0.018 METER);8:SN_Center;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0270, pntY=0.0887, startParam=-0.0013, endParam=0.0207, isConstruction=True);VerticalConstraint(references=(9,));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 6));11:SN_End;SubnodeConstraint(references=(11, 9));12:Circle(xCenter=-0.0270, yCenter=0.0680, xDir=1.0000, yDir=0.0000, radius=0.0090, clockwise=False, isConstruction=False);DiameterConstraint(references=(12,), length=0.018 METER);13:SN_Center;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 11));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0270, pntY=0.0648, startParam=-0.0032, endParam=0.0188, isConstruction=True);VerticalConstraint(references=(14,));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 11));16:SN_End;SubnodeConstraint(references=(16, 14));17:Circle(xCenter=-0.0270, yCenter=0.0460, xDir=1.0000, yDir=0.0000, radius=0.0090, clockwise=False, isConstruction=False);DiameterConstraint(references=(17,), length=0.018 METER);18:SN_Center;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0270, pntY=0.0426, startParam=-0.0034, endParam=0.0186, isConstruction=True);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 16));21:SN_End;SubnodeConstraint(references=(21, 19));22:Circle(xCenter=-0.0270, yCenter=0.0240, xDir=1.0000, yDir=0.0000, radius=0.0090, clockwise=False, isConstruction=False);DiameterConstraint(references=(22,), length=0.018 METER);23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0951, startParam=-0.0099, endParam=0.0051, isConstruction=False);ParallelConstraint(references=(24, 0));25:SN_Start;SubnodeConstraint(references=(25, 24));VerticalConstraint(references=(25, 0));CoincidentConstraint(references=(25, 0));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 2));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the alignment of the circles in the image?",
  "fcstd_file": "2D_0014.FCStd",
  "isconstruction_file": "2D_0014_isconstruction.json"
}