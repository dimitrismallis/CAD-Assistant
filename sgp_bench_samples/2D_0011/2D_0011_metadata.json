{
  "pid": 11,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Solid",
    "B": "Dashed",
    "C": "Alternating",
    "D": "None above"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0527, pntY=-0.0400, startParam=-0.2127, endParam=0.1073, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0100, pntY=0.0400, startParam=-0.1700, endParam=0.1500, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));DistanceConstraint(references=(4, 1), direction=MINIMUM, length=0.08 METER, halfSpace0=LEFT, halfSpace1=RIGHT);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.1600, pntY=-0.0102, startParam=-0.0298, endParam=0.0502, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=1.0000, pntX=-0.1600, pntY=-0.0102, startParam=-0.0298, endParam=0.0502, isConstruction=False);ParallelConstraint(references=(10, 7));DistanceConstraint(references=(10, 7), direction=MINIMUM, length=0.32 METER, halfSpace0=LEFT, halfSpace1=RIGHT);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Point(x=0.0000, y=0.0000, isConstruction=True);MidpointConstraint(references=(13, 5, 3));MidpointConstraint(references=(13, 6, 2));CoincidentConstraint(references=(13, 0));14:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0000, startParam=-0.1600, endParam=0.1600, isConstruction=False);15:SN_Start;SubnodeConstraint(references=(15, 14));MidpointConstraint(references=(15, 10));16:SN_End;SubnodeConstraint(references=(16, 14));MidpointConstraint(references=(16, 7));17:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.1200, pntY=-0.0000, startParam=-0.0400, endParam=0.0400, isConstruction=True);PerpendicularConstraint(references=(17, 14));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 4));19:SN_End;SubnodeConstraint(references=(19, 17));CoincidentConstraint(references=(19, 1));20:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1200, pntY=0.0000, startParam=-0.0400, endParam=0.0400, isConstruction=False);VerticalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 4));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 1));23:Circle(xCenter=-0.1200, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0285, clockwise=False, isConstruction=False);DiameterConstraint(references=(23,), length=0.057 METER);24:SN_Center;SubnodeConstraint(references=(24, 23));MidpointConstraint(references=(24, 17));25:Circle(xCenter=-0.1200, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0335, clockwise=False, isConstruction=False);DiameterConstraint(references=(25,), length=0.067 METER);26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:Circle(xCenter=0.1200, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0285, clockwise=False, isConstruction=False);DiameterConstraint(references=(27,), length=0.057 METER);28:SN_Center;SubnodeConstraint(references=(28, 27));MidpointConstraint(references=(28, 20));29:Circle(xCenter=0.1200, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0335, clockwise=False, isConstruction=False);DiameterConstraint(references=(29,), length=0.067 METER);30:SN_Center;SubnodeConstraint(references=(30, 29));CoincidentConstraint(references=(30, 28));31:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0000, pntY=0.0335, startParam=-0.1200, endParam=0.1200, isConstruction=False);TangentConstraint(references=(31, 29));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 25));CoincidentConstraint(references=(32, 17));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 20));34:Line(dirX=1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0335, startParam=-0.1200, endParam=0.1200, isConstruction=False);PerpendicularConstraint(references=(34, 20));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 25));CoincidentConstraint(references=(35, 17));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 29));37:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Are the circles on the CAD object solid or dashed?",
  "fcstd_file": "2D_0011.FCStd",
  "isconstruction_file": "2D_0011_isconstruction.json"
}