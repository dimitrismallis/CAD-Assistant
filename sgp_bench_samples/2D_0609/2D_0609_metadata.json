{
  "pid": 609,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Inside",
    "B": "Outside",
    "C": "Beside",
    "D": "None of above"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0332, startParam=-0.0419, endParam=-0.0256, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0332, startParam=-0.0419, endParam=-0.0256, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0419, pntY=0.0000, startParam=-0.0332, endParam=0.0332, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0419, pntY=0.0000, startParam=-0.0332, endParam=0.0332, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Point(x=0.0000, y=0.0000, isConstruction=True);CoincidentConstraint(references=(13, 0));14:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0134, clockwise=False, isConstruction=False);15:SN_Center;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 13));16:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0419, startParam=0.9139, endParam=2.2277, clockwise=False, isConstruction=False);TangentConstraint(references=(16, 7));17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 13));18:SN_Start;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 3));19:SN_End;SubnodeConstraint(references=(19, 16));20:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0332, startParam=0.0256, endParam=0.0419, isConstruction=False);CoincidentConstraint(references=(20, 4));21:SN_Start;SubnodeConstraint(references=(21, 20));22:SN_End;SubnodeConstraint(references=(22, 20));MidpointConstraint(references=(22, 13, 2));CoincidentConstraint(references=(22, 12));23:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0419, startParam=-2.2277, endParam=-0.9139, clockwise=False, isConstruction=False);CoincidentConstraint(references=(23, 16));24:SN_Center;SubnodeConstraint(references=(24, 23));25:SN_Start;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 21));26:SN_End;SubnodeConstraint(references=(26, 23));CoincidentConstraint(references=(26, 6));27:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0332, startParam=0.0256, endParam=0.0419, isConstruction=False);CoincidentConstraint(references=(27, 1));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 19));29:SN_End;SubnodeConstraint(references=(29, 27));MidpointConstraint(references=(29, 13, 5));CoincidentConstraint(references=(29, 11));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Where is the smaller dot located in relation to the larger circle?",
  "fcstd_file": "2D_0609.FCStd",
  "isconstruction_file": "2D_0609_isconstruction.json"
}