{
  "pid": 459,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "square",
    "B": "circle",
    "C": "triangle",
    "D": "rectangle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=-0.0059, radius=0.0258, startParam=-4.0641, endParam=-1.7086, clockwise=False, isConstruction=False);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0243, startParam=-4.1625, endParam=-1.7675, clockwise=False, isConstruction=False);6:SN_Center;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 2));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));9:Line(dirX=-0.2297, dirY=-0.9733, pntX=0.0156, pntY=0.0196, startParam=-0.0009, endParam=0.0008, isConstruction=False);10:SN_Start;SubnodeConstraint(references=(10, 9));11:SN_End;SubnodeConstraint(references=(11, 9));12:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0141, pntY=0.0207, startParam=-0.0014, endParam=0.0014, isConstruction=False);HorizontalConstraint(references=(12,));13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 7));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 3));15:Line(dirX=0.5066, dirY=-0.8622, pntX=-0.0042, pntY=-0.0247, startParam=-0.0010, endParam=0.0010, isConstruction=False);16:SN_Start;SubnodeConstraint(references=(16, 15));HorizontalConstraint(references=(16, 0));CoincidentConstraint(references=(16, 8));17:SN_End;SubnodeConstraint(references=(17, 15));VerticalConstraint(references=(17, 0));CoincidentConstraint(references=(17, 4));18:Line(dirX=-0.5066, dirY=-0.8622, pntX=0.0042, pntY=-0.0247, startParam=-0.0010, endParam=0.0010, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));HorizontalConstraint(references=(19, 0));20:SN_End;SubnodeConstraint(references=(20, 18));VerticalConstraint(references=(20, 0));21:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=-0.0059, radius=0.0258, startParam=-1.4211, endParam=0.9181, clockwise=False, isConstruction=False);CoincidentConstraint(references=(21, 1));22:SN_Center;SubnodeConstraint(references=(22, 21));23:SN_Start;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 20));24:SN_End;SubnodeConstraint(references=(24, 21));CoincidentConstraint(references=(24, 10));25:Arc(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0243, startParam=-1.3741, endParam=0.8825, clockwise=False, isConstruction=False);CoincidentConstraint(references=(25, 5));26:SN_Center;SubnodeConstraint(references=(26, 25));27:SN_Start;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 19));28:SN_End;SubnodeConstraint(references=(28, 25));CoincidentConstraint(references=(28, 11));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: If the CAD object were to be completed into a full shape, what would it form?",
  "fcstd_file": "2D_0459.FCStd",
  "isconstruction_file": "2D_0459_isconstruction.json"
}