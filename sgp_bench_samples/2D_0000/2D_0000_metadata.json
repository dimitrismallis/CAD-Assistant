{
  "pid": 0,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "3",
    "B": "4",
    "C": "5",
    "D": "6"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.0080, dirY=-1.0000, pntX=-0.0066, pntY=0.0120, startParam=-0.0052, endParam=0.0053, isConstruction=True);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.9988, dirY=-0.0488, pntX=-0.0066, pntY=0.0120, startParam=-0.0074, endParam=0.0074, isConstruction=True);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Point(x=-0.0066, y=0.0120, isConstruction=False);CoincidentConstraint(references=(7, 1));CoincidentConstraint(references=(7, 4));8:Line(dirX=0.9992, dirY=0.0394, pntX=-0.0072, pntY=0.0094, startParam=-0.0071, endParam=0.0083, isConstruction=True);9:SN_Start;SubnodeConstraint(references=(9, 8));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.9918, dirY=-0.1280, pntX=-0.0067, pntY=0.0141, startParam=-0.0071, endParam=0.0073, isConstruction=True);12:SN_Start;SubnodeConstraint(references=(12, 11));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=0.0602, dirY=0.9982, pntX=-0.0103, pntY=0.0126, startParam=-0.0064, endParam=0.0055, isConstruction=True);15:SN_Start;SubnodeConstraint(references=(15, 14));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=0.0593, dirY=-0.9982, pntX=-0.0029, pntY=0.0121, startParam=-0.0043, endParam=0.0049, isConstruction=True);18:SN_Start;SubnodeConstraint(references=(18, 17));19:SN_End;SubnodeConstraint(references=(19, 17));20:Circle(xCenter=-0.0105, yCenter=0.0092, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(20,), length=#pip);21:SN_Center;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 14));CoincidentConstraint(references=(21, 8));22:Circle(xCenter=-0.0101, yCenter=0.0146, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(22, 20));23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 14));CoincidentConstraint(references=(23, 11));24:Circle(xCenter=-0.0030, yCenter=0.0136, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(24, 22));TangentConstraint(references=(24, 4));25:SN_Center;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 17));CoincidentConstraint(references=(25, 11));26:Circle(xCenter=-0.0027, yCenter=0.0095, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(26, 22));27:SN_Center;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 8));CoincidentConstraint(references=(27, 17));28:Line(dirX=0.9701, dirY=-0.2425, pntX=-0.0017, pntY=0.0161, startParam=-0.0120, endParam=0.0020, isConstruction=True);MidpointConstraint(references=(28, 2));CoincidentConstraint(references=(28, 18));CoincidentConstraint(references=(28, 16));29:SN_Start;SubnodeConstraint(references=(29, 28));MidpointConstraint(references=(29, 16, 2));30:SN_End;SubnodeConstraint(references=(30, 28));MidpointConstraint(references=(30, 18, 2));31:Line(dirX=0.1479, dirY=-0.9890, pntX=0.0002, pntY=0.0160, startParam=0.0004, endParam=0.0084, isConstruction=True);MidpointConstraint(references=(31, 6));CoincidentConstraint(references=(31, 10));CoincidentConstraint(references=(31, 13));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));MidpointConstraint(references=(33, 10, 6));MidpointConstraint(references=(33, 19, 3));34:Line(dirX=-0.9928, dirY=-0.1199, pntX=-0.0092, pntY=0.0064, startParam=-0.0107, endParam=0.0055, isConstruction=True);MidpointConstraint(references=(34, 3));CoincidentConstraint(references=(34, 19));CoincidentConstraint(references=(34, 15));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 33));36:SN_End;SubnodeConstraint(references=(36, 34));MidpointConstraint(references=(36, 9, 5));MidpointConstraint(references=(36, 15, 3));37:Line(dirX=0.1015, dirY=0.9948, pntX=-0.0145, pntY=0.0070, startParam=-0.0013, endParam=0.0120, isConstruction=True);MidpointConstraint(references=(37, 5));CoincidentConstraint(references=(37, 12));CoincidentConstraint(references=(37, 9));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 29));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are there in the image?",
  "fcstd_file": "2D_0000.FCStd",
  "isconstruction_file": "2D_0000_isconstruction.json"
}