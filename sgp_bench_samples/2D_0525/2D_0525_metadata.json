{
  "pid": 525,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.004 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0050, clockwise=False, isConstruction=False);DiameterConstraint(references=(3,), length=0.01 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0466, pntY=0.0000, startParam=-0.0466, endParam=0.0534, isConstruction=True);HorizontalConstraint(references=(5,));6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 2));7:SN_End;SubnodeConstraint(references=(7, 5));8:Circle(xCenter=-0.1000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0020, clockwise=False, isConstruction=False);DiameterConstraint(references=(8,), length=0.004 METER);9:SN_Center;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 7));10:Circle(xCenter=-0.1000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0050, clockwise=False, isConstruction=False);DiameterConstraint(references=(10,), length=0.01 METER);11:SN_Center;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 7));12:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0480, pntY=0.0030, startParam=-0.0440, endParam=0.0480, isConstruction=False);HorizontalConstraint(references=(12,));13:SN_Start;SubnodeConstraint(references=(13, 12));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 10));15:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0960, pntY=0.0000, startParam=-0.0030, endParam=0.0030, isConstruction=True);VerticalConstraint(references=(15,));16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 10));18:Line(dirX=1.0000, dirY=-0.0000, pntX=-0.0500, pntY=-0.0030, startParam=-0.0460, endParam=0.0460, isConstruction=False);ParallelConstraint(references=(18, 12));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 17));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 3));21:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0040, pntY=-0.0000, startParam=-0.0030, endParam=0.0030, isConstruction=True);VerticalConstraint(references=(21,));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 3));CoincidentConstraint(references=(23, 13));24:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0887, pntY=0.0030, startParam=-0.0073, endParam=-0.0033, isConstruction=True);25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 14));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 12));27:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0920, pntY=0.0000, startParam=-0.0030, endParam=0.0030, isConstruction=False);PerpendicularConstraint(references=(27, 18));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 26));29:SN_End;SubnodeConstraint(references=(29, 27));CoincidentConstraint(references=(29, 18));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are visible in the image?",
  "fcstd_file": "2D_0525.FCStd",
  "isconstruction_file": "2D_0525_isconstruction.json"
}