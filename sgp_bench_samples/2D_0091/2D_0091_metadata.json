{
  "pid": 91,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circular",
    "B": "Triangular",
    "C": "Rectangular",
    "D": "Irregular"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0093, pntY=-0.0035, startParam=-0.0035, endParam=0.0032, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));HorizontalConstraint(references=(2, 0));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0130, pntY=-0.0082, startParam=-0.0022, endParam=0.0027, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0182, pntY=-0.0104, startParam=0.0003, endParam=0.0048, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0047, pntY=0.0000, startParam=-0.0046, endParam=0.0047, isConstruction=True);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 2));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 0));13:Point(x=0.0093, y=-0.0082, isConstruction=False);CoincidentConstraint(references=(13, 1));CoincidentConstraint(references=(13, 4));14:Arc(xCenter=0.0108, yCenter=-0.0067, xDir=1.0000, yDir=0.0000, radius=0.0015, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(14, 4));TangentConstraint(references=(14, 1));15:SN_Center;SubnodeConstraint(references=(15, 14));16:SN_Start;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 3));17:SN_End;SubnodeConstraint(references=(17, 14));CoincidentConstraint(references=(17, 5));18:Point(x=0.0182, y=-0.0082, isConstruction=False);CoincidentConstraint(references=(18, 4));CoincidentConstraint(references=(18, 7));19:Arc(xCenter=0.0157, yCenter=-0.0107, xDir=1.0000, yDir=0.0000, radius=0.0025, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(19, 7));TangentConstraint(references=(19, 4));20:SN_Center;SubnodeConstraint(references=(20, 19));21:SN_Start;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 8));22:SN_End;SubnodeConstraint(references=(22, 19));CoincidentConstraint(references=(22, 6));23:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0193, pntY=-0.0104, startParam=0.0003, endParam=0.0048, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));25:SN_End;SubnodeConstraint(references=(25, 23));26:Arc(xCenter=0.0157, yCenter=-0.0107, xDir=1.0000, yDir=0.0000, radius=0.0036, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 24));29:SN_End;SubnodeConstraint(references=(29, 26));30:Line(dirX=1.0000, dirY=0.0000, pntX=0.0130, pntY=-0.0071, startParam=-0.0022, endParam=0.0027, isConstruction=False);31:SN_Start;SubnodeConstraint(references=(31, 30));32:SN_End;SubnodeConstraint(references=(32, 30));CoincidentConstraint(references=(32, 29));33:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0104, pntY=-0.0035, startParam=-0.0035, endParam=0.0032, isConstruction=False);34:SN_Start;SubnodeConstraint(references=(34, 33));35:SN_End;SubnodeConstraint(references=(35, 33));36:Point(x=0.0104, y=-0.0071, isConstruction=False);CoincidentConstraint(references=(36, 30));CoincidentConstraint(references=(36, 33));37:Arc(xCenter=0.0108, yCenter=-0.0067, xDir=1.0000, yDir=0.0000, radius=0.0004, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(37, 33));TangentConstraint(references=(37, 30));38:SN_Center;SubnodeConstraint(references=(38, 37));39:SN_Start;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 35));40:SN_End;SubnodeConstraint(references=(40, 37));CoincidentConstraint(references=(40, 31));41:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0098, pntY=0.0000, startParam=-0.0006, endParam=0.0006, isConstruction=False);HorizontalConstraint(references=(41,));42:SN_Start;SubnodeConstraint(references=(42, 41));CoincidentConstraint(references=(42, 34));43:SN_End;SubnodeConstraint(references=(43, 41));CoincidentConstraint(references=(43, 2));44:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0188, pntY=-0.0152, startParam=-0.0005, endParam=0.0006, isConstruction=False);HorizontalConstraint(references=(44,));45:SN_Start;SubnodeConstraint(references=(45, 44));CoincidentConstraint(references=(45, 25));46:SN_End;SubnodeConstraint(references=(46, 44));CoincidentConstraint(references=(46, 9));47:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the primary shape of the CAD object?",
  "fcstd_file": "2D_0091.FCStd",
  "isconstruction_file": "2D_0091_isconstruction.json"
}