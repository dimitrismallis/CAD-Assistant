{
  "pid": 407,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "acute",
    "B": "obtuse",
    "C": "right",
    "D": "angles"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=-1.7538, pntY=0.0000, startParam=-1.7538, endParam=-0.4088, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=-1.0000, dirY=-0.0000, pntX=-1.7538, pntY=-2.6600, startParam=-1.7538, endParam=2.5962, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-1.2260, startParam=-1.2260, endParam=1.4340, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-4.3500, pntY=-1.4340, startParam=-1.4340, endParam=1.2260, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=1.0000, dirY=0.0000, pntX=-2.3640, pntY=2.2000, startParam=-1.9860, endParam=1.0190, isConstruction=False);HorizontalConstraint(references=(13,));DistanceConstraint(references=(13, 4), direction=MINIMUM, length=4.86 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-0.0000, dirY=1.0000, pntX=-4.3500, pntY=0.9960, startParam=-0.9960, endParam=1.2040, isConstruction=False);PerpendicularConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 11));CoincidentConstraint(references=(17, 1));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 14));19:Line(dirX=-0.0000, dirY=1.0000, pntX=-1.3450, pntY=1.2040, startParam=-1.2040, endParam=0.9960, isConstruction=False);ParallelConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 3));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 15));22:Line(dirX=-0.0000, dirY=1.0000, pntX=-1.2450, pntY=1.2040, startParam=-1.1040, endParam=1.0960, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=-1.0000, dirY=-0.0000, pntX=-1.7538, pntY=0.1000, startParam=-1.8538, endParam=-0.5088, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 23));28:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1000, pntY=-1.2260, startParam=-1.3260, endParam=1.5340, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 26));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=-1.0000, dirY=-0.0000, pntX=-1.7538, pntY=-2.7600, startParam=-1.8538, endParam=2.6962, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));34:Line(dirX=0.0000, dirY=-1.0000, pntX=-4.4500, pntY=-1.4340, startParam=-1.4340, endParam=1.3260, isConstruction=False);35:SN_Start;SubnodeConstraint(references=(35, 34));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 33));37:Line(dirX=-0.0000, dirY=1.0000, pntX=-4.4500, pntY=0.9960, startParam=-0.9960, endParam=1.3040, isConstruction=False);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 35));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=1.0000, dirY=0.0000, pntX=-2.3640, pntY=2.3000, startParam=-2.0860, endParam=1.1190, isConstruction=False);41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 39));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 24));43:Line(dirX=-0.7071, dirY=-0.7071, pntX=-4.4000, pntY=-2.7100, startParam=-0.0707, endParam=0.0707, isConstruction=False);44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 6));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 33));46:Line(dirX=-0.7071, dirY=0.7071, pntX=0.0500, pntY=-2.7100, startParam=-0.0707, endParam=0.0707, isConstruction=False);47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 30));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 5));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Which description best fits the internal angles of the CAD object?",
  "fcstd_file": "2D_0407.FCStd",
  "isconstruction_file": "2D_0407_isconstruction.json"
}