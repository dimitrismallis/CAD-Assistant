{
  "pid": 473,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Three",
    "C": "Five",
    "D": "Seven"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.1613, xDir=1.0000, yDir=0.0000, radius=0.0483, clockwise=False, isConstruction=True);RadiusConstraint(references=(1,), length=0.04826 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));ConcentricConstraint(references=(2, 0));3:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.1854, startParam=-0.0241, endParam=0.0241, isConstruction=True);VerticalConstraint(references=(3,));4:SN_Start;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:SN_End;SubnodeConstraint(references=(5, 3));CoincidentConstraint(references=(5, 1));6:Line(dirX=-0.7071, dirY=-0.7071, pntX=-0.0171, pntY=0.1442, startParam=-0.0241, endParam=0.0241, isConstruction=True);AngleConstraint(references=(6, 3), clockwise=True, aligned=True, angle=135.0 DEGREE);7:SN_Start;SubnodeConstraint(references=(7, 6));CoincidentConstraint(references=(7, 2));8:SN_End;SubnodeConstraint(references=(8, 6));CoincidentConstraint(references=(8, 1));9:Line(dirX=0.7071, dirY=-0.7071, pntX=0.0171, pntY=0.1442, startParam=-0.0241, endParam=0.0241, isConstruction=True);AngleConstraint(references=(9, 3), clockwise=True, aligned=True, angle=135.0 DEGREE);10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 2));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 1));12:Circle(xCenter=0.0000, yCenter=0.2095, xDir=1.0000, yDir=0.0000, radius=0.0080, clockwise=False, isConstruction=False);RadiusConstraint(references=(12,), length=0.008001 METER);13:SN_Center;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 5));14:Circle(xCenter=-0.0341, yCenter=0.1272, xDir=1.0000, yDir=0.0000, radius=0.0080, clockwise=False, isConstruction=False);EqualConstraint(references=(14, 12));15:SN_Center;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 8));16:Circle(xCenter=0.0341, yCenter=0.1272, xDir=1.0000, yDir=0.0000, radius=0.0080, clockwise=False, isConstruction=False);EqualConstraint(references=(16, 12));17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 11));18:Circle(xCenter=0.0000, yCenter=0.2095, xDir=1.0000, yDir=0.0000, radius=0.0051, clockwise=False, isConstruction=False);RadiusConstraint(references=(18,), length=0.00508 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 5));20:Circle(xCenter=-0.0341, yCenter=0.1272, xDir=1.0000, yDir=0.0000, radius=0.0051, clockwise=False, isConstruction=False);EqualConstraint(references=(20, 18));21:SN_Center;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 8));22:Circle(xCenter=0.0341, yCenter=0.1272, xDir=1.0000, yDir=0.0000, radius=0.0051, clockwise=False, isConstruction=False);EqualConstraint(references=(22, 20));23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 11));24:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are depicted in the image?",
  "fcstd_file": "2D_0473.FCStd",
  "isconstruction_file": "2D_0473_isconstruction.json"
}