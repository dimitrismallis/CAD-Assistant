{
  "pid": 242,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "ladder",
    "B": "stairs",
    "C": "slide",
    "D": "ramp"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=-0.0000, pntX=2.8686, pntY=0.4572, startParam=-0.0016, endParam=0.2524, isConstruction=False);PerpendicularConstraint(references=(1, 0));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=-1.0000, pntX=2.6162, pntY=0.4693, startParam=0.0121, endParam=0.1645, isConstruction=False);VerticalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=2.6034, pntY=0.3048, startParam=-0.0128, endParam=0.2412, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=0.0000, dirY=-1.0000, pntX=2.3622, pntY=0.2643, startParam=-0.0405, endParam=0.1119, isConstruction=False);VerticalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=-1.0000, dirY=-0.0000, pntX=2.3873, pntY=0.1524, startParam=0.0251, endParam=0.2791, isConstruction=False);PerpendicularConstraint(references=(13, 10));EqualConstraint(references=(13, 7));EqualConstraint(references=(13, 1));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=0.0000, dirY=-1.0000, pntX=2.1082, pntY=0.0668, startParam=-0.0856, endParam=0.0668, isConstruction=False);PerpendicularConstraint(references=(16, 0));EqualConstraint(references=(16, 10));EqualConstraint(references=(16, 4));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=1.0000, dirY=0.0000, pntX=2.6691, pntY=0.0000, startParam=-0.5609, endParam=0.4551, isConstruction=False);HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=0.0000, dirY=1.0000, pntX=3.1242, pntY=0.2996, startParam=-0.2996, endParam=0.3100, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 0));25:Line(dirX=0.0000, dirY=1.0000, pntX=2.8702, pntY=0.5616, startParam=-0.1044, endParam=0.0480, isConstruction=False);VerticalConstraint(references=(25,));EqualConstraint(references=(25, 16));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 2));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=1.0000, dirY=0.0000, pntX=3.1104, pntY=0.6096, startParam=-0.2402, endParam=0.0138, isConstruction=False);ParallelConstraint(references=(28, 1));EqualConstraint(references=(28, 13));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 0));CoincidentConstraint(references=(30, 24));31:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: If the object in the image represents a real-world object, what would it most likely be?",
  "fcstd_file": "2D_0242.FCStd",
  "isconstruction_file": "2D_0242_isconstruction.json"
}