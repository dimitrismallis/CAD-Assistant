{
  "pid": 263,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Two",
    "B": "One",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=-0.0071, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0040, startParam=-5.0135, endParam=-1.2697, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.008 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));HorizontalConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Arc(xCenter=0.0071, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0040, startParam=-1.8719, endParam=1.8719, clockwise=False, isConstruction=False);EqualConstraint(references=(5, 1));6:SN_Center;SubnodeConstraint(references=(6, 5));HorizontalConstraint(references=(6, 0));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));9:Arc(xCenter=-0.0000, yCenter=0.0229, xDir=1.0000, yDir=0.0000, radius=0.0200, startParam=-1.8719, endParam=-1.2697, clockwise=False, isConstruction=False);TangentConstraint(references=(9, 1));TangentConstraint(references=(9, 5));RadiusConstraint(references=(9,), length=0.02 METER);10:SN_Center;SubnodeConstraint(references=(10, 9));11:SN_Start;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 9));CoincidentConstraint(references=(12, 8));13:Arc(xCenter=0.0000, yCenter=-0.0229, xDir=1.0000, yDir=0.0000, radius=0.0200, startParam=1.2697, endParam=1.8719, clockwise=False, isConstruction=False);TangentConstraint(references=(13, 1));TangentConstraint(references=(13, 5));EqualConstraint(references=(13, 9));14:SN_Center;SubnodeConstraint(references=(14, 13));15:SN_Start;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 7));16:SN_End;SubnodeConstraint(references=(16, 13));CoincidentConstraint(references=(16, 4));17:Circle(xCenter=-0.0071, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);DiameterConstraint(references=(17,), length=0.0035 METER);18:SN_Center;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 2));19:Circle(xCenter=0.0071, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0018, clockwise=False, isConstruction=False);EqualConstraint(references=(19, 17));20:SN_Center;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 6));21:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0011, pntY=0.0000, startParam=-0.0060, endParam=0.0011, isConstruction=True);22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 2));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 0));24:Line(dirX=1.0000, dirY=0.0000, pntX=0.0014, pntY=0.0000, startParam=-0.0014, endParam=0.0058, isConstruction=True);EqualConstraint(references=(24, 21));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 23));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 6));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many holes are present in the CAD object?",
  "fcstd_file": "2D_0263.FCStd",
  "isconstruction_file": "2D_0263_isconstruction.json"
}