{
  "pid": 341,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Perimeter",
    "B": "Radius",
    "C": "Diameter",
    "D": "Chord"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=-0.0159, yCenter=0.0192, xDir=1.0000, yDir=0.0000, radius=0.0128, startParam=-3.1416, endParam=0.0000, clockwise=False, isConstruction=False);RadiusConstraint(references=(1,), length=#pipe_radius);2:SN_Center;SubnodeConstraint(references=(2, 1));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));5:Arc(xCenter=-0.0159, yCenter=0.0192, xDir=-1.0000, yDir=0.0000, radius=0.0143, startParam=0.1049, endParam=3.0367, clockwise=False, isConstruction=False);6:SN_Center;SubnodeConstraint(references=(6, 5));7:SN_Start;SubnodeConstraint(references=(7, 5));8:SN_End;SubnodeConstraint(references=(8, 5));9:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0159, pntY=0.0192, startParam=-0.0159, endParam=0.0159, isConstruction=True);HorizontalConstraint(references=(9,));CoincidentConstraint(references=(9, 2));CoincidentConstraint(references=(9, 3));CoincidentConstraint(references=(9, 4));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 0));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 0));12:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0287, pntY=0.0202, startParam=-0.0010, endParam=-0.0010, isConstruction=False);VerticalConstraint(references=(12,));13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 3));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 12));15:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0304, pntY=0.0192, startParam=-0.0017, endParam=0.0014, isConstruction=False);PerpendicularConstraint(references=(15, 0));CoincidentConstraint(references=(15, 9));16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 0));18:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0310, pntY=0.0177, startParam=-0.0009, endParam=0.0008, isConstruction=False);ParallelConstraint(references=(18, 9));DistanceConstraint(references=(18, 9), direction=MINIMUM, length=0.0015 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 7));20:SN_End;SubnodeConstraint(references=(20, 18));CoincidentConstraint(references=(20, 18));21:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0318, pntY=0.0198, startParam=-0.0021, endParam=-0.0006, isConstruction=False);CoincidentConstraint(references=(21, 0));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 17));24:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0031, pntY=0.0205, startParam=-0.0013, endParam=-0.0013, isConstruction=False);PerpendicularConstraint(references=(24, 9));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 4));26:SN_End;SubnodeConstraint(references=(26, 24));27:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0015, pntY=0.0192, startParam=-0.0015, endParam=0.0015, isConstruction=False);HorizontalConstraint(references=(27,));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 26));29:SN_End;SubnodeConstraint(references=(29, 27));VerticalConstraint(references=(29, 0));CoincidentConstraint(references=(29, 0));30:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0191, startParam=-0.0001, endParam=0.0014, isConstruction=False);31:SN_Start;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 29));32:SN_End;SubnodeConstraint(references=(32, 30));CoincidentConstraint(references=(32, 0));33:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0010, pntY=0.0177, startParam=-0.0006, endParam=0.0010, isConstruction=False);ParallelConstraint(references=(33, 9));DistanceConstraint(references=(33, 9), direction=MINIMUM, length=0.0015 METER, halfSpace0=LEFT, halfSpace1=RIGHT);34:SN_Start;SubnodeConstraint(references=(34, 33));CoincidentConstraint(references=(34, 8));35:SN_End;SubnodeConstraint(references=(35, 33));CoincidentConstraint(references=(35, 32));36:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of line is represented by the dotted line in the image?",
  "fcstd_file": "2D_0341.FCStd",
  "isconstruction_file": "2D_0341_isconstruction.json"
}