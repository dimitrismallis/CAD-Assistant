{
  "pid": 223,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=0.0000, y=0.0000, isConstruction=False);CoincidentConstraint(references=(1, 0));2:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0095, pntY=-0.0062, startParam=-0.0143, endParam=0.0267, isConstruction=False);3:SN_Start;SubnodeConstraint(references=(3, 2));4:SN_End;SubnodeConstraint(references=(4, 2));5:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0081, pntY=-0.0205, startParam=-0.0014, endParam=0.0176, isConstruction=False);6:SN_Start;SubnodeConstraint(references=(6, 5));7:SN_End;SubnodeConstraint(references=(7, 5));CoincidentConstraint(references=(7, 3));8:Line(dirX=0.0000, dirY=1.0000, pntX=0.0095, pntY=-0.0062, startParam=-0.0143, endParam=0.0267, isConstruction=False);9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 6));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0020, pntY=0.0205, startParam=-0.0075, endParam=0.0115, isConstruction=False);DistanceConstraint(references=(11, 5), direction=MINIMUM, length=0.041 METER, halfSpace0=RIGHT, halfSpace1=LEFT);12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 4));14:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0035, pntY=0.0106, startParam=-0.0117, endParam=0.0047, isConstruction=False);15:SN_Start;SubnodeConstraint(references=(15, 14));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0106, startParam=-0.0082, endParam=0.0082, isConstruction=False);ParallelConstraint(references=(17, 14));HorizontalConstraint(references=(17,));DistanceConstraint(references=(17, 14), direction=MINIMUM, length=0.0212 METER, halfSpace0=RIGHT, halfSpace1=LEFT);18:SN_Start;SubnodeConstraint(references=(18, 17));19:SN_End;SubnodeConstraint(references=(19, 17));20:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0082, pntY=0.0027, startParam=-0.0079, endParam=0.0133, isConstruction=False);PerpendicularConstraint(references=(20, 17));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 15));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 18));23:Line(dirX=-0.0000, dirY=-1.0000, pntX=-0.0082, pntY=0.0027, startParam=-0.0079, endParam=0.0133, isConstruction=False);ParallelConstraint(references=(23, 20));DistanceConstraint(references=(23, 20), direction=MINIMUM, length=0.0164 METER, halfSpace0=RIGHT, halfSpace1=LEFT);24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 16));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 19));26:Point(x=0.0000, y=0.0000, isConstruction=False);MidpointConstraint(references=(26, 18, 16));MidpointConstraint(references=(26, 19, 15));CoincidentConstraint(references=(26, 1));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many shapes are visible within the CAD object?",
  "fcstd_file": "2D_0223.FCStd",
  "isconstruction_file": "2D_0223_isconstruction.json"
}