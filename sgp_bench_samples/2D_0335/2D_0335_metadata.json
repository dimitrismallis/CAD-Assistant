{
  "pid": 335,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "L-shaped"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-1.0000, dirY=0.0000, pntX=0.1400, pntY=0.2235, startParam=-0.0255, endParam=0.0605, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.1224, pntY=0.1375, startParam=-0.0429, endParam=0.0431, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));CoincidentConstraint(references=(6, 0));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.1655, pntY=0.1806, startParam=-0.0431, endParam=0.0429, isConstruction=False);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 2));10:Line(dirX=1.0000, dirY=0.0000, pntX=0.1226, pntY=0.1545, startParam=-0.0081, endParam=0.0079, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=1.0000, pntX=0.1305, pntY=0.1824, startParam=-0.0279, endParam=0.0229, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));VerticalConstraint(references=(15, 12));16:Line(dirX=0.0000, dirY=1.0000, pntX=0.0795, pntY=0.1806, startParam=-0.0431, endParam=0.0429, isConstruction=False);EqualConstraint(references=(16, 1));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 5));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 3));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1145, pntY=0.1730, startParam=-0.0150, endParam=0.0185, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 11));22:Line(dirX=-1.0000, dirY=0.0000, pntX=0.1050, pntY=0.1880, startParam=-0.0095, endParam=0.0125, isConstruction=False);PerpendicularConstraint(references=(22, 19));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 20));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=0.0000, dirY=1.0000, pntX=0.0925, pntY=0.1967, startParam=-0.0087, endParam=0.0086, isConstruction=False);VerticalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));HorizontalConstraint(references=(27, 15));28:Line(dirX=1.0000, dirY=0.0000, pntX=0.1115, pntY=0.2053, startParam=-0.0190, endParam=0.0190, isConstruction=False);29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 15));31:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the inner feature of the CAD object?",
  "fcstd_file": "2D_0335.FCStd",
  "isconstruction_file": "2D_0335_isconstruction.json"
}