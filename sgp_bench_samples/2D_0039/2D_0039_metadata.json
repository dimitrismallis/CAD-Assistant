{
  "pid": 39,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "square",
    "B": "triangle",
    "C": "half-circle",
    "D": "semicircle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Point(x=0.0200, y=-0.0200, isConstruction=False);2:Point(x=0.1010, y=-0.0200, isConstruction=False);HorizontalConstraint(references=(2, 1));3:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.2706, pntY=-0.0097, startParam=-0.2294, endParam=0.1206, isConstruction=False);4:SN_Start;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 0));5:SN_End;SubnodeConstraint(references=(5, 3));6:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.2706, pntY=-0.0257, startParam=-0.2294, endParam=0.1206, isConstruction=False);ParallelConstraint(references=(6, 3));HorizontalConstraint(references=(6,));DistanceConstraint(references=(6, 3), direction=MINIMUM, length=0.016 METER, halfSpace0=RIGHT, halfSpace1=LEFT);7:SN_Start;SubnodeConstraint(references=(7, 6));8:SN_End;SubnodeConstraint(references=(8, 6));9:Line(dirX=0.0000, dirY=-1.0000, pntX=0.5000, pntY=-0.0187, startParam=-0.0090, endParam=0.0070, isConstruction=False);PerpendicularConstraint(references=(9, 6));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 4));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 7));12:Line(dirX=0.0000, dirY=-1.0000, pntX=0.1500, pntY=-0.0187, startParam=-0.0090, endParam=0.0070, isConstruction=False);ParallelConstraint(references=(12, 9));DistanceConstraint(references=(12, 9), direction=MINIMUM, length=0.35 METER, halfSpace0=RIGHT, halfSpace1=LEFT);13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 5));14:SN_End;SubnodeConstraint(references=(14, 12));CoincidentConstraint(references=(14, 8));15:Arc(xCenter=0.1500, yCenter=-0.0177, xDir=1.0000, yDir=0.0000, radius=0.0080, startParam=-4.7124, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(15, 6));16:SN_Center;SubnodeConstraint(references=(16, 15));17:SN_Start;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 5));18:SN_End;SubnodeConstraint(references=(18, 15));CoincidentConstraint(references=(18, 8));19:Circle(xCenter=0.0200, yCenter=-0.0200, xDir=1.0000, yDir=0.0000, radius=0.0070, clockwise=False, isConstruction=False);DiameterConstraint(references=(19,), length=0.014 METER);20:SN_Center;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 1));21:Circle(xCenter=0.1010, yCenter=-0.0200, xDir=1.0000, yDir=0.0000, radius=0.0070, clockwise=False, isConstruction=False);DiameterConstraint(references=(21,), length=0.014 METER);22:SN_Center;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 2));23:Arc(xCenter=0.0203, yCenter=-0.0200, xDir=1.0000, yDir=0.0000, radius=0.0200, startParam=-4.7011, endParam=-1.4786, clockwise=False, isConstruction=False);24:SN_Center;SubnodeConstraint(references=(24, 23));25:SN_Start;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 0));26:SN_End;SubnodeConstraint(references=(26, 23));CoincidentConstraint(references=(26, 0));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What feature is at the left end of the rectangular body?",
  "fcstd_file": "2D_0039.FCStd",
  "isconstruction_file": "2D_0039_isconstruction.json"
}