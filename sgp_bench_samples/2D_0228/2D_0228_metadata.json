{
  "pid": 228,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Triangles",
    "B": "Rectangles",
    "C": "Circles",
    "D": "Parallelogram"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.8321, dirY=0.5547, pntX=-0.0621, pntY=0.0414, startParam=-0.0746, endParam=0.1085, isConstruction=True);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=-0.0000, pntX=-0.0097, pntY=0.1016, startParam=-0.1427, endParam=0.0859, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.8321, dirY=-0.5547, pntX=0.1337, pntY=0.0633, startParam=-0.0691, endParam=0.1141, isConstruction=True);ParallelConstraint(references=(7, 1));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));HorizontalConstraint(references=(9, 0));10:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0996, pntY=-0.0000, startParam=-0.1290, endParam=0.0996, isConstruction=True);EqualConstraint(references=(10, 4));DistanceConstraint(references=(10, 4), direction=MINIMUM, length=0.1016 METER, halfSpace0=RIGHT, halfSpace1=RIGHT);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Circle(xCenter=-0.1524, yCenter=0.1016, xDir=1.0000, yDir=0.0000, radius=0.0330, clockwise=False, isConstruction=True);DiameterConstraint(references=(13,), length=0.06604 METER);14:SN_Center;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 3));15:Circle(xCenter=0.2286, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=True);16:SN_Center;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 9));17:Circle(xCenter=0.0000, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=True);DiameterConstraint(references=(17,), length=0.0508 METER);EqualConstraint(references=(17, 15));18:SN_Center;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 12));19:Circle(xCenter=0.0762, yCenter=0.1016, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=True);EqualConstraint(references=(19, 15));20:SN_Center;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 6));21:Circle(xCenter=0.1665, yCenter=0.0719, xDir=1.0000, yDir=0.0000, radius=0.0381, clockwise=False, isConstruction=True);DiameterConstraint(references=(21,), length=0.0762 METER);22:SN_Center;SubnodeConstraint(references=(22, 21));23:Line(dirX=-0.5547, dirY=-0.8321, pntX=0.1602, pntY=0.0625, startParam=-0.0113, endParam=0.0141, isConstruction=True);PerpendicularConstraint(references=(23, 7));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));MidpointConstraint(references=(25, 7));26:Line(dirX=0.8544, dirY=-0.5196, pntX=-0.0936, pntY=0.0272, startParam=-0.0889, endParam=0.0941, isConstruction=True);TangentConstraint(references=(26, 17));TangentConstraint(references=(26, 13));27:SN_Start;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 13));28:SN_End;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 17));29:Line(dirX=1.0000, dirY=-0.0000, pntX=0.1143, pntY=-0.0254, startParam=-0.1143, endParam=0.1143, isConstruction=True);TangentConstraint(references=(29, 15));30:SN_Start;SubnodeConstraint(references=(30, 29));CoincidentConstraint(references=(30, 17));VerticalConstraint(references=(30, 0));31:SN_End;SubnodeConstraint(references=(31, 29));CoincidentConstraint(references=(31, 15));32:Line(dirX=-0.5465, dirY=0.8374, pntX=0.2261, pntY=0.0503, startParam=-0.0435, endParam=0.0507, isConstruction=True);TangentConstraint(references=(32, 21));TangentConstraint(references=(32, 15));33:SN_Start;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 15));34:SN_End;SubnodeConstraint(references=(34, 32));CoincidentConstraint(references=(34, 21));35:Line(dirX=-0.9832, dirY=0.1824, pntX=0.1292, pntY=0.1176, startParam=-0.0450, endParam=0.0492, isConstruction=True);TangentConstraint(references=(35, 19));TangentConstraint(references=(35, 21));36:SN_Start;SubnodeConstraint(references=(36, 35));CoincidentConstraint(references=(36, 21));37:SN_End;SubnodeConstraint(references=(37, 35));CoincidentConstraint(references=(37, 19));38:Line(dirX=-0.9994, dirY=0.0333, pntX=-0.0390, pntY=0.1309, startParam=-0.1162, endParam=0.1123, isConstruction=True);TangentConstraint(references=(38, 13));TangentConstraint(references=(38, 19));39:SN_Start;SubnodeConstraint(references=(39, 38));CoincidentConstraint(references=(39, 19));40:SN_End;SubnodeConstraint(references=(40, 38));CoincidentConstraint(references=(40, 13));41:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape does the middle object resemble consisting of dashed lines?",
  "fcstd_file": "2D_0228.FCStd",
  "isconstruction_file": "2D_0228_isconstruction.json"
}