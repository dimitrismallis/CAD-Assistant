{
  "pid": 472,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Triangle",
    "B": "Rectangle",
    "C": "Trapezoid",
    "D": "Circle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0209, startParam=-0.0209, endParam=0.0191, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0100, startParam=-0.0100, endParam=0.0100, isConstruction=True);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 2));6:SN_End;SubnodeConstraint(references=(6, 4));MidpointConstraint(references=(6, 1));7:Line(dirX=1.0000, dirY=0.0000, pntX=0.0181, pntY=0.0400, startParam=-0.0181, endParam=-0.0035, isConstruction=True);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=1.0000, dirY=0.0000, pntX=0.0171, pntY=0.0200, startParam=-0.0171, endParam=-0.0006, isConstruction=True);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 6));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=0.0185, pntY=0.0000, startParam=-0.0185, endParam=-0.0000, isConstruction=True);HorizontalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 2));15:SN_End;SubnodeConstraint(references=(15, 13));16:Arc(xCenter=1.1362, yCenter=0.1292, xDir=1.0000, yDir=0.0000, radius=1.1251, startParam=-3.0623, endParam=-3.0265, clockwise=False, isConstruction=False);17:SN_Center;SubnodeConstraint(references=(17, 16));18:SN_Start;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 9));19:SN_End;SubnodeConstraint(references=(19, 16));CoincidentConstraint(references=(19, 15));20:Line(dirX=1.0000, dirY=0.0000, pntX=0.0073, pntY=0.0400, startParam=-0.0073, endParam=0.0073, isConstruction=False);21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 3));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 9));23:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0092, pntY=0.0000, startParam=-0.0092, endParam=0.0092, isConstruction=False);24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 15));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 2));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the CAD object in the image?",
  "fcstd_file": "2D_0472.FCStd",
  "isconstruction_file": "2D_0472_isconstruction.json"
}