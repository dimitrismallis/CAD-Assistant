{
  "pid": 493,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Square",
    "D": "Trapezoid"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=-1.0789, startParam=-1.0789, endParam=1.0039, isConstruction=True);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.1529, pntY=-2.0828, startParam=-0.1529, endParam=0.1519, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));VerticalConstraint(references=(5, 0));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0964, pntY=-2.0828, startParam=-0.0964, endParam=0.2084, isConstruction=True);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 3));9:SN_End;SubnodeConstraint(references=(9, 7));10:Circle(xCenter=-0.3048, yCenter=-2.0828, xDir=1.0000, yDir=0.0000, radius=0.0127, clockwise=False, isConstruction=False);DiameterConstraint(references=(10,), length=0.0254 METER);11:SN_Center;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:Circle(xCenter=0.3048, yCenter=-2.0828, xDir=1.0000, yDir=0.0000, radius=0.0127, clockwise=False, isConstruction=False);EqualConstraint(references=(12, 10));13:SN_Center;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 6));14:Line(dirX=-0.4462, dirY=0.8949, pntX=-0.3405, pntY=-2.0112, startParam=-0.0800, endParam=0.0978, isConstruction=True);15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 9));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=1.0000, dirY=0.0000, pntX=0.0017, pntY=-1.9237, startParam=-0.3858, endParam=0.3824, isConstruction=True);PerpendicularConstraint(references=(17, 1));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 17));20:Line(dirX=-0.4462, dirY=-0.8949, pntX=0.3448, pntY=-2.0025, startParam=-0.0881, endParam=0.0897, isConstruction=True);21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 6));23:Circle(xCenter=-0.3841, yCenter=-1.9237, xDir=1.0000, yDir=0.0000, radius=0.0127, clockwise=False, isConstruction=False);24:SN_Center;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 16));25:Circle(xCenter=0.3841, yCenter=-1.9237, xDir=1.0000, yDir=0.0000, radius=0.0127, clockwise=False, isConstruction=False);EqualConstraint(references=(25, 23));EqualConstraint(references=(25, 12));26:SN_Center;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 19));27:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What type of geometric shape is primarily used in the base of the CAD object?",
  "fcstd_file": "2D_0493.FCStd",
  "isconstruction_file": "2D_0493_isconstruction.json"
}