{
  "pid": 507,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Rectangle",
    "B": "Triangle",
    "C": "Circle",
    "D": "Semi-circle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0513, pntY=0.0053, startParam=-0.0311, endParam=0.0311, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0035, pntY=-0.0257, startParam=-0.0548, endParam=0.0548, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0583, pntY=0.0053, startParam=-0.0311, endParam=0.0311, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));HorizontalConstraint(references=(9, 2));10:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0408, pntY=0.0364, startParam=-0.0175, endParam=0.0175, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0346, pntY=0.0364, startParam=-0.0168, endParam=0.0168, isConstruction=False);PerpendicularConstraint(references=(13, 1));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 2));15:SN_End;SubnodeConstraint(references=(15, 13));16:Arc(xCenter=0.0028, yCenter=0.0366, xDir=1.0000, yDir=0.0000, radius=0.0206, startParam=-3.1314, endParam=-0.0101, clockwise=False, isConstruction=False);17:SN_Center;SubnodeConstraint(references=(17, 16));18:SN_Start;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 15));19:SN_End;SubnodeConstraint(references=(19, 16));CoincidentConstraint(references=(19, 12));20:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0150, pntY=0.0364, startParam=-0.0028, endParam=0.0028, isConstruction=False);HorizontalConstraint(references=(20,));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 15));22:SN_End;SubnodeConstraint(references=(22, 20));23:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0202, pntY=0.0364, startParam=-0.0031, endParam=0.0031, isConstruction=False);HorizontalConstraint(references=(23,));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 12));25:SN_End;SubnodeConstraint(references=(25, 23));26:Arc(xCenter=0.0024, yCenter=0.0366, xDir=1.0000, yDir=0.0000, radius=0.0147, startParam=-3.1282, endParam=-0.0134, clockwise=False, isConstruction=False);27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 22));29:SN_End;SubnodeConstraint(references=(29, 26));CoincidentConstraint(references=(29, 25));30:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What geometric shape is the cutout at the top of the object?",
  "fcstd_file": "2D_0507.FCStd",
  "isconstruction_file": "2D_0507_isconstruction.json"
}