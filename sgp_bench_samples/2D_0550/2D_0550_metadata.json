{
  "pid": 550,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Three",
    "B": "Four",
    "C": "Five",
    "D": "Six"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.0651, dirY=0.9979, pntX=-0.0337, pntY=0.5165, startParam=-0.5176, endParam=0.5010, isConstruction=True);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.4169, pntY=1.0164, startParam=-0.4832, endParam=0.5709, isConstruction=True);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-0.6970, dirY=-0.7171, pntX=0.4939, pntY=0.5082, startParam=-0.7087, endParam=0.7087, isConstruction=True);8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 2));10:Arc(xCenter=-0.0663, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.1016, startParam=1.5708, endParam=-3.0765, clockwise=False, isConstruction=False);DiameterConstraint(references=(10,), length=0.2032 METER);11:SN_Center;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_Start;SubnodeConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 10));14:Circle(xCenter=-0.0663, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.0635, clockwise=False, isConstruction=False);DiameterConstraint(references=(14,), length=0.127 METER);15:SN_Center;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 5));16:Circle(xCenter=-0.0663, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=False);DiameterConstraint(references=(16,), length=0.0508 METER);17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 11));18:Arc(xCenter=0.9878, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.1016, startParam=-0.7711, endParam=1.5708, clockwise=False, isConstruction=False);DiameterConstraint(references=(18,), length=0.2032 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 6));20:SN_Start;SubnodeConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 18));22:Circle(xCenter=0.9878, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.0635, clockwise=False, isConstruction=False);DiameterConstraint(references=(22,), length=0.127 METER);23:SN_Center;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 8));24:Circle(xCenter=0.9878, yCenter=1.0164, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=False);DiameterConstraint(references=(24,), length=0.0508 METER);25:SN_Center;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 19));26:Arc(xCenter=-0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.1016, startParam=-3.0765, endParam=-0.7711, clockwise=False, isConstruction=False);DiameterConstraint(references=(26,), length=0.2032 METER);27:SN_Center;SubnodeConstraint(references=(27, 26));CoincidentConstraint(references=(27, 2));28:SN_Start;SubnodeConstraint(references=(28, 26));29:SN_End;SubnodeConstraint(references=(29, 26));30:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0635, clockwise=False, isConstruction=False);DiameterConstraint(references=(30,), length=0.127 METER);31:SN_Center;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 9));32:Circle(xCenter=-0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0254, clockwise=False, isConstruction=False);DiameterConstraint(references=(32,), length=0.0508 METER);33:SN_Center;SubnodeConstraint(references=(33, 32));CoincidentConstraint(references=(33, 27));34:Line(dirX=-1.0000, dirY=0.0000, pntX=0.4707, pntY=1.1180, startParam=-0.5171, endParam=0.5370, isConstruction=False);TangentConstraint(references=(34, 10));TangentConstraint(references=(34, 18));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 21));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 12));37:Line(dirX=0.0651, dirY=-0.9979, pntX=-0.1339, pntY=0.4926, startParam=-0.5182, endParam=0.5003, isConstruction=False);TangentConstraint(references=(37, 26));TangentConstraint(references=(37, 10));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 13));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 28));40:Line(dirX=-0.6970, dirY=-0.7171, pntX=0.5639, pntY=0.4345, startParam=-0.7127, endParam=0.7046, isConstruction=False);TangentConstraint(references=(40, 26));TangentConstraint(references=(40, 18));41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 20));42:SN_End;SubnodeConstraint(references=(42, 40));CoincidentConstraint(references=(42, 29));43:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many sides does the shape in the center have?",
  "fcstd_file": "2D_0550.FCStd",
  "isconstruction_file": "2D_0550_isconstruction.json"
}