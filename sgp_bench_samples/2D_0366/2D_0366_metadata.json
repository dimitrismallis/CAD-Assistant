{
  "pid": 366,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Horizontal",
    "B": "Vertical",
    "C": "Diagonal",
    "D": "Curved"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0025, startParam=-0.0025, endParam=0.0295, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0027, pntY=0.0320, startParam=-0.0027, endParam=0.0293, isConstruction=False);HorizontalConstraint(references=(4,));EqualConstraint(references=(4, 1));5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0320, pntY=0.0291, startParam=-0.0029, endParam=0.0291, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));HorizontalConstraint(references=(9, 0));10:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0048, pntY=0.0000, startParam=-0.0272, endParam=-0.0252, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=1.0000, pntX=0.0300, pntY=0.0019, startParam=-0.0019, endParam=0.0281, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0031, pntY=0.0300, startParam=-0.0269, endParam=0.0011, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0020, pntY=0.0019, startParam=-0.0281, endParam=0.0019, isConstruction=False);VerticalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));HorizontalConstraint(references=(21, 0));22:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0010, pntY=0.0000, startParam=-0.0010, endParam=0.0010, isConstruction=False);EqualConstraint(references=(22, 10));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 2));25:Line(dirX=0.0000, dirY=1.0000, pntX=0.0020, pntY=0.0044, startParam=0.0256, endParam=0.0276, isConstruction=True);VerticalConstraint(references=(25,));EqualConstraint(references=(25, 22));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 18));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 4));28:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the orientation of the top line in the CAD object?",
  "fcstd_file": "2D_0366.FCStd",
  "isconstruction_file": "2D_0366_isconstruction.json"
}