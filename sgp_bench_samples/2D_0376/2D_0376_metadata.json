{
  "pid": 376,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "Square",
    "B": "Circle",
    "C": "Triangle",
    "D": "U-shaped"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Arc(xCenter=0.0000, yCenter=0.4938, xDir=1.0000, yDir=0.0000, radius=0.0122, startParam=-3.1416, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(1, 0));2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_Start;SubnodeConstraint(references=(3, 1));4:SN_End;SubnodeConstraint(references=(4, 1));HorizontalConstraint(references=(4, 2));CoincidentConstraint(references=(4, 0));5:Line(dirX=-0.0000, dirY=1.0000, pntX=-0.0122, pntY=0.5129, startParam=-0.0192, endParam=0.0192, isConstruction=False);VerticalConstraint(references=(5,));6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 3));HorizontalConstraint(references=(6, 4));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0276, pntY=0.5321, startParam=-0.0154, endParam=0.0154, isConstruction=False);HorizontalConstraint(references=(8,));9:SN_Start;SubnodeConstraint(references=(9, 8));CoincidentConstraint(references=(9, 7));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0429, pntY=0.4885, startParam=-0.0436, endParam=0.0436, isConstruction=False);VerticalConstraint(references=(11,));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 10));13:SN_End;SubnodeConstraint(references=(13, 11));14:Line(dirX=1.0000, dirY=0.0000, pntX=0.0074, pntY=0.4449, startParam=-0.0504, endParam=0.0355, isConstruction=False);PerpendicularConstraint(references=(14, 11));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 13));16:SN_End;SubnodeConstraint(references=(16, 14));17:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0429, pntY=0.4900, startParam=-0.0451, endParam=0.0421, isConstruction=False);ParallelConstraint(references=(17, 5));ParallelConstraint(references=(17, 11));18:SN_Start;SubnodeConstraint(references=(18, 17));CoincidentConstraint(references=(18, 16));19:SN_End;SubnodeConstraint(references=(19, 17));20:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0328, pntY=0.5321, startParam=-0.0102, endParam=0.0206, isConstruction=False);PerpendicularConstraint(references=(20, 17));CoincidentConstraint(references=(20, 8));EqualConstraint(references=(20, 8));21:SN_Start;SubnodeConstraint(references=(21, 20));CoincidentConstraint(references=(21, 19));22:SN_End;SubnodeConstraint(references=(22, 20));23:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0122, pntY=0.5134, startParam=-0.0187, endParam=0.0197, isConstruction=False);VerticalConstraint(references=(23,));ParallelConstraint(references=(23, 17));24:SN_Start;SubnodeConstraint(references=(24, 23));CoincidentConstraint(references=(24, 22));25:SN_End;SubnodeConstraint(references=(25, 23));CoincidentConstraint(references=(25, 4));26:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the main cutout in the center of the object?",
  "fcstd_file": "2D_0376.FCStd",
  "isconstruction_file": "2D_0376_isconstruction.json"
}