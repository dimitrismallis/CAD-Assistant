{
  "pid": 220,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0040, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.008 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0000, yCenter=0.0000, xDir=1.0000, yDir=0.0000, radius=0.0050, clockwise=False, isConstruction=True);DiameterConstraint(references=(3,), length=0.01 METER);4:SN_Center;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=0.0000, startParam=-0.0040, endParam=0.0040, isConstruction=False);6:SN_Start;SubnodeConstraint(references=(6, 5));CoincidentConstraint(references=(6, 1));HorizontalConstraint(references=(6, 0));7:SN_End;SubnodeConstraint(references=(7, 5));8:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0000, pntY=-0.0129, startParam=-0.0040, endParam=0.0040, isConstruction=False);ParallelConstraint(references=(8, 5));HorizontalConstraint(references=(8,));DistanceConstraint(references=(8, 3), direction=MINIMUM, length=0.0179 METER, halfSpace0=LEFT, halfSpace1=RIGHT);9:SN_Start;SubnodeConstraint(references=(9, 8));10:SN_End;SubnodeConstraint(references=(10, 8));11:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0040, pntY=-0.0066, startParam=-0.0066, endParam=0.0063, isConstruction=False);PerpendicularConstraint(references=(11, 8));12:SN_Start;SubnodeConstraint(references=(12, 11));CoincidentConstraint(references=(12, 6));13:SN_End;SubnodeConstraint(references=(13, 11));CoincidentConstraint(references=(13, 9));14:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0040, pntY=-0.0066, startParam=-0.0066, endParam=0.0063, isConstruction=False);ParallelConstraint(references=(14, 11));15:SN_Start;SubnodeConstraint(references=(15, 14));CoincidentConstraint(references=(15, 7));16:SN_End;SubnodeConstraint(references=(16, 14));CoincidentConstraint(references=(16, 10));17:Point(x=0.0000, y=-0.0064, isConstruction=True);MidpointConstraint(references=(17, 9, 7));MidpointConstraint(references=(17, 10, 6));VerticalConstraint(references=(17, 0));18:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0054, pntY=-0.0129, startParam=-0.0014, endParam=0.0021, isConstruction=False);19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 10));20:SN_End;SubnodeConstraint(references=(20, 18));21:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0054, pntY=-0.0049, startParam=-0.0014, endParam=0.0021, isConstruction=False);ParallelConstraint(references=(21, 18));HorizontalConstraint(references=(21,));22:SN_Start;SubnodeConstraint(references=(22, 21));23:SN_End;SubnodeConstraint(references=(23, 21));24:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0040, pntY=-0.0095, startParam=-0.0034, endParam=0.0046, isConstruction=False);PerpendicularConstraint(references=(24, 21));25:SN_Start;SubnodeConstraint(references=(25, 24));CoincidentConstraint(references=(25, 19));26:SN_End;SubnodeConstraint(references=(26, 24));CoincidentConstraint(references=(26, 22));27:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0075, pntY=-0.0095, startParam=-0.0034, endParam=0.0046, isConstruction=False);ParallelConstraint(references=(27, 24));28:SN_Start;SubnodeConstraint(references=(28, 27));CoincidentConstraint(references=(28, 20));29:SN_End;SubnodeConstraint(references=(29, 27));CoincidentConstraint(references=(29, 23));30:Line(dirX=1.0000, dirY=0.0000, pntX=0.0058, pntY=-0.0129, startParam=-0.0018, endParam=0.0017, isConstruction=False);31:SN_Start;SubnodeConstraint(references=(31, 30));CoincidentConstraint(references=(31, 9));32:SN_End;SubnodeConstraint(references=(32, 30));33:Line(dirX=1.0000, dirY=0.0000, pntX=0.0058, pntY=-0.0049, startParam=-0.0018, endParam=0.0017, isConstruction=False);ParallelConstraint(references=(33, 30));HorizontalConstraint(references=(33,));EqualConstraint(references=(33, 21));34:SN_Start;SubnodeConstraint(references=(34, 33));35:SN_End;SubnodeConstraint(references=(35, 33));36:Line(dirX=0.0000, dirY=1.0000, pntX=0.0040, pntY=-0.0095, startParam=-0.0034, endParam=0.0046, isConstruction=False);PerpendicularConstraint(references=(36, 33));37:SN_Start;SubnodeConstraint(references=(37, 36));CoincidentConstraint(references=(37, 31));38:SN_End;SubnodeConstraint(references=(38, 36));CoincidentConstraint(references=(38, 34));39:Line(dirX=0.0000, dirY=1.0000, pntX=0.0075, pntY=-0.0083, startParam=-0.0046, endParam=0.0034, isConstruction=False);ParallelConstraint(references=(39, 36));EqualConstraint(references=(39, 27));DistanceConstraint(references=(39, 27), direction=MINIMUM, length=0.015 METER, halfSpace0=RIGHT, halfSpace1=LEFT);40:SN_Start;SubnodeConstraint(references=(40, 39));CoincidentConstraint(references=(40, 32));41:SN_End;SubnodeConstraint(references=(41, 39));CoincidentConstraint(references=(41, 35));42:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many circles are visible in the CAD object?",
  "fcstd_file": "2D_0220.FCStd",
  "isconstruction_file": "2D_0220_isconstruction.json"
}