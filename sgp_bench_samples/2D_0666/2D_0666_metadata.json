{
  "pid": 666,
  "subject": "2D",
  "answer": "C",
  "options": {
    "A": "Two",
    "B": "Three",
    "C": "Four",
    "D": "Five"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0293, pntY=-0.0369, startParam=-0.0014, endParam=0.0021, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0293, pntY=-0.0373, startParam=-0.0014, endParam=0.0021, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0307, pntY=-0.0359, startParam=0.0009, endParam=0.0013, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 5));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0273, pntY=-0.0359, startParam=0.0010, endParam=0.0014, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 6));13:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0301, pntY=-0.0393, startParam=-0.0007, endParam=0.0028, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0293, pntY=-0.0397, startParam=-0.0015, endParam=0.0020, isConstruction=False);ParallelConstraint(references=(16, 13));HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0307, pntY=-0.0394, startParam=-0.0000, endParam=0.0004, isConstruction=False);PerpendicularConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 14));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 17));22:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0273, pntY=-0.0394, startParam=-0.0000, endParam=0.0004, isConstruction=False);ParallelConstraint(references=(22, 19));EqualConstraint(references=(22, 10));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 15));VerticalConstraint(references=(23, 6));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 18));25:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0236, pntY=-0.0369, startParam=-0.0021, endParam=0.0014, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0236, pntY=-0.0373, startParam=-0.0021, endParam=0.0014, isConstruction=False);ParallelConstraint(references=(28, 25));HorizontalConstraint(references=(28,));EqualConstraint(references=(28, 4));29:SN_Start;SubnodeConstraint(references=(29, 28));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0257, pntY=-0.0369, startParam=-0.0000, endParam=0.0004, isConstruction=False);PerpendicularConstraint(references=(31, 28));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 26));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 29));HorizontalConstraint(references=(33, 6));34:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0223, pntY=-0.0357, startParam=0.0012, endParam=0.0016, isConstruction=False);ParallelConstraint(references=(34, 31));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 27));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 30));37:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0245, pntY=-0.0393, startParam=-0.0013, endParam=0.0022, isConstruction=False);EqualConstraint(references=(37, 13));EqualConstraint(references=(37, 28));38:SN_Start;SubnodeConstraint(references=(38, 37));VerticalConstraint(references=(38, 33));39:SN_End;SubnodeConstraint(references=(39, 37));40:Line(dirX=1.0000, dirY=0.0000, pntX=-0.0238, pntY=-0.0397, startParam=-0.0020, endParam=0.0015, isConstruction=False);ParallelConstraint(references=(40, 37));HorizontalConstraint(references=(40,));41:SN_Start;SubnodeConstraint(references=(41, 40));HorizontalConstraint(references=(41, 18));42:SN_End;SubnodeConstraint(references=(42, 40));43:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0257, pntY=-0.0402, startParam=-0.0009, endParam=-0.0005, isConstruction=False);PerpendicularConstraint(references=(43, 40));EqualConstraint(references=(43, 22));44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 38));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 41));46:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0223, pntY=-0.0390, startParam=0.0004, endParam=0.0008, isConstruction=False);ParallelConstraint(references=(46, 43));EqualConstraint(references=(46, 34));47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 39));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 42));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many objects are displayed in the image?",
  "fcstd_file": "2D_0666.FCStd",
  "isconstruction_file": "2D_0666_isconstruction.json"
}