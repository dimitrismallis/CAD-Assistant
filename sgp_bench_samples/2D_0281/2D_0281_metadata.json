{
  "pid": 281,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "vertically and horizontally",
    "B": "No",
    "C": "horizontally",
    "D": "vertically"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Circle(xCenter=0.0020, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0089, clockwise=False, isConstruction=False);DiameterConstraint(references=(1,), length=0.01778 METER);2:SN_Center;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:Circle(xCenter=0.0020, yCenter=-0.0000, xDir=1.0000, yDir=0.0000, radius=0.0063, clockwise=False, isConstruction=False);DistanceConstraint(references=(3, 1), direction=MINIMUM, length=0.00254 METER, halfSpace0=RIGHT, halfSpace1=LEFT);4:SN_Center;SubnodeConstraint(references=(4, 3));CoincidentConstraint(references=(4, 2));5:Circle(xCenter=0.0001, yCenter=-0.0019, xDir=1.0000, yDir=0.0000, radius=0.0013, clockwise=False, isConstruction=False);6:SN_Center;SubnodeConstraint(references=(6, 5));7:Circle(xCenter=0.0039, yCenter=-0.0019, xDir=1.0000, yDir=0.0000, radius=0.0013, clockwise=False, isConstruction=False);DiameterConstraint(references=(7,), length=0.00254 METER);8:SN_Center;SubnodeConstraint(references=(8, 7));9:Circle(xCenter=0.0039, yCenter=0.0019, xDir=1.0000, yDir=0.0000, radius=0.0013, clockwise=False, isConstruction=False);EqualConstraint(references=(9, 7));EqualConstraint(references=(9, 5));10:SN_Center;SubnodeConstraint(references=(10, 9));11:Circle(xCenter=0.0001, yCenter=0.0019, xDir=1.0000, yDir=0.0000, radius=0.0013, clockwise=False, isConstruction=False);EqualConstraint(references=(11, 9));12:SN_Center;SubnodeConstraint(references=(12, 11));13:Line(dirX=0.7071, dirY=0.7071, pntX=0.0015, pntY=-0.0005, startParam=-0.0019, endParam=0.0008, isConstruction=True);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 6));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 0));16:Line(dirX=0.7071, dirY=0.7071, pntX=0.0024, pntY=0.0004, startParam=-0.0005, endParam=0.0021, isConstruction=True);EqualConstraint(references=(16, 13));ParallelConstraint(references=(16, 13));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 10));19:Line(dirX=1.0000, dirY=0.0000, pntX=0.0030, pntY=-0.0000, startParam=-0.0009, endParam=0.0004, isConstruction=True);CoincidentConstraint(references=(19, 0));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 2));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0020, pntY=0.0019, startParam=-0.0019, endParam=0.0019, isConstruction=True);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 10));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 12));25:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0039, pntY=0.0001, startParam=-0.0018, endParam=0.0020, isConstruction=True);EqualConstraint(references=(25, 22));PerpendicularConstraint(references=(25, 19));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 18));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 8));28:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0001, pntY=-0.0000, startParam=-0.0019, endParam=0.0019, isConstruction=True);EqualConstraint(references=(28, 25));PerpendicularConstraint(references=(28, 22));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 6));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 24));31:Line(dirX=1.0000, dirY=0.0000, pntX=0.0020, pntY=-0.0019, startParam=-0.0019, endParam=0.0019, isConstruction=True);EqualConstraint(references=(31, 25));32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 29));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 8));34:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Are the inner circles equally spaced from each other?",
  "fcstd_file": "2D_0281.FCStd",
  "isconstruction_file": "2D_0281_isconstruction.json"
}