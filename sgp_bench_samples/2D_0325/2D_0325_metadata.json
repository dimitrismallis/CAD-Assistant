{
  "pid": 325,
  "subject": "2D",
  "answer": "B",
  "options": {
    "A": "Circle",
    "B": "Triangle",
    "C": "Rectangle",
    "D": "Hexagon"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0064, pntY=0.0290, startParam=-0.0210, endParam=0.0020, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.1386, dirY=-0.9903, pntX=0.0068, pntY=0.0227, startParam=-0.0033, endParam=0.0018, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 1));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0068, pntY=0.0210, startParam=-0.0002, endParam=0.0005, isConstruction=False);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 1));10:Line(dirX=0.1386, dirY=-0.9903, pntX=0.0067, pntY=0.0157, startParam=-0.0023, endParam=0.0027, isConstruction=False);EqualConstraint(references=(10, 4));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 1));12:SN_End;SubnodeConstraint(references=(12, 10));VerticalConstraint(references=(12, 6));13:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0067, pntY=0.0130, startParam=-0.0003, endParam=0.0004, isConstruction=False);HorizontalConstraint(references=(13,));EqualConstraint(references=(13, 7));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 12));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 1));16:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0028, pntY=0.0310, startParam=-0.0035, endParam=0.0028, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 3));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0290, startParam=-0.0020, endParam=0.0210, isConstruction=False);VerticalConstraint(references=(19,));CoincidentConstraint(references=(19, 0));20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));22:Line(dirX=1.0000, dirY=0.0000, pntX=0.0056, pntY=0.0080, startParam=-0.0056, endParam=0.0007, isConstruction=False);HorizontalConstraint(references=(22,));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 2));25:Line(dirX=1.0000, dirY=0.0000, pntX=0.0209, pntY=0.0080, startParam=-0.0049, endParam=0.0041, isConstruction=False);HorizontalConstraint(references=(25,));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 0));27:SN_End;SubnodeConstraint(references=(27, 25));28:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0250, pntY=0.0046, startParam=-0.0034, endParam=0.0018, isConstruction=False);VerticalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 27));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=-0.8660, dirY=0.5000, pntX=0.0205, pntY=0.0054, startParam=-0.0052, endParam=0.0052, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 26));34:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the shape of the smaller object in the image?",
  "fcstd_file": "2D_0325.FCStd",
  "isconstruction_file": "2D_0325_isconstruction.json"
}