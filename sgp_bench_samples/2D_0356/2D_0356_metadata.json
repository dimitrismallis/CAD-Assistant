{
  "pid": 356,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Four",
    "D": "Three"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0192, startParam=-0.0192, endParam=-0.0019, isConstruction=False);VerticalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0013, pntY=0.0138, startParam=0.0035, endParam=0.0052, isConstruction=False);VerticalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0242, pntY=0.0000, startParam=-0.0242, endParam=0.0038, isConstruction=False);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 2));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0006, pntY=0.0173, startParam=-0.0006, endParam=0.0006, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 3));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 5));13:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0800, pntY=0.0134, startParam=0.0056, endParam=0.0111, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0406, pntY=0.0190, startParam=-0.0393, endParam=-0.0313, isConstruction=False);HorizontalConstraint(references=(16,));CoincidentConstraint(references=(16, 6));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 6));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0433, pntY=0.0245, startParam=-0.0340, endParam=0.0367, isConstruction=False);ParallelConstraint(references=(19, 16));20:SN_Start;SubnodeConstraint(references=(20, 19));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 15));22:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0280, pntY=0.0134, startParam=-0.0134, endParam=0.0056, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 9));24:SN_End;SubnodeConstraint(references=(24, 22));25:Line(dirX=-1.0000, dirY=-0.0000, pntX=-0.0242, pntY=0.0190, startParam=0.0038, endParam=0.0558, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 24));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 14));28:Line(dirX=0.0000, dirY=1.0000, pntX=-0.0093, pntY=0.0218, startParam=-0.0028, endParam=0.0028, isConstruction=False);VerticalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 18));30:SN_End;SubnodeConstraint(references=(30, 28));CoincidentConstraint(references=(30, 20));31:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many distinct steps or levels does the CAD object have?",
  "fcstd_file": "2D_0356.FCStd",
  "isconstruction_file": "2D_0356_isconstruction.json"
}