{
  "pid": 608,
  "subject": "2D",
  "answer": "D",
  "options": {
    "A": "One",
    "B": "Two",
    "C": "Three",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0178, pntY=0.0203, startParam=-0.0112, endParam=0.0112, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Line(dirX=-0.7311, dirY=-0.6823, pntX=0.0266, pntY=0.0182, startParam=-0.0032, endParam=0.0020, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));CoincidentConstraint(references=(5, 3));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0215, pntY=0.0168, startParam=-0.0036, endParam=0.0111, isConstruction=False);HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.7311, dirY=0.6823, pntX=0.0091, pntY=0.0180, startParam=-0.0018, endParam=0.0034, isConstruction=False);11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 2));13:Line(dirX=0.7557, dirY=0.6549, pntX=0.0087, pntY=0.0057, startParam=-0.0027, endParam=0.0023, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 0));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0774, pntY=0.0072, startParam=-0.0670, endParam=-0.0523, isConstruction=False);HorizontalConstraint(references=(16,));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=0.7557, dirY=-0.6549, pntX=0.0270, pntY=0.0056, startParam=-0.0025, endParam=0.0026, isConstruction=False);20:SN_Start;SubnodeConstraint(references=(20, 19));CoincidentConstraint(references=(20, 18));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 0));22:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0178, pntY=0.0039, startParam=-0.0112, endParam=0.0112, isConstruction=False);23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 21));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 14));25:Line(dirX=1.0000, dirY=0.0021, pntX=0.0072, pntY=0.0072, startParam=-0.0006, endParam=0.0032, isConstruction=False);26:SN_Start;SubnodeConstraint(references=(26, 25));VerticalConstraint(references=(26, 14));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 15));28:Line(dirX=1.0000, dirY=0.0000, pntX=0.0258, pntY=0.0072, startParam=-0.0006, endParam=0.0032, isConstruction=False);HorizontalConstraint(references=(28,));29:SN_Start;SubnodeConstraint(references=(29, 28));CoincidentConstraint(references=(29, 18));30:SN_End;SubnodeConstraint(references=(30, 28));VerticalConstraint(references=(30, 0));31:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0290, pntY=0.0056, startParam=-0.0017, endParam=0.0017, isConstruction=False);32:SN_Start;SubnodeConstraint(references=(32, 31));CoincidentConstraint(references=(32, 30));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 21));34:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0290, pntY=0.0185, startParam=-0.0018, endParam=0.0018, isConstruction=False);VerticalConstraint(references=(34,));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 3));36:SN_End;SubnodeConstraint(references=(36, 34));37:Line(dirX=-0.9999, dirY=0.0110, pntX=0.0283, pntY=0.0167, startParam=-0.0006, endParam=0.0032, isConstruction=False);38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 36));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 6));40:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0098, pntY=0.0168, startParam=-0.0006, endParam=0.0032, isConstruction=False);ParallelConstraint(references=(40, 7));41:SN_Start;SubnodeConstraint(references=(41, 40));CoincidentConstraint(references=(41, 9));42:SN_End;SubnodeConstraint(references=(42, 40));VerticalConstraint(references=(42, 14));43:Line(dirX=0.0000, dirY=1.0000, pntX=0.0066, pntY=0.0185, startParam=-0.0018, endParam=0.0018, isConstruction=False);44:SN_Start;SubnodeConstraint(references=(44, 43));CoincidentConstraint(references=(44, 42));45:SN_End;SubnodeConstraint(references=(45, 43));CoincidentConstraint(references=(45, 2));46:Line(dirX=0.0000, dirY=1.0000, pntX=0.0066, pntY=0.0056, startParam=-0.0016, endParam=0.0016, isConstruction=False);47:SN_Start;SubnodeConstraint(references=(47, 46));CoincidentConstraint(references=(47, 14));48:SN_End;SubnodeConstraint(references=(48, 46));CoincidentConstraint(references=(48, 26));49:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many diagonal lines are present in each object in the image?",
  "fcstd_file": "2D_0608.FCStd",
  "isconstruction_file": "2D_0608_isconstruction.json"
}