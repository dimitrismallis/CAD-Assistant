{
  "pid": 531,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Three",
    "B": "Two",
    "C": "One",
    "D": "Four"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0055, pntY=0.0000, startParam=-0.0663, endParam=0.0663, isConstruction=True);HorizontalConstraint(references=(1,));2:SN_Start;SubnodeConstraint(references=(2, 1));HorizontalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=-0.0000, pntX=0.0081, pntY=0.0100, startParam=-0.0434, endParam=0.0566, isConstruction=False);5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=1.0000, dirY=0.0000, pntX=0.0081, pntY=0.0000, startParam=-0.0434, endParam=0.0566, isConstruction=False);ParallelConstraint(references=(7, 4));HorizontalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));CoincidentConstraint(references=(9, 1));10:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0353, pntY=0.0050, startParam=-0.0050, endParam=0.0050, isConstruction=False);PerpendicularConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 5));12:SN_End;SubnodeConstraint(references=(12, 10));CoincidentConstraint(references=(12, 8));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0647, pntY=0.0050, startParam=-0.0050, endParam=0.0050, isConstruction=False);ParallelConstraint(references=(13, 10));14:SN_Start;SubnodeConstraint(references=(14, 13));CoincidentConstraint(references=(14, 6));15:SN_End;SubnodeConstraint(references=(15, 13));CoincidentConstraint(references=(15, 9));16:Line(dirX=1.0000, dirY=0.0000, pntX=0.0671, pntY=0.0050, startParam=-0.0025, endParam=0.0075, isConstruction=False);17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 13));18:SN_End;SubnodeConstraint(references=(18, 16));19:Line(dirX=1.0000, dirY=0.0000, pntX=0.0671, pntY=0.0000, startParam=-0.0025, endParam=0.0075, isConstruction=False);ParallelConstraint(references=(19, 16));HorizontalConstraint(references=(19,));20:SN_Start;SubnodeConstraint(references=(20, 19));21:SN_End;SubnodeConstraint(references=(21, 19));CoincidentConstraint(references=(21, 1));22:Line(dirX=-0.0000, dirY=-1.0000, pntX=0.0647, pntY=0.0002, startParam=-0.0048, endParam=0.0002, isConstruction=False);PerpendicularConstraint(references=(22, 19));23:SN_Start;SubnodeConstraint(references=(23, 22));CoincidentConstraint(references=(23, 17));24:SN_End;SubnodeConstraint(references=(24, 22));CoincidentConstraint(references=(24, 20));25:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0747, pntY=0.0021, startParam=-0.0029, endParam=0.0021, isConstruction=False);ParallelConstraint(references=(25, 22));26:SN_Start;SubnodeConstraint(references=(26, 25));CoincidentConstraint(references=(26, 18));27:SN_End;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 21));28:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0519, pntY=0.0050, startParam=-0.0166, endParam=-0.0066, isConstruction=False);EqualConstraint(references=(28, 16));29:SN_Start;SubnodeConstraint(references=(29, 28));MidpointConstraint(references=(29, 10));30:SN_End;SubnodeConstraint(references=(30, 28));31:Line(dirX=-1.0000, dirY=0.0000, pntX=-0.0519, pntY=0.0000, startParam=-0.0166, endParam=-0.0066, isConstruction=False);ParallelConstraint(references=(31, 28));HorizontalConstraint(references=(31,));32:SN_Start;SubnodeConstraint(references=(32, 31));33:SN_End;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 1));34:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0353, pntY=0.0012, startParam=-0.0038, endParam=0.0012, isConstruction=False);PerpendicularConstraint(references=(34, 31));35:SN_Start;SubnodeConstraint(references=(35, 34));CoincidentConstraint(references=(35, 29));36:SN_End;SubnodeConstraint(references=(36, 34));CoincidentConstraint(references=(36, 32));37:Line(dirX=0.0000, dirY=-1.0000, pntX=-0.0453, pntY=0.0012, startParam=-0.0038, endParam=0.0012, isConstruction=False);ParallelConstraint(references=(37, 34));EqualConstraint(references=(37, 25));38:SN_Start;SubnodeConstraint(references=(38, 37));CoincidentConstraint(references=(38, 30));39:SN_End;SubnodeConstraint(references=(39, 37));CoincidentConstraint(references=(39, 33));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: How many distinct parts or sections can be observed in the CAD object?",
  "fcstd_file": "2D_0531.FCStd",
  "isconstruction_file": "2D_0531_isconstruction.json"
}