{
  "pid": 471,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "L-shaped",
    "B": "T-shaped",
    "C": "I-shaped",
    "D": "O-shaped"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0000, pntY=0.0222, startParam=-0.0222, endParam=0.0137, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));VerticalConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0244, pntY=0.0000, startParam=-0.0159, endParam=0.0201, isConstruction=False);HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0444, pntY=0.0021, startParam=-0.0021, endParam=0.0059, isConstruction=False);VerticalConstraint(references=(7,));8:SN_Start;SubnodeConstraint(references=(8, 7));CoincidentConstraint(references=(8, 6));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-1.0000, dirY=-0.0000, pntX=0.0264, pntY=0.0080, startParam=-0.0180, endParam=0.0134, isConstruction=False);HorizontalConstraint(references=(10,));11:SN_Start;SubnodeConstraint(references=(11, 10));CoincidentConstraint(references=(11, 9));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=1.0000, pntX=0.0080, pntY=0.0241, startParam=-0.0111, endParam=0.0203, isConstruction=False);VerticalConstraint(references=(13,));14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Line(dirX=-1.0000, dirY=0.0000, pntX=0.0021, pntY=0.0444, startParam=-0.0059, endParam=0.0021, isConstruction=False);EqualConstraint(references=(16, 7));17:SN_Start;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 15));18:SN_End;SubnodeConstraint(references=(18, 16));CoincidentConstraint(references=(18, 2));19:Point(x=0.0000, y=0.0000, isConstruction=False);CoincidentConstraint(references=(19, 0));CoincidentConstraint(references=(19, 4));CoincidentConstraint(references=(19, 1));20:Arc(xCenter=0.0085, yCenter=0.0085, xDir=1.0000, yDir=0.0000, radius=0.0085, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(20, 1));TangentConstraint(references=(20, 4));21:SN_Center;SubnodeConstraint(references=(21, 20));22:SN_Start;SubnodeConstraint(references=(22, 20));CoincidentConstraint(references=(22, 3));23:SN_End;SubnodeConstraint(references=(23, 20));CoincidentConstraint(references=(23, 5));24:Point(x=0.0080, y=0.0080, isConstruction=False);CoincidentConstraint(references=(24, 10));CoincidentConstraint(references=(24, 13));25:Arc(xCenter=0.0130, yCenter=0.0130, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(25, 13));TangentConstraint(references=(25, 10));26:SN_Center;SubnodeConstraint(references=(26, 25));27:SN_Start;SubnodeConstraint(references=(27, 25));CoincidentConstraint(references=(27, 14));28:SN_End;SubnodeConstraint(references=(28, 25));CoincidentConstraint(references=(28, 12));29:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What is the general shape of the CAD object in the image?",
  "fcstd_file": "2D_0471.FCStd",
  "isconstruction_file": "2D_0471_isconstruction.json"
}