{
  "pid": 55,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Oval",
    "B": "Rectangle",
    "C": "Triangle",
    "D": "Circle"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=1.0000, dirY=0.0000, pntX=0.0051, pntY=0.0000, startParam=-0.0001, endParam=-0.0001, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));3:SN_End;SubnodeConstraint(references=(3, 1));4:Line(dirX=1.0000, dirY=0.0000, pntX=0.0051, pntY=0.0200, startParam=-0.0001, endParam=-0.0001, isConstruction=False);ParallelConstraint(references=(4, 1));HorizontalConstraint(references=(4,));5:SN_Start;SubnodeConstraint(references=(5, 4));6:SN_End;SubnodeConstraint(references=(6, 4));7:Line(dirX=0.0000, dirY=1.0000, pntX=0.0000, pntY=0.0100, startParam=-0.0050, endParam=0.0050, isConstruction=False);PerpendicularConstraint(references=(7, 4));8:SN_Start;SubnodeConstraint(references=(8, 7));9:SN_End;SubnodeConstraint(references=(9, 7));10:Line(dirX=-0.0000, dirY=1.0000, pntX=0.0100, pntY=0.0100, startParam=-0.0050, endParam=0.0050, isConstruction=False);ParallelConstraint(references=(10, 7));11:SN_Start;SubnodeConstraint(references=(11, 10));12:SN_End;SubnodeConstraint(references=(12, 10));13:Line(dirX=0.0000, dirY=-1.0000, pntX=0.0050, pntY=0.0100, startParam=-0.0100, endParam=0.0100, isConstruction=False);14:SN_Start;SubnodeConstraint(references=(14, 13));15:SN_End;SubnodeConstraint(references=(15, 13));16:Circle(xCenter=0.0050, yCenter=0.0150, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);DiameterConstraint(references=(16,), length=0.003 METER);17:SN_Center;SubnodeConstraint(references=(17, 16));CoincidentConstraint(references=(17, 13));18:Circle(xCenter=0.0050, yCenter=0.0050, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);DiameterConstraint(references=(18,), length=0.003 METER);19:SN_Center;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 13));20:Point(x=0.0000, y=0.0200, isConstruction=False);CoincidentConstraint(references=(20, 7));CoincidentConstraint(references=(20, 4));21:Arc(xCenter=0.0050, yCenter=0.0150, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=1.5708, endParam=3.1416, clockwise=False, isConstruction=False);TangentConstraint(references=(21, 4));TangentConstraint(references=(21, 7));22:SN_Center;SubnodeConstraint(references=(22, 21));23:SN_Start;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 5));24:SN_End;SubnodeConstraint(references=(24, 21));CoincidentConstraint(references=(24, 9));25:Point(x=0.0100, y=0.0200, isConstruction=False);MidpointConstraint(references=(25, 20, 14));CoincidentConstraint(references=(25, 10));CoincidentConstraint(references=(25, 4));26:Arc(xCenter=0.0050, yCenter=0.0150, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=0.0000, endParam=1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(26, 4));TangentConstraint(references=(26, 10));27:SN_Center;SubnodeConstraint(references=(27, 26));28:SN_Start;SubnodeConstraint(references=(28, 26));CoincidentConstraint(references=(28, 12));29:SN_End;SubnodeConstraint(references=(29, 26));CoincidentConstraint(references=(29, 6));30:Point(x=0.0000, y=0.0000, isConstruction=False);CoincidentConstraint(references=(30, 0));CoincidentConstraint(references=(30, 1));CoincidentConstraint(references=(30, 7));31:Arc(xCenter=0.0050, yCenter=0.0050, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-3.1416, endParam=-1.5708, clockwise=False, isConstruction=False);TangentConstraint(references=(31, 7));TangentConstraint(references=(31, 1));32:SN_Center;SubnodeConstraint(references=(32, 31));33:SN_Start;SubnodeConstraint(references=(33, 31));CoincidentConstraint(references=(33, 8));34:SN_End;SubnodeConstraint(references=(34, 31));CoincidentConstraint(references=(34, 2));35:Point(x=0.0100, y=0.0000, isConstruction=False);MidpointConstraint(references=(35, 30, 15));CoincidentConstraint(references=(35, 10));CoincidentConstraint(references=(35, 1));36:Arc(xCenter=0.0050, yCenter=0.0050, xDir=1.0000, yDir=0.0000, radius=0.0050, startParam=-1.5708, endParam=0.0000, clockwise=False, isConstruction=False);TangentConstraint(references=(36, 1));TangentConstraint(references=(36, 10));37:SN_Center;SubnodeConstraint(references=(37, 36));38:SN_Start;SubnodeConstraint(references=(38, 36));CoincidentConstraint(references=(38, 3));39:SN_End;SubnodeConstraint(references=(39, 36));CoincidentConstraint(references=(39, 11));40:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: What shape is the main body of the CAD object?",
  "fcstd_file": "2D_0055.FCStd",
  "isconstruction_file": "2D_0055_isconstruction.json"
}