{
  "pid": 414,
  "subject": "2D",
  "answer": "A",
  "options": {
    "A": "Yes",
    "B": "No",
    "C": "Only shape",
    "D": "Only size"
  },
  "question": "Examine the following CAD code carefully to understand the 2D object it generates and answer the question based on your interpretation of the rendered image of that object.\n\n0:External;1:Line(dirX=0.9659, dirY=-0.2588, pntX=0.0493, pntY=0.0051, startParam=-0.0000, endParam=0.0080, isConstruction=False);2:SN_Start;SubnodeConstraint(references=(2, 1));CoincidentConstraint(references=(2, 0));3:SN_End;SubnodeConstraint(references=(3, 1));CoincidentConstraint(references=(3, 0));4:Circle(xCenter=0.0532, yCenter=0.0041, xDir=1.0000, yDir=0.0000, radius=0.0015, clockwise=False, isConstruction=False);DiameterConstraint(references=(4,), length=0.003 METER);5:SN_Center;SubnodeConstraint(references=(5, 4));MidpointConstraint(references=(5, 1));6:Line(dirX=0.8660, dirY=0.5000, pntX=0.0548, pntY=0.0033, startParam=-0.0010, endParam=0.0005, isConstruction=False);TangentConstraint(references=(6, 4));7:SN_Start;SubnodeConstraint(references=(7, 6));CoincidentConstraint(references=(7, 4));8:SN_End;SubnodeConstraint(references=(8, 6));CoincidentConstraint(references=(8, 1));9:Line(dirX=-0.5000, dirY=0.8660, pntX=0.0516, pntY=0.0039, startParam=-0.0006, endParam=0.0009, isConstruction=False);TangentConstraint(references=(9, 4));EqualConstraint(references=(9, 6));PerpendicularConstraint(references=(9, 6));10:SN_Start;SubnodeConstraint(references=(10, 9));CoincidentConstraint(references=(10, 4));11:SN_End;SubnodeConstraint(references=(11, 9));CoincidentConstraint(references=(11, 1));12:Line(dirX=-0.2588, dirY=-0.9659, pntX=0.0569, pntY=0.0027, startParam=-0.0004, endParam=0.0005, isConstruction=False);PerpendicularConstraint(references=(12, 1));13:SN_Start;SubnodeConstraint(references=(13, 12));CoincidentConstraint(references=(13, 3));14:SN_End;SubnodeConstraint(references=(14, 12));15:Line(dirX=-0.5000, dirY=0.8660, pntX=0.0566, pntY=0.0026, startParam=-0.0005, endParam=0.0007, isConstruction=False);16:SN_Start;SubnodeConstraint(references=(16, 15));CoincidentConstraint(references=(16, 14));17:SN_End;SubnodeConstraint(references=(17, 15));CoincidentConstraint(references=(17, 1));18:Line(dirX=-0.2588, dirY=-0.9659, pntX=0.0492, pntY=0.0047, startParam=-0.0004, endParam=0.0004, isConstruction=False);PerpendicularConstraint(references=(18, 1));EqualConstraint(references=(18, 12));19:SN_Start;SubnodeConstraint(references=(19, 18));CoincidentConstraint(references=(19, 2));20:SN_End;SubnodeConstraint(references=(20, 18));21:Line(dirX=0.8660, dirY=0.5000, pntX=0.0496, pntY=0.0046, startParam=-0.0006, endParam=0.0006, isConstruction=False);ParallelConstraint(references=(21, 6));PerpendicularConstraint(references=(21, 15));22:SN_Start;SubnodeConstraint(references=(22, 21));CoincidentConstraint(references=(22, 20));23:SN_End;SubnodeConstraint(references=(23, 21));CoincidentConstraint(references=(23, 1));24:Stop;\n\nHint: the CAD code has the following syntax:\n\nCAD code consists of a sequence of CAD commands that describe a 2D object.\nThe commands fall into two categories: primitive and constraint. \nIn total, there are five possible primitive types: \nPoint(x, y), Line(dirX, dirY, pntX, pntY, startParam, endParam), Circle(xCenter, yCenter, xDir, yDir, radius, clockwise), Arc(xCenter, yCenter, xDir, yDir, radius, clockwise, startParam, endParam), \nand Ellipse(xCenter, yCenter, xDir, yDir, radius, minorRadius, clockwise).\nx, y: the point coordinates.\ndirX, dirY: the unit direction vector.\nxCenter, yCenter: the coordinates the center point.\nclockwise: a boolean value that indicates the orientation of the unit direction vector.\npntX, pntY (Line): the coordinates of a point on the line.\nstartParam, endParam (Line): signed start/end point distances to the point (pntX, pntY).\nstartParam, endParam (Arc): start/end angles to the unit direction vector.\nAll primitives have an isConstruction boolean parameter indicating if a primitive is to be physically realized or simply serve as a reference for other primitives.\nAll constraints act on at least one primitive, indicated by the corresponding number.\n\nQuestion: Are the triangles identical in shape and size?",
  "fcstd_file": "2D_0414.FCStd",
  "isconstruction_file": "2D_0414_isconstruction.json"
}